{"version":3,"sources":["webpack:///./src/app/modules/notifications/notification-subscription.vue?4921","webpack:///./src/app/modules/notifications/notification-subscription.vue","webpack:///./src/app/modules/notifications/notification-subscription.vue?d3ed"],"names":["class","style","uk-icon","id","list","length","type","searchQuery","placeholder","getSearchList","uk-tooltip","newItem","item","index","key","showDetails","name","allRecordsFetched","selectedNotificationType","refreshPaneList","isNotificationTypeChosen","mixins","props","data","appName","this","$route","params","app_name","api","displayNewForm","resetTime","time","Date","getTime","methods","goBack","$router","push","itemId","idx","document","querySelectorAll","forEach","classList","remove","querySelector","add","editNotificationType","idParam","modifyNotificationTypeStatus","shouldEnable","console","log","updateFetchURL","url","pageNumber","handleData","dataResponse","actionResult","listOfNotificationTypes","bean","notificationType","createdOn","toLocaleString","slice","replace","isOnline","error","resetRefreshList","created","mounted","getList","watch","newAppName","oldAppName","render","__scopeId"],"mappings":"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","file":"notification-subscription-page.min.js","sourcesContent":["export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./notification-subscription.vue?vue&type=style&index=0&id=653a6310&scoped=true&lang=css\"","<style scoped>\n  .uk-dropdown-nav {\n      font-size: .975rem;\n  }\n\n  .desktop{\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 40px 1fr;\n    overflow-y: hidden;\n    border: 0px solid red;\n    padding: 15px 15px 15px 7.5px;\n  }\n\n  .adk_columns{\n  \tdisplay: grid;\n  \tgrid-template-columns: 5fr 2fr 2fr 3fr 2fr;\n  }\n\n  .back-button {\n    background-color: rgb(226 226 226);\n    border-radius: 50%;\n    place-self: center start;\n    place-items: center;\n    font-size: 0.65rem;\n    line-height: 32px;\n    font-weight: normal !important;\n    padding: 0px 7px;\n    fill: green;\n    transition: 0.25s linear;\n  }\n\n  .back-button:hover {\n      background-color: rgb(212 212 212);\n  }\n\n  .pane-list {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: auto 1fr;\n    background-color: #fff;\n    xbox-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);\n    /* border: 0.01em solid #dadada; */\n    overflow-y: hidden;\n    border-radius: 3px;\n  }\n\n  .list-row {\n    display: grid;\n    min-height: 30px;\n    grid-template-rows: auto;\n    margin-right: 10px;\n    border: .05em solid #e5e5e5;\n    border-left: .05em solid #e5e5e5;\n    background: #fff;\n    border-radius: 5px;\n  }\n\n  .list-row.active {\n    border-left: 5px solid #0077ff;\n  }\n\n  .list-row:hover {\n    background: whitesmoke;\n  }\n\n  .list-row .task-sno {\n    font-size: 0.75rem;\n    font-weight: bold;\n    font-family: Muli, sans-serif !important;\n  }\n\n  .list-row .task-created-date {\n    background: #f3d889;\n    padding: 2px 5px;\n    border-radius: 3px;\n  }\n\n  .list-row .task-status {\n    font-weight: bold;\n    font-size: 0.5rem;\n  }\n\n  .pane-detail-view{\n    display: grid;\n    grid-template-rows: 1fr;\n  }\n</style>\n\n<template>\n\n<div class=\"app_container\" style=\"background-color: whitesmoke;;display: flex;box-sizing: border-box;width: 100%;\">\n    <div class=\"desktop pane_list_view\" style=\"padding: 15px 15px 15px 15px; overflow-y: hidden; background: rgb(242, 242, 242); color: rgb(51, 51, 51);flex: 1 1;\">\n\n        <div class=\"adk_grid_toolbar\" style=\"grid-template-columns: auto 1fr;margin-right: 10px;\">\n\n            <div style=\"display: grid;place-self: center start;text-align: left;\">\n                <div style=\"display: grid;place-self: center start;padding-left: 0px;padding-right: 20px;color: rgba(61, 61, 61, 0.78) !important;grid-template-columns: auto auto;font-size: 0.75rem;\">\n                   <span style=\"font-size: 1rem; font-weight: bold;letter-spacing:0.5px\">\n                    Notification Types ({{list.length}})\n                   </span>\n                </div>\n            </div>\n            <div style=\"display: grid;grid-gap: 10px;grid-template-columns: auto auto;place-self: center end;text-align: right;\">\n                <div class=\"uk-inline\">\n                      <div class=\"uk-inline\">\n                           <span class=\"uk-form-icon\" uk-icon=\"icon: search;ratio:0.65\"></span>\n                           <input class=\"uk-input uk-form-width-medium uk-form-small\" style=\"border: 0.1em solid rgb(173, 173, 173);border-radius: 2px;height: 35px;width: 100%;\" type=\"text\"\n                           v-model=\"searchQuery\"\n                           placeholder=\"Search..\"\n                           v-on:keyup.enter.stop=\"getSearchList()\"\n                           >\n                      </div>\n                </div>\n                <a uk-tooltip=\"Add New Notification Type\" v-on:click=\"newItem()\" class=\" uk-button uk-button-small uk-button-default ui_button_small_green ui_button_small\"\n                style=\"cursor: pointer;background: rgb(2 119 254);color: white !important;line-height: 35px !important;min-width: 60px;border: 0em solid rgb(131, 181, 50);border-radius: 3px;\">\n                      <span class=\"\" style=\"margin-right: 5px!important;\" uk-icon=\"icon:plus;ratio:0.45\"></span>New\n                </a>\n            </div>\n\n        </div>\n\n        <div class=\"pane-list\" style=\"margin-top: 10px;background-color:#f2f2f2\">\n\n            <div class=\"adk_grid_list_content custom-scroll-bar\" style=\"display:grid;row-gap:7.5px\">\n                <div  v-bind:key=\"item.id\"\n                      v-on:click=\"showDetails(item.id,item, index)\"\n                      v-bind:id=\"'item_' + item.id\"\n                      v-for=\"item,index in list\"\n                      class=\"ui_grid_row list-row\"\n                      style=\"padding: 7px 12px; display: grid;\">\n\n                    <div class=\"list-item-row-1\" style=\"display:flex;column-gap:5px\">\n                        <div class=\"task-sno\">\n                          {{item.name}}\n                        </div>\n                        <div style=\"display:flex;column-gap:5px\">\n                          <span style=\"color:gray\"> </span>\n                          <span style=\"font-size: 0.6rem;\"></span>\n                        </div>\n                        <div style=\"display:flex;column-gap:10px;margin-left:auto\">\n                        </div>\n                        <div>\n                          <span style=\"display:none\" uk-icon=\"icon:more-vertical;ratio:0.75\"></span>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div id=\"isObserver\" class=\"ui_grid_row\" style=\"padding: 7px 12px;border-bottom: 0.0em solid rgb(229, 229, 229);display: grid;place-items: center;background: none;color: #9e9e9e;margin-right:10px\"><span v-show=\"allRecordsFetched\">No more available records.</span></div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"pane-detail-view\" style=\";overflow-y:hidden;flex: 2 2;\">\n\n        <div v-show=\"isNotificationTypeChosen\" style=\"display:grid;grid-template-rows:1fr;overflow-y:hidden\">\n              <notification-subscription-form v-bind:selectedNotificationType=\"selectedNotificationType\" v-on:refreshList=\"refreshPaneList()\"/>\n        </div>\n    </div>\n</div>\n\n</template>\n\n<script>\n\nimport uiListMixinLib from './../../mixins/lib/ui-list.js';\n// import {bus}                            from './../../config_admin.js';\n\nexport default {\n  mixins: [uiListMixinLib],\n  props: [],\n  data: function () {\n    return {\n      appName: this.$route.params.app_name,\n      api: 'notification-event-types',\n      displayNewForm: false,\n      isNotificationTypeChosen: false,\n      selectedNotificationType: {},\n      resetTime: {\n        time: new Date().getTime()\n      }\n    };\n  },\n  methods: {\n\n    goBack () {\n      this.$router.push({\n        name: 'admin-dashboard',\n        params: {}\n      });\n    },\n    newItem () {\n      // This prop is passed to the new-form component, so that the watcher in it resets the form whenever this value changes.\n      // Reason : Since the new-form component is alive, any data entered into it stays on the form until its reset.\n      // Since we cannot pass events from parent to child to reset the data of the newFormObject={}, without using event-bus,\n      // we are just changing the value of a prop, that can be watched everytime when the \"New\" button is clicked. The watcher resets the newFormObject={}\n      // whenever there is a change in this prop's value.\n      this.resetTime = {\n        time: new Date().getTime()\n      };\n      this.isNotificationTypeChosen = false;\n      this.displayNewForm = true;\n      this.selectedNotificationType = {};\n    },\n    showDetails (itemId, item, idx) {\n      // Toggle the active state of the list-item\n      document.querySelectorAll('.active').forEach(item => item.classList.remove('active'));\n      document.querySelector('#' + 'item_' + itemId).classList.add('active');\n\n      this.displayNewForm = false;\n      this.selectedNotificationType = item; // {id:itemId};\n      this.isNotificationTypeChosen = true;\n    },\n    editNotificationType (idParam) {\n      this.$router.push({\n        name: 'edit-notification-type',\n        params: {\n          id: idParam\n        }\n      });\n    },\n    modifyNotificationTypeStatus (idParam, shouldEnable) {\n      console.log('NotificationType : ' + idParam + (shouldEnable) ? ' will be enabled.' : ' will be disabled.');\n    },\n    updateFetchURL () {\n      const searchQuery = (this.searchQuery !== '') ? this.searchQuery : 'all';\n      this.url = './' + this.api + '/list/' + this.pageNumber + '/' + searchQuery;\n    },\n    handleData (dataResponse) {\n      if (dataResponse.data.actionResult === 1) {\n        const listOfNotificationTypes = (dataResponse.data.bean);// .slice(0, 10);\n\n        // Since we are pulling 20 records per page, then if the resulting size is lesser than 20, then it means\n        // no more records are available.\n        if (listOfNotificationTypes.length < 20) {\n          this.allRecordsFetched = true;\n        }\n\n        listOfNotificationTypes.forEach(notificationType => {\n          if (notificationType.createdOn !== null) {\n            notificationType.createdOn = new Date(notificationType.createdOn).toLocaleString()\n              .slice(0, 17)\n              .replace(',', '')\n              .replace('T', ' ');\n          }\n\n          if (notificationType.isOnline !== null && notificationType.isOnline === 1) {\n            notificationType.isOnline = 'LIVE';\n          }\n\n          this.list.push(notificationType);\n        });\n      } else {\n        console.error('Error', dataResponse);\n        // alert(\"Error : \" + dataResponse)\n      }\n    },\n    refreshPaneList () {\n      console.log('Refresh pane list');\n      this.resetRefreshList();\n    }\n  },\n  created: function () {\n\n  },\n  mounted: function () {\n    this.updateFetchURL();\n    this.getList(); // Call to the /mixins/lib/ui-list.js mixin-file which makes a callback to handleData() method in this component.\n  },\n  watch: {\n\n    // https://router.vuejs.org/en/advanced/data-fetching.html for more options.\n    /*\n            // call again the method if the route changes\n            '$route': 'fetchData' where fetchData is a method defined above.\n        */\n\n    '$route.params.app_name' (newAppName, oldAppName) {\n      console.log('oldAppName', oldAppName);\n      // console.log('AppName changed from ' + oldAppName + ' to ' + newAppName);\n      this.appName = newAppName;\n    }\n\n  }\n};\n\n</script>\n","import { render } from \"./notification-subscription.vue?vue&type=template&id=653a6310&scoped=true\"\nimport script from \"./notification-subscription.vue?vue&type=script&lang=js\"\nexport * from \"./notification-subscription.vue?vue&type=script&lang=js\"\n\nimport \"./notification-subscription.vue?vue&type=style&index=0&id=653a6310&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-653a6310\"\n\nexport default script"],"sourceRoot":""}