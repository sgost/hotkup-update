{"version":3,"sources":["webpack:///./src/app/modules/task/taskview.vue","webpack:///./src/app/modules/task/taskview.vue?dfce","webpack:///./src/app/modules/task/taskview.vue?14ef"],"names":["class","style","uk-icon","xmlns","viewBox","width","height","fill","d","href","id","data-name","transform","stroke","stroke-linecap","stroke-width","data-svg","points","x","y","uk-tooltip","value","type","uk-close","onsubmit","for","taskObject","name","parentTaskName","exitNewSubTaskView","size","sno","showNewSubTaskForm","exitSubTaskView","viewSubTask","data-img-id","createdById","src","onerror","ownedBy","title","createdOnAgo","createdOnFormatted","category","undefined","processTemplateInfo","label","stageName","assigneesString","showTaskInfoContainerDiv","showTaskInfoContainer","hideTaskInfoContainer","openContextMenu","$event","onMenuClick","onSubmenuClick","autocomplete","searchHooksSubmenu","hooksSubmenuSearchQuery","customers","customer","onCustomerSelect","isSelected","hookSubmenuCurrentlySelected","customerBranches","customerBranch","onCustomerBranchSelect","customerContacts","customerContact","onCustomerContactSelect","replyToMessage","msg","convertMsgToTask","taskInfo","getRecord","embeddingViewName","xuk-switcher","displayTab","subTasksCount","checklistCount","remindersCount","timelogsCount","transitionCount","attachedFormsCount","description","selectedTabKey","customersNames","customerBranchesNames","isActivityTabInitialized","embeddingComponentName","uniqueComponentId","loggedInUser","addNewSubTask","isSubtasksTabInitialized","checklistItem","activityName","placeholder","saveChecklistItem","checklistLabel","isChecklistsTabInitialized","checklist","item","index","updateChecklistItemStatus","status","updatedBy","split","updatedOn","updatedOnFormatted","updatedOnAgo","cancelChecklistItem","isRemindersTabInitialized","openAddReminderModal","reminderList","length","usersString","dateTimeFormatted","cancelReminderItem","isTimelogsTabInitialized","timelogItem","duration","onkeypress","min","dir","tabindex","durationUnit","saveTimelog","timelogLabel","timelogList","cancelTimelogItem","isTransitionsTabInitialized","taskTransitionsList","fromStatus","toStatus","startTime","startDate","endTime","endDate","createdBy","durationInHours","durationUnitFormatted","isFormsTabInitialized","taskSNO","assignees","availableMembers","parentTaskId","resetTime","uk-modal","reminderItem","availableItems","tagProperty","displayLabelProps","maxTagsToDisplay","searchProperty","data_tabindex","updateReminderReceiversEmitEvent","dateTime","saveReminder","reminderLabel","mixins","props","data","taskId","this","$route","params","subtaskId","time","Date","getTime","preferredTab","actionType","potentialMembersList","customersUnfiltered","customerBranchesUnfiltered","customerContactsUnfiltered","hookSubmenu","isSubmenuCustomersSelected","isSubmenuCustomerBranchesSelected","isSubmenuCustomerContactsSelected","isHooksTabInitialized","methods","UIkit","modal","document","querySelector","show","closeAddReminderModal","hide","loadCustomerHooks","console","log","JSON","parse","localStorage","getItem","forEach","customerHookIds","customerHookData","push","selectedCustomers","filter","cust","numberOfSelectedCustomers","getElementById","innerHTML","map","join","loadCustomerBranchesHooks","branch","customerBranchHookIds","customerBranchHookData","selectedCustomerBranches","custBranch","numberOfSelectedCustomerBranches","loadCustomerContactsHooks","customerContactHookIds","customerContactHookData","numberOfSelectedCustomerContacts","custContact","trim","toLowerCase","includes","updateCustomerHook","post_url","action","form","customerId","axios","post","then","dataResponse","actionResult","errorMsg","message","notification","pos","timeout","newWorkgroupInfo","bean","$emit","catch","errorResponse","exceptionMsg","exception","updateCustomerBranchHook","customerBranchId","addEventListener","handleBodyClickEvent","removeEventListener","event","foundTaskInfoContainer","target","closest","selectedSubmenuName","setAttribute","left","setTimeout","focus","notificationLabel","first","updatedItem","dayjs","format","fromNow","response","btnText","enableHTMLElement","parentElement","classList","remove","previousActivityName","addedItem","previousActivityname","updateReminderItem","resetReminderPotentialMembers","loadPotentialMembersForReminders","url","categoryId","get","handlePotentialReminderMembers","error","handleUnpaginatedListDataError","mapFunction","user","firstName","lastName","mappedArrayOfUser","members","potentialMembers","userObj","userIds","userId","Array","from","updateReminderStatus","isNew","toISOString","loadReminders","get_url","callbackFunction","reminders","users","callbackError","sendTaskToWorker","ComlinkWorker","fetch","Comlink","proxy","updateTimelogItem","alert","loadTimelogs","getUnpaginatedList","e","loadTaskTransitions","handleUnpaginatedListData","listKey","handleFetchedReminders","handleFetchedTimelogs","handleFetchedTaskTransitions","timelogs","startDateTime","startDateTimeFormatted","convertUTCDateFromServerToLocalDate","endDateTime","endDateTimeFormatted","parseFloat","toFixed","someFunction","elem","goToHomePage","$router","refreshSubTasksList","sendNewSubTaskEvent","emit","parentTask","modalKey","switcher","displayRelevantTab","tabKey","querySelectorAll","add","categoryInfo","statusInfo","createdByName","createdOn","dueDateTime","dueDateTimeFormatted","dueDateTimeAgo","categoriesNamesArray","categories","cat","categoriesString","assigneesNamesArray","assignee","subTaskIds","ownerId","msgId","evt","top","contains","handleClickEventOnBody","hideContextMenu","foundParent","created","computed","storeCounter","$store","getters","count","mounted","off","on","eventType","isModalViewed","unmounted","modalIdsToBeDeletedFromDOM","modalId","removeChild","watch","newVal","oldVal","taskIdToBeViewed","newTaskId","oldTaskId","newSubTaskId","oldSubTaskId","render","__scopeId"],"mappings":"qQAEOA,MAAM,GAAGC,MAAA,2F,GACPD,MAAM,8C,GACJA,MAAM,c,EAAa,eAA4B,QAAtBE,UAAQ,QAAM,S,GACvCF,MAAM,oB,GAEwBC,MAAA,iI,GACxBD,MAAM,UAAUC,MAAA,oG,EACkN,eAAqL,OAAhLE,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,M,CAAM,eAA2F,QAArFC,KAAK,eAAeC,EAAE,4D,MAC9UC,KAAK,IAAIR,MAAA,oN,GACJD,MAAM,Y,EAAyE,eAAsD,QAAhDA,MAAM,aAAW,C,eAAC,QAAI,eAAe,SAAZ,Y,eAAY,U,MAGnIC,MAAA,sG,EACD,eAAwF,OAAnFA,MAAA,0EAAuE,UAAM,G,GAIhEA,MAAA,iI,GACjBD,MAAM,UAAUC,MAAA,oG,EAC8M,eAAqL,OAAhLE,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,M,CAAM,eAA2F,QAArFC,KAAK,eAAeC,EAAE,4D,MAC1UC,KAAK,IAAIR,MAAA,oN,GACJD,MAAM,Y,EAAyE,eAAuC,QAAjCA,MAAM,aAAY,YAAQ,G,GAGxHC,MAAA,sG,EACD,eAA4H,OAAvHA,MAAA,kHAA2G,UAAM,G,GAI5EA,MAAA,iI,GACzCA,MAAA,sG,GACIA,MAAA,8G,GAaqBA,MAAA,2J,GAEzBA,MAAA,+B,GACIA,MAAA,iG,GACIA,MAAA,4J,GACIA,MAAA,oI,GAEJA,MAAA,4J,GACIA,MAAA,mH,iBAA8G,O,GAASD,MAAM,mB,GAEjIC,MAAA,4J,GACIA,MAAA,8H,GAGRA,MAAA,sE,GACIA,MAAA,4J,EACD,eAA6L,OAAxLA,MAAA,sLAA0K,YAAQ,G,SAEhLA,MAAA,0L,aAMNA,MAAA,4J,EACD,eAA0L,OAArLA,MAAA,sLAA0K,SAAK,G,SACjGA,MAAA,0L,GAElFA,MAAA,4J,EACD,eAA6L,OAAxLA,MAAA,sLAA0K,YAAQ,G,GAC3KA,MAAA,0L,GAGfA,MAAA,qJ,GACEA,MAAA,wB,GACIA,MAAA,0C,IAKEA,MAAA,uB,IACED,MAAM,6BAA6BC,MAAA,wB,GAEpC,eAaM,OAbDE,MAAM,6BAA6BE,MAAM,KAAKC,OAAO,KAAKF,QAAQ,a,CACnE,eAWI,KAXDM,GAAG,WAAWC,YAAU,WAAWC,UAAU,wB,CAC9C,eAQI,KARDF,GAAG,aAAaC,YAAU,aAAaC,UAAU,uB,CAClD,eAA+K,QAAzKF,GAAG,YAAYC,YAAU,YAAYH,EAAE,qBAAqBI,UAAU,2BAA2BL,KAAK,OAAOM,OAAO,UAAUC,iBAAe,QAAQC,eAAa,QACxK,eAGI,KAHDL,GAAG,aAAaC,YAAU,aAAaC,UAAU,0B,CAClD,eAAwK,QAAlKF,GAAG,YAAYC,YAAU,YAAYH,EAAE,kBAAkBI,UAAU,uBAAuBL,KAAK,OAAOM,OAAO,UAAUC,iBAAe,QAAQC,eAAa,QACjK,eAAgL,QAA1KL,GAAG,YAAYC,YAAU,YAAYH,EAAE,aAAaI,UAAU,oCAAoCL,KAAK,OAAOM,OAAO,UAAUC,iBAAe,QAAQC,eAAa,UAE3K,eAAgL,QAA1KL,GAAG,YAAYC,YAAU,YAAYH,EAAE,sBAAsBI,UAAU,2BAA2BL,KAAK,OAAOM,OAAO,UAAUC,iBAAe,QAAQC,eAAa,QACzK,eAAgL,QAA1KL,GAAG,YAAYC,YAAU,YAAYH,EAAE,sBAAsBI,UAAU,2BAA2BL,KAAK,OAAOM,OAAO,UAAUC,iBAAe,QAAQC,eAAa,UAE3K,eAA0H,QAApHL,GAAG,iBAAiBC,YAAU,iBAAiBN,MAAM,KAAKC,OAAO,KAAKM,UAAU,uBAAuBL,KAAK,a,OAMrHN,MAAA,2E,IAaIS,GAAG,iBAAiBV,MAAM,kB,IAEtBU,GAAG,cAAcV,MAAM,e,IACrBU,GAAG,OAAOV,MAAM,0B,GAEf,eAA6D,QAAvDE,UAAQ,wBAAwBF,MAAM,W,YAC5C,eAA8H,QAAxHC,MAAA,wBAA0B,C,eAAC,cAAU,eAA4E,QAAtES,GAAG,6BAA6BT,MAAA,+B,MACjF,eAA8F,QAAxFC,UAAQ,gCAAgCF,MAAM,UAAUC,MAAA,wB,YAG9D,eAAgE,QAA1DC,UAAQ,2BAA2BF,MAAM,W,YAC/C,eAAoI,QAA9HC,MAAA,wBAA0B,C,eAAC,aAAS,eAAmF,QAA7ES,GAAG,oCAAoCT,MAAA,+B,MACvF,eAA8F,QAAxFC,UAAQ,gCAAgCF,MAAM,UAAUC,MAAA,wB,YAG9D,eAA4D,QAAtDC,UAAQ,uBAAuBF,MAAM,W,YAC3C,eAAoI,QAA9HC,MAAA,wBAA0B,C,eAAC,aAAS,eAAmF,QAA7ES,GAAG,oCAAoCT,MAAA,+B,MACvF,eAA8F,QAAxFC,UAAQ,gCAAgCF,MAAM,UAAUC,MAAA,wB,aAG/DS,GAAG,UAAUV,MAAM,qB,IACfC,MAAA,yF,GAED,eAEM,OAFDE,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,M,CAC5E,eAA2F,QAArFC,KAAK,eAAeC,EAAE,4D,OAG3BP,MAAA,kL,GAEC,eAA+L,QAAzLC,UAAQ,yBAAyBD,MAAA,yJ,aAG1CD,MAAM,6B,IAEJA,MAAM,oB,IAIEC,MAAA,gF,IACiCC,UAAQ,QAAQF,MAAM,W,GACxD,eAEM,OAFDK,MAAM,KAAKC,OAAO,KAAKF,QAAQ,YAAYD,MAAM,6BAA6Ba,WAAS,S,CAC1F,eAA0F,YAAhFT,KAAK,OAAOM,OAAO,OAAOE,eAAa,MAAME,OAAO,qB,OAKjEhB,MAAA,wB,IAKND,MAAM,oB,IAIEC,MAAA,gF,IACuCC,UAAQ,QAAQF,MAAM,W,GAC9D,eAEM,OAFDK,MAAM,KAAKC,OAAO,KAAKF,QAAQ,YAAYD,MAAM,6BAA6Ba,WAAS,S,CAC1F,eAA0F,YAAhFT,KAAK,OAAOM,OAAO,OAAOE,eAAa,MAAME,OAAO,qB,OAKjEhB,MAAA,wB,IAKND,MAAM,oB,IAIEC,MAAA,gF,IACwCC,UAAQ,QAAQF,MAAM,W,GAC/D,eAEM,OAFDK,MAAM,KAAKC,OAAO,KAAKF,QAAQ,YAAYD,MAAM,6BAA6Ba,WAAS,S,CAC1F,eAA0F,YAAhFT,KAAK,OAAOM,OAAO,OAAOE,eAAa,MAAME,OAAO,qB,OAKjEhB,MAAA,wB,IAwC1BA,MAAA,uB,IACED,MAAM,8B,IAKJC,MAAA,2E,GAEC,eAA6D,QAAvDC,UAAQ,wBAAwBF,MAAM,W,YAC5C,eAAqD,QAA/CC,MAAA,wBAA2B,iBAAa,G,GAG9C,eAA2D,QAArDC,UAAQ,sBAAsBF,MAAM,W,YAC1C,eAA0D,QAApDC,MAAA,wBAA2B,sBAAkB,G,IAY3CA,MAAA,sBAA0BD,MAAM,uB,IAC3DA,MAAM,4CAA4CC,MAAA,2kB,IAIxBA,MAAA,kH,IAItBA,MAAA,kG,IACKD,MAAM,WAAWC,MAAA,4D,GAGvB,eAAiC,QAA3BD,MAAM,IAAG,eAAW,G,IAIvBC,MAAA,kG,IACKD,MAAM,WAAYC,MAAA,gF,GAGxB,eAAuC,QAAjCD,MAAM,aAAY,YAAQ,G,IAI/BC,MAAA,sH,IAEKD,MAAM,WAAYC,MAAA,gF,GAGxB,eAAyC,QAAnCD,MAAM,aAAY,cAAU,G,IAInCC,MAAA,sH,IAEKD,MAAM,WAAYC,MAAA,gF,GAGxB,eAAwC,QAAlCD,MAAM,aAAY,aAAS,G,IAIhCC,MAAA,sH,IAEKD,MAAM,WAAYC,MAAA,gF,GAGxB,eAAwC,QAAlCD,MAAM,aAAY,aAAS,G,IAIhCC,MAAA,sH,IAEKD,MAAM,WAAYC,MAAA,gF,GAGxB,eAAwC,QAAlCD,MAAM,aAAY,aAAS,G,IAGhCC,MAAA,sH,IAEKD,MAAM,WAAWC,MAAA,gF,GAGvB,eAA0C,QAApCD,MAAM,aAAY,eAAW,G,IAGlCC,MAAA,sH,IAEKD,MAAM,WAAWC,MAAA,gF,GAGvB,eAAoC,QAA9BD,MAAM,aAAY,SAAK,G,IAG5BC,MAAA,+H,IACKD,MAAM,WAAWC,MAAA,4D,GAGvB,eAAoC,QAA9BD,MAAM,aAAY,SAAK,G,IAaYA,MAAM,oBAAoBC,MAAA,iL,IAC9DD,MAAM,qBAAqBC,MAAA,uB,IAEvBA,MAAA,8F,IAK0BA,MAAA,6G,IAC9BD,MAAM,qBAAqBC,MAAA,uB,GAE1B,eAAqK,SAA9JD,MAAM,gBAAgBC,MAAA,gIAAuH,aAAS,G,IACxJA,MAAA,qE,GAIL,eAAoK,SAA7JD,MAAM,gBAAgBC,MAAA,gIAAuH,YAAQ,G,IACvJA,MAAA,qE,IAI2BA,MAAA,6D,UAEHA,MAAA,gN,IAIGA,MAAA,mG,IACjCA,MAAA,sK,GAEG,eAKO,QALDC,UAAQ,uBAAuBF,MAAM,UAAUC,MAAA,I,CACnD,eAGM,OAHDI,MAAM,KAAKC,OAAO,KAAKF,QAAQ,YAAYD,MAAM,6BAA6Ba,WAAS,Q,CAC1F,eAA+C,QAAzCE,EAAE,IAAIC,EAAE,IAAId,MAAM,IAAIC,OAAO,OACnC,eAA+C,QAAzCY,EAAE,IAAIC,EAAE,IAAId,MAAM,KAAKC,OAAO,U,MAGxC,eAAwD,QAAlDL,MAAA,yBAA4B,mBAAe,G,UAGpBA,MAAA,6D,IAIEA,MAAA,6I,IAClCA,MAAA,oG,IACMA,MAAA,Y,IAKSA,MAAA,yB,GAIpB,eAAI,mB,UACmCD,MAAM,oBAAoBC,MAAA,uC,IAGpDD,MAAM,kB,IAGiCoB,aAAW,kEAAkEnB,MAAA,4J,GACjH,eAAgI,QAA1HC,UAAQ,QAAQF,MAAM,YAAYC,MAAA,gF,aAEJA,MAAA,sI,UAEnCA,MAAA,Y,IAGKA,MAAA,yC,UAE4BA,MAAA,wB,IAC5BA,MAAA,kD,UAMLA,MAAA,Y,UAGAA,MAAA,2C,IAGKA,MAAA,yC,UAE4BA,MAAA,wB,IAC5BA,MAAA,kD,cAQR,eAA8J,QAAxJA,MAAA,kJAAwI,aAAS,G,cAGvJ,eAA+L,QAAzLA,MAAA,oLAAyK,aAAS,G,eAS/JA,MAAA,2I,UACDA,MAAA,gF,IAE7BA,MAAA,2K,GAEG,eAKO,QALDC,UAAQ,uBAAuBF,MAAM,UAAUC,MAAA,I,CACnD,eAGM,OAHDI,MAAM,KAAKC,OAAO,KAAKF,QAAQ,YAAYD,MAAM,6BAA6Ba,WAAS,Q,CAC1F,eAA+C,QAAzCE,EAAE,IAAIC,EAAE,IAAId,MAAM,IAAIC,OAAO,OACnC,eAA+C,QAAzCY,EAAE,IAAIC,EAAE,IAAId,MAAM,KAAKC,OAAO,U,MAGxC,eAAqD,QAA/CL,MAAA,yBAA4B,gBAAY,G,UAGhBD,MAAM,oBAAoBC,MAAA,uC,IACzBA,MAAA,+C,IACAA,MAAA,iI,+wBAYxBA,MAAA,uL,UAEIA,MAAA,oC,UACAA,MAAA,oC,UACAA,MAAA,8D,UAECA,MAAA,Y,IACOA,MAAA,wC,IACNA,MAAA,kD,UAEFA,MAAA,Y,IAEEA,MAAA,kD,UAEFA,MAAA,sC,IAEEA,MAAA,oD,UAGFA,MAAA,Y,UACAA,MAAA,Y,UACAA,MAAA,sC,UAEAA,MAAA,Y,WACAA,MAAA,Y,WACAA,MAAA,sC,WAGAA,MAAA,kC,WACAA,MAAA,Y,GACH,eAA4J,QAAtJA,MAAA,kJAAwI,WAAO,G,WAElJA,MAAA,Y,GACH,eAA+L,QAAzLA,MAAA,oLAAyK,aAAS,G,IAUtKA,MAAA,oE,UACAA,MAAA,gF,IAC7BA,MAAA,mG,IACMA,MAAA,Y,GACA,eAAgD,SAAzCD,MAAM,iBAAgB,eAAW,G,IAWxCC,MAAA,Y,GACD,eAA6C,SAAtCD,MAAM,iBAAgB,YAAQ,G,IACjCA,MAAM,mBAAmBC,MAAA,oD,IAExBA,MAAA,uB,GAED,eAAwC,UAAhCoB,MAAM,WAAU,WAAO,G,GAC/B,eAAsC,UAA9BA,MAAM,UAAS,UAAM,G,GAC7B,eAAwC,UAAhCA,MAAM,WAAU,WAAO,G,GAC/B,eAA0C,UAAlCA,MAAM,YAAW,YAAQ,G,GAEnC,eAMM,OANDpB,MAAA,qEAAuE,CAC1E,eAIO,QAJDD,MAAM,UAAUE,UAAQ,iB,CAC5B,eAEM,OAFDG,MAAM,KAAKC,OAAO,KAAKF,QAAQ,YAAYD,MAAM,6BAA6Ba,WAAS,iB,CAC1F,eAA2C,WAAlCC,OAAO,yB,OAQvBhB,MAAA,yD,IAGOA,MAAA,yB,GAIlB,eAAI,mB,IAEgCA,MAAA,+C,IACAA,MAAA,mI,quBAazBA,MAAA,uL,UAEMA,MAAA,oC,UACAA,MAAA,8D,UAEAA,MAAA,Y,UAGAA,MAAA,sC,UAOAA,MAAA,iB,UAGAA,MAAA,2C,IACGA,MAAA,0C,UAKFA,MAAA,Y,GACJ,eAA+L,QAAzLA,MAAA,oLAAyK,aAAS,G,UAErLA,MAAA,uC,IAQoBA,MAAA,iF,UACAA,MAAA,gF,IAEOA,MAAA,+C,IACDA,MAAA,mI,2zBAWhCA,MAAA,0L,IAEMA,MAAA,oC,IACAA,MAAA,Y,0BAMAA,MAAA,Y,IACAA,MAAA,Y,IAOcA,MAAA,6I,UACDA,MAAA,kG,IAQbA,MAAA,wE,IAExBA,MAAA,wC,IAQFD,MAAM,wDAAwDC,MAAA,0E,GAC/D,eAAuE,UAA/DD,MAAM,yBAAyBsB,KAAK,SAASC,WAAA,I,aAC/CtB,MAAA,6DAA6DuB,SAAS,2C,IAEnEvB,MAAA,mG,IACMA,MAAA,Y,GACA,eAA0C,SAAnCD,MAAM,iBAAgB,SAAK,G,IAIxCC,MAAA,mG,IAEMA,MAAA,0B,GACA,eAAiD,SAA1CD,MAAM,iBAAgB,gBAAY,G,IACpCA,MAAM,oB,IAUXC,MAAA,Y,GACD,eAAkE,SAA3DD,MAAM,gBAAgByB,IAAI,qBAAoB,SAAK,G,IACrDxB,MAAA,uB,GAEG,eAAsB,cAAd,SAAK,G,GACb,eAAiC,cAAzB,oBAAgB,G,GAE5B,eAAoI,OAA/HA,MAAA,qEAAmE,CAAC,eAAqD,QAA/CD,MAAM,UAAUE,UAAQ,oB,OAG1GD,MAAA,Y,GACA,eAAuD,SAAhDD,MAAM,iBAAgB,sBAAkB,G,IAIrDC,MAAA,mG,IACIA,MAAA,I,IAEWA,MAAA,yB,GAGhB,eACM,OADDA,MAAA,YAAc,S,GAGvB,eAAI,mB,yUAvtBlB,eA8tBM,MA9tBN,EA8tBM,CA7tBJ,eAmqBM,MAnqBN,EAmqBM,CAlqBJ,eAA0F,MAA1F,EAA0F,CAAlE,E,eAA4B,MAAa,eAAE,EAAAyB,WAAWC,MAAI,KAClF,eAkQM,MAlQN,EAkQM,C,eAhQJ,eAWM,MAXN,EAWM,CAVF,eAKM,MALN,EAKM,CAJF,eAAia,UAAlZP,aAAU,4BAAgC,EAAAQ,eAAsB,QAAK,+BAAE,GAAAC,uBAAsB7B,MAAM,iH,CAAiH,G,kBACnO,eAEM,MAFN,EAEM,CADF,eAAqF,OAArF,EAAqF,CAA9D,eAAuD,IAA9C2B,KAAK,UAAUG,KAAK,6BAAiC,MAG7F,eAGM,MAHN,EAGM,CAFF,EACA,eAA+B,WAA1B,KAAE,eAAE,EAAAJ,WAAWK,KAAG,M,cATlB,EAAAC,sB,eAYb,eAWM,MAXN,EAWM,CAVF,eAKM,MALN,EAKM,CAJF,eAA6Z,UAA9YZ,aAAU,4BAAgC,EAAAQ,eAAqB,QAAK,+BAAE,GAAAK,oBAAmBjC,MAAM,iH,CAAiH,G,kBAC/N,eAEM,MAFN,EAEM,CADF,eAAqF,OAArF,EAAqF,CAA9D,eAAuD,IAA9C2B,KAAK,UAAUG,KAAK,6BAAiC,MAG7F,eAGM,MAHN,EAGM,CAFF,EACA,eAA+B,WAA1B,KAAE,eAAE,EAAAJ,WAAWK,KAAG,M,cATlB,EAAAG,e,eAYb,eAaM,MAbN,EAaM,CAZF,eAWM,MAXN,EAWM,CAVF,eASM,MATN,EASM,CALD,eAIsF,OAJ1EC,cAAa,EAAAT,WAAWU,YAAapC,MAAM,yCAChDqC,IAAG,uBAA2B,EAAAX,WAAWU,YAChDE,QAAQ,sEACRjC,MAAM,KAAKC,OAAO,KAClBL,MAAA,wF,kDAVC,EAAA+B,qBAAuB,EAAAE,e,eAerC,eAwNM,MAxNN,EAwNM,CAtNF,eAoNM,MApNN,EAoNM,CAnNF,eAUM,MAVN,EAUM,CATF,eAEM,MAFN,EAEM,CADF,eAA4Q,MAA5Q,EAA+O,QAAK,eAAE,EAAAR,WAAWK,KAAG,KAExQ,eAEM,MAFN,EAEM,CADF,eAAwL,MAAxL,EAAwL,C,EAAlE,eAA4D,OAA5D,EAA4D,eAA3B,EAAAL,WAAWa,SAAO,OAE7K,eAEM,MAFN,EAEM,CADF,eAAmV,MAAnV,EAAmV,CAA3M,eAAqM,QAA/LvC,MAAM,kBAAkBC,MAAA,+DAAyEuC,MAAK,WAAe,EAAAd,WAAWe,aAAY,M,eAAY,EAAAf,WAAWgB,oBAAkB,mBAG3U,eAkBM,MAlBN,EAkBM,CAjBF,eAQM,MARN,EAQM,CAPF,EACA,eAKM,YAJwM,OAAnB,EAAAhB,WAAWiB,eAAyCC,IAAtB,EAAAlB,WAAWiB,U,iBAAlO,eAGM,MAHN,EAGM,CAFJ,eAA2C,2BAAlC,EAAAjB,WAAWiB,SAAShB,MAAI,GACS,OAA9B,EAAAD,WAAWmB,0BAA+DD,IAAjC,EAAAlB,WAAWmB,qB,iBAAhE,eAAoJ,SAAnD,MAAG,eAAE,EAAAnB,WAAWmB,oBAAoBC,OAAK,I,mDAIlJ,eAGM,MAHN,EAGM,CAFF,EACA,eAAwS,YAAlQ,OAApB,EAAApB,WAAWqB,gBAA2CH,IAAvB,EAAAlB,WAAWqB,W,iBAArD,eAA0R,MAA1R,EAA0R,eAA7B,EAAArB,WAAWqB,WAAS,I,0BAE5R,eAGM,MAHN,EAGM,CAFF,EACA,eAAuO,YAAhO,eAAyN,MAAzN,EAAyN,eAAnC,EAAArB,WAAWsB,iBAAe,SAG/N,eAoLM,MApLN,EAoLM,CAnLJ,eAkLM,MAlLN,EAkLM,CAjLF,eAgLM,MAhLN,EAgLM,CA/KJ,eAGM,Y,eAFJ,eAA4O,QAArO/C,MAAA,uBAA2BmB,aAAW,uCAAuEpB,MAAM,kCAAkCE,UAAQ,yBAA8B,QAAK,+BAAE,GAAA+C,8B,oBAA5G,EAAAC,yB,eAC7F,eAAmO,QAA5NjD,MAAA,uBAA2BmB,aAAW,2BAA2DpB,MAAM,kCAAkCE,UAAQ,6BAAoC,QAAK,+BAAE,GAAAiD,2B,mBAAnH,EAAAD,2BAElF,eAwJM,MAxJN,GAwJM,CAvJJ,eAiBM,MAjBN,GAiBM,CAhBJ,eAeO,QAfD9B,aAAW,qBAA4BV,GAAE,oBAAwB,EAAAgB,WAAWhB,GAAIV,MAAM,wDAAwDE,UAAQ,iCAAsC,QAAK,+CAAO,GAAAkD,gBAAgB,EAAA1B,WAAWhB,GAAI2C,KAAM,Y,CACjP,I,YAgBJ,eAoIM,OApIM3C,GAAE,YAAgB,EAAAgB,WAAWhB,GAAIV,MAAM,gB,CACjD,eAkIM,MAlIN,GAkIM,CArHF,eAmHM,MAnHN,GAmHM,CAjHF,eAgHM,MAhHN,GAgHM,CA/GJ,eAgBM,MAhBN,GAgBM,CAfF,eAIM,OAJI,QAAK,+BAAE,GAAAsD,YAAW,6C,CAC1B,GACA,GACA,KAEF,eAIM,OAJI,QAAK,+BAAE,GAAAA,YAAW,4D,CAC1B,GACA,GACA,KAEF,eAIM,OAJI,QAAK,+BAAE,GAAAA,YAAW,4D,CAC1B,GACA,GACA,OAGN,eA6FM,MA7FN,GA6FM,CA5FF,eAUM,MAVN,GAUM,CATJ,eAIS,UAJMlC,aAAY,UAAiB,QAAK,+BAAE,GAAAmC,mBAAkBvD,MAAM,gHAAgHC,MAAA,yB,CACzL,KAIF,eAGM,MAHN,GAGM,C,eAFA,eAAyN,SAAlNuD,aAAa,MAAMlC,KAAK,OAAOZ,GAAG,oBAAyB,QAAK,iCAAE,GAAA+C,uB,uDAA+B,EAAAC,wBAAuB,IAAE1D,MAAM,iBAAiBC,MAAA,iE,mBAAhD,EAAAyD,2BACxG,OAGR,eAgFM,MAhFN,GAgFM,C,eA9EJ,eAeM,MAfN,GAeM,E,mBAdJ,eAaW,2BAbkB,EAAAC,WAAS,SAArBC,G,wBACf,eAWM,OAXI,QAAK,mBAAE,GAAAC,iBAAiBD,EAASlD,KAAKT,MAAA,gF,CAC9C,eAQM,YAPJ,eAMM,MANN,GAMM,C,eALJ,eAIO,OAJP,GAIO,CAHL,I,cADY2D,EAASE,kBAO3B,eAAuD,MAAvD,GAAuD,eAArBF,EAASjC,MAAI,I,uCAZa,+BAA5B,EAAAoC,gC,eAiBtC,eAeM,MAfN,GAeM,E,mBAdJ,eAaW,2BAbwB,EAAAC,kBAAgB,SAAlCC,G,wBACf,eAWM,OAXI,QAAK,mBAAE,GAAAC,uBAAuBD,EAAevD,KAAKT,MAAA,gF,CAC1D,eAQM,YAPJ,eAMM,MANN,GAMM,C,eALJ,eAIO,OAJP,GAIO,CAHL,I,cADYgE,EAAeH,kBAOjC,eAA6D,MAA7D,GAA6D,eAA3BG,EAAetC,MAAI,I,uCAZO,sCAA5B,EAAAoC,gC,eAiBtC,eAeM,MAfN,GAeM,E,mBAdJ,eAaW,2BAbyB,EAAAI,kBAAgB,SAAnCC,G,wBACf,eAWM,OAXI,QAAK,mBAAE,EAAAC,wBAAwBD,EAAgB1D,KAAKT,MAAA,gF,CAC5D,eAQM,YAPJ,eAMM,MANN,GAMM,C,eALJ,eAIO,OAJP,GAIO,CAHL,I,cADYmE,EAAgBN,kBAOlC,eAA8D,MAA9D,GAA8D,eAA5BM,EAAgBzC,MAAI,I,uCAZM,sCAA5B,EAAAoC,2C,YAoD1D,eAiBM,MAjBN,GAiBM,CAhBJ,eAGM,MAHN,GAGM,CAFJ,eACO,QADD3C,aAAW,4BAAmCV,GAAE,oBAAwB,EAAAgB,WAAWhB,GAAIV,MAAM,uEAAuEE,UAAQ,gCAAqC,QAAK,iDAAO,GAAAkD,gBAAgB,EAAA1B,WAAWhB,GAAI2C,KAAM,Y,iBAG1Q,eAWM,OAXM3C,GAAE,YAAgB,EAAAgB,WAAWhB,GAAIV,MAAM,gB,CACjD,eASM,MATN,GASM,CARF,eAGM,OAHI,QAAK,iCAAE,EAAAsE,eAAe,EAAAC,Q,CAC9B,GACA,KAEF,eAGM,OAHI,QAAK,iCAAE,EAAAC,iBAAiB,EAAAD,Q,CAChC,GACA,Q,oCA9MZ,EAAAvC,wB,eA0NhB,eAIM,MAJN,GAIM,CAHF,eAEM,MAFN,GAEM,CADJ,eAAoF,IAA9DyC,SAAU,EAAA/C,WAAiB,qBAAkB,iCAAE,GAAAgD,e,sCAF9D,EAAAxB,yB,eAKb,eAgZM,MAhZN,GAgZM,CA/YA,eA6EK,MA7EOxC,GAAI,EAAAiE,kBAAiB,gBAAoB3E,MAAM,mCAAmC4E,eAAA,GAAa3E,MAAA,6G,CAEzG,eAOK,MAPI,QAAK,iCAAE,GAAA4E,WAAWxB,EAAM,iBAAkBrD,MAAM,wBAAwBoB,aAAW,oCAAoCnB,MAAA,wB,CAC9H,eAKI,IALJ,GAKI,CAJF,eAEO,OAFP,GAEO,CADL,eAA2D,IAAlD0B,KAAK,cAAcG,KAAK,6BAEnC,OAGJ,eAOK,MAPI,QAAK,iCAAE,GAAA+C,WAAWxB,EAAM,cAAerD,MAAM,WAAWoB,aAAW,+B,CACxE,eAKI,IALJ,GAKI,CAJF,eAEO,OAFP,GAEO,CADH,eAAwD,IAA/CO,KAAK,WAAWG,KAAK,6BAElC,OAGN,eAQK,MARI,QAAK,iCAAE,GAAA+C,WAAWxB,EAAM,cAAerD,MAAM,WAAWoB,aAAW,8B,CACxE,eAMI,IANJ,GAMI,C,eALF,eAAuQ,QAA7NnB,MAAA,sMAAyL,eAAG,EAAAyB,WAAWoD,eAAa,M,QAAhP,EAAApD,WAAWoD,cAAa,KACtC,eAEO,OAFP,GAEO,CADH,eAAuD,IAA9CnD,KAAK,UAAUG,KAAK,6BAEjC,OAGN,eAQK,MARI,QAAK,iCAAE,GAAA+C,WAAWxB,EAAM,eAAgBrD,MAAM,YAAYoB,aAAW,+B,CAC5E,eAMI,IANJ,GAMI,C,eALF,eAAyQ,QAA9NnB,MAAA,sMAAyL,eAAG,EAAAyB,WAAWqD,gBAAc,M,QAAlP,EAAArD,WAAWqD,eAAc,KACvC,eAEO,OAFP,GAEO,CADL,eAAyD,IAAhDpD,KAAK,YAAYG,KAAK,6BAEjC,OAGJ,eAQK,MARI,QAAK,iCAAE,GAAA+C,WAAWxB,EAAM,eAAgBrD,MAAM,YAAYoB,aAAW,8B,CAC5E,eAMI,IANJ,GAMI,C,eALF,eAAsV,QAA9NnB,MAAA,sMAAyL,eAAG,EAAAyB,WAAWsD,gBAAc,M,aAAnSpC,IAA5B,EAAAlB,WAAWsD,gBAAuD,OAAzB,EAAAtD,WAAWsD,gBAAyB,EAAAtD,WAAWsD,eAAc,KACpH,eAEO,OAFP,GAEO,CADL,eAAwD,IAA/CrD,KAAK,WAAWG,KAAK,6BAEhC,OAGJ,eAOK,MAPI,QAAK,iCAAE,GAAA+C,WAAWxB,EAAM,cAAerD,MAAM,WAAWoB,aAAW,8B,CAC1E,eAK8C,IAL9C,GAK8C,C,eAJ5C,eAAmV,QAA7NnB,MAAA,sMAAyL,eAAG,EAAAyB,WAAWuD,eAAa,M,aAAhSrC,IAA3B,EAAAlB,WAAWuD,eAAqD,OAAxB,EAAAvD,WAAWuD,eAAwB,EAAAvD,WAAWuD,cAAa,KAClH,eAEO,OAFP,GAEO,CADL,eAAuD,IAA9CtD,KAAK,UAAUG,KAAK,6BAE/B,OAEJ,eAOK,MAPI,QAAK,iCAAE,GAAA+C,WAAWxB,EAAM,iBAAkBrD,MAAM,cAAcoB,aAAW,2C,CAChF,eAKgD,IALhD,GAKgD,C,eAJ9C,eAA0V,QAA/NnB,MAAA,sMAAyL,eAAG,EAAAyB,WAAWwD,iBAAe,M,aAAtStC,IAA7B,EAAAlB,WAAWwD,iBAAyD,OAA1B,EAAAxD,WAAWwD,iBAA0B,EAAAxD,WAAWwD,gBAAe,KACvH,eAEO,OAFP,GAEO,CADL,eAAuD,IAA9CvD,KAAK,UAAUG,KAAK,6BAE/B,OAEJ,eAOK,MAPI,QAAK,iCAAE,GAAA+C,WAAWxB,EAAM,WAAYrD,MAAM,QAAQoB,aAAW,mC,CACpE,eAK0C,IAL1C,GAK0C,C,eAJxC,eAAsW,QAAlOnB,MAAA,sMAAyL,eAAG,EAAAyB,WAAWyD,oBAAkB,M,aAA/SvC,IAAhC,EAAAlB,WAAWyD,oBAA+D,OAA7B,EAAAzD,WAAWyD,oBAA6B,EAAAzD,WAAWyD,mBAAkB,KAChI,eAEO,OAFP,GAEO,CADL,eAA0D,IAAjDxD,KAAK,QAAQ1B,MAAA,iCAExB,OAEJ,eAOK,MAPI,QAAK,iCAAE,GAAA4E,WAAWxB,EAAM,WAAYrD,MAAM,QAAQoB,aAAW,+B,CACpE,eAKI,IALJ,GAKI,CAJF,eAEO,OAFP,GAEO,CADL,eAAqD,IAA5CO,KAAK,QAAQG,KAAK,6BAE7B,Q,UAIN,eAgUM,OAhUOpB,GAAI,EAAAiE,kBAAiB,uBAA4B3E,MAAM,sCAAsCC,MAAA,kN,gBASxG,eAOM,MAPN,GAOM,CANF,eAKM,MALN,GAKM,CAHF,eAEM,MAFN,GAEM,eADF,EAAAyB,WAAW0D,aAAW,M,cAJP,gBAAd,EAAAC,kB,eAQb,eAYM,MAZN,GAYM,CAXF,eAUM,MAVN,GAUM,C,eATF,eAGM,YAFJ,GACA,eAA+F,MAA/F,GAA+F,eAAtB,EAAAC,gBAAc,I,cAF9D,KAAd,EAAAA,kB,eAKb,eAGM,YAFJ,GACA,eAAsG,MAAtG,GAAsG,eAA7B,EAAAC,uBAAqB,I,cAF9D,KAArB,EAAAA,4B,cAPM,UAAd,EAAAF,kB,eAab,eAKM,MALN,GAKM,CAHO,EAAAG,0B,iBAAX,eAEM,MAFN,GAEM,CADF,eAAoM,IAA1KC,uBAAwB,EAAAd,kBAA0Be,kBAAoB,EAAAA,kBAAiB,gBAA2BhF,GAAI,EAAAgB,WAAWhB,GAAYiF,aAAc,EAAAA,c,mHAHhK,aAAd,EAAAN,kB,eAMb,eAeM,MAfN,GAeM,CAdF,eAUM,MAVN,GAUM,CATF,eAQS,UARI,QAAK,iCAAE,GAAAO,kBAAkB5F,MAAM,0GAA0GC,MAAA,8K,CAClJ,GAMA,OAGG,EAAA4F,0B,iBAAX,eAEM,MAFN,GAEM,CADF,eAA+C,IAArBnF,GAAI,EAAAgB,WAAWhB,I,uDAbtB,aAAd,EAAA2E,kB,eAgBb,eA+DM,MA/DN,GA+DM,CA9DF,eASM,MATN,GASM,CARA,eAEM,MAFN,GAEM,C,eADF,eAAyI,SAAlI/D,KAAK,O,uDAAgB,EAAAwE,cAAcC,aAAY,IAAE/F,MAAM,WAAWgG,YAAY,yBAAyB/F,MAAA,yB,mBAAlF,EAAA6F,cAAcC,kBAE9C,eAIM,YAHF,eAES,UAFI,QAAK,iCAAE,GAAAE,sBAAsBjG,MAAM,0GAA0GC,MAAA,8K,CACtJ,eAA2D,OAA3D,GAA2D,eAAvB,EAAAiG,gBAAc,SAIhE,GACW,EAAAC,4B,iBAAX,eAkDM,MAlDN,GAkDM,E,mBAhDF,eA+CW,2BA/CoB,EAAAzE,WAAW0E,WAAS,SAAlCC,EAAKC,G,wBAClB,eA6CM,MA7CN,GA6CM,C,eA5CF,eACM,OADoE,QAAK,mBAAE,GAAAC,0BAA0BF,EAAMhD,IAASpD,MAAA,4G,6BAAlG,cAAXoG,EAAKG,QAAmC,cAAXH,EAAKG,U,eAE/C,eAEM,MAFN,GAEM,CADF,I,cADoB,cAAXH,EAAKG,U,eAGlB,eACM,MADN,GACM,W,QADkB,cAAXH,EAAKG,UAEoB,cAAXH,EAAKG,Q,iBAAhC,eAWM,MAXN,GAWM,CAVJ,eAGM,Y,8BAFFF,EAAK,GAAI,KACX,kBAA8E,OAA9E,GAA8E,eAA1BD,EAAKN,cAAY,KAE9C,OAAdM,EAAKI,W,iBAAhB,eAKM,MALN,GAKM,CAJJ,eAEO,OAFP,GAA0D,iBAC1C,eAAEJ,EAAKI,UAAUC,MAAK,YAEZ,OAAdL,EAAKM,W,iBAAjB,eAAkL,Q,MAA7I1G,MAAA,+DAAwEuC,MAAO6D,EAAKO,oBAAoB,MAAQ,eAAEP,EAAKQ,cAAc,IAAC,c,wEAGzI,cAAXR,EAAKG,QAAmC,cAAXH,EAAKG,Q,iBAA7D,eAEM,MAFN,GAEM,eADFF,EAAK,GAAI,KAAE,eAAED,EAAKN,cAAc,YACpC,I,sBACqE,cAAXM,EAAKG,Q,iBAA/D,eAWM,MAXN,GAWM,CAVJ,eAGM,Y,8BAFFF,EAAK,GAAI,KACX,kBAA8E,OAA9E,GAA8E,eAA1BD,EAAKN,cAAY,KAE9C,OAAdM,EAAKI,W,iBAAhB,eAKM,MALN,GAKM,CAJJ,eAEO,OAFP,GAA0D,iBAC1C,eAAEJ,EAAKI,UAAUC,MAAK,YAEZ,OAAdL,EAAKM,W,iBAAjB,eAAkL,Q,MAA7I1G,MAAA,+DAAwEuC,MAAO6D,EAAKO,oBAAoB,MAAQ,eAAEP,EAAKQ,cAAc,IAAC,c,wEAIzJ,cAAXR,EAAKG,Q,iBAAhB,eAEM,UADJ,M,sBAEoB,cAAXH,EAAKG,Q,iBAAhB,eAEM,UADJ,M,sBAEoB,cAAXH,EAAKG,QAAmC,cAAXH,EAAKG,Q,iBAA7C,eAEM,UADJ,eAA8H,KAA3HpF,aAAW,0DAA+D,QAAK,mBAAE,GAAA0F,oBAAoBT,KAAO,cAAW,kB,yEA1DjH,cAAd,EAAAhB,kB,eAgEb,eAsEM,MAtEN,GAsEM,CArES,EAAA0B,2B,iBAAX,eAoEM,MApEN,GAoEM,CAlEF,eAUM,MAVN,GAUM,CATF,eAQS,UARI,QAAK,iCAAE,GAAAC,yBAAyBhH,MAAM,0GAA0GC,MAAA,8K,CACzJ,GAMA,OAGG,EAAA8G,2B,iBAAX,eAoDM,MApDN,GAoDM,C,eAnDJ,eAA6G,MAA7G,GAAmF,uBAAoB,M,QAAvE,GAAnB,EAAAE,aAAaC,U,eAC1B,eAiDM,MAjDN,GAiDM,CAhDF,I,mBAUA,eAqCW,2BArCoB,EAAAD,cAAY,SAA1BZ,EAAKC,G,wBAClB,eAmCM,MAnCN,GAmCM,CAjCuD,YAAXD,EAAKG,Q,iBAAnD,eAAwF,MAAxF,GAAwF,eAAfF,EAAK,O,sBACpB,YAAXD,EAAKG,QAAiC,cAAXH,EAAKG,Q,iBAA/E,eAAsH,MAAtH,GAAsH,eAAfF,EAAK,O,sBACzB,cAAXD,EAAKG,Q,iBAA7E,eAAoH,MAApH,GAAoH,eAAfF,EAAK,O,sBAEnE,YAAXD,EAAKG,Q,iBAAjC,eAGM,MAHN,GAGM,CAFJ,eAAiF,YAA5E,eAAsE,OAAtE,GAAsE,eAAnBH,EAAK7D,OAAK,KAClE,eAAqG,MAArG,GAA0D,oBAAiB,eAAE6D,EAAKc,aAAW,M,sBAEzD,YAAXd,EAAKG,QAAiC,cAAXH,EAAKG,Q,iBAA3D,eAGM,MAHN,GAGM,CAFJ,eAAsD,0BAA/CH,EAAK7D,OAAO,YAA6B,GAChD,eAAqG,MAArG,GAA0D,oBAAiB,eAAE6D,EAAKc,aAAW,M,sBAEhC,cAAXd,EAAKG,Q,iBAAzD,eAGM,MAHN,GAGM,CAFJ,eAAqD,0BAA9CH,EAAK7D,OAAO,WAA4B,GAC/C,eAAuG,MAAvG,GAA4D,oBAAiB,eAAE6D,EAAKc,aAAW,M,sBAG3D,YAAXd,EAAKG,Q,iBAAhC,eAAuE,MAAvE,GAAuE,eAAjBH,EAAK/E,MAAI,I,sBACzB,YAAX+E,EAAKG,QAAiC,cAAXH,EAAKG,Q,iBAA3D,eAAoG,MAApG,GAAoG,eAAjBH,EAAK/E,MAAI,I,sBAC7B,cAAX+E,EAAKG,Q,iBAAzD,eAAkG,MAAlG,GAAkG,eAAjBH,EAAK/E,MAAI,I,sBAEpD,YAAX+E,EAAKG,Q,iBAAhC,eAAoF,MAApF,GAAoF,eAA9BH,EAAKe,mBAAiB,I,sBACtC,YAAXf,EAAKG,QAAiC,cAAXH,EAAKG,Q,iBAA3D,eAAiH,MAAjH,GAAiH,eAA9BH,EAAKe,mBAAiB,I,sBAC1C,cAAXf,EAAKG,Q,iBAAzD,eAA+G,MAA/G,GAA+G,eAA9BH,EAAKe,mBAAiB,I,sBAG/C,YAAXf,EAAKG,QAAiC,cAAXH,EAAKG,Q,iBAA7E,eAA4J,MAA5J,GAA4J,CAAzD,eAAmD,KAA3C,QAAK,mBAAE,GAAAa,mBAAmBhB,KAAO,SAAM,kB,sBAC5G,YAAXA,EAAKG,Q,iBAAhC,eAEM,MAFN,GAEM,CADJ,M,sBAEoC,cAAXH,EAAKG,Q,iBAAhC,eAEM,MAFN,GAEM,CADJ,M,gDA7CA,EAAAS,aAAaC,OAAM,Q,8DAhBhB,cAAd,EAAA7B,kB,eAuEb,eA8FM,MA9FN,GA8FM,CA7FS,EAAAiC,0B,iBAAX,eA4FM,MA5FN,GA4FM,CA3FF,eAyCM,MAzCN,GAyCM,CAxCA,eAGM,MAHN,GAGM,CAFD,G,eACD,eAAiI,SAA1HhG,KAAK,O,uDAAgB,EAAAiG,YAAYnC,YAAW,IAAEpF,MAAM,WAAWgG,YAAY,oBAAoB/F,MAAA,yB,mBAA1E,EAAAsH,YAAYnC,iBAU5C,eAoBM,MApBN,GAoBM,CAnBF,GACD,eAiBK,MAjBL,GAiBK,C,eAhBJ,eAA0Q,S,uDAAzP,EAAAmC,YAAYC,SAAQ,IAAEC,WAAW,8BAA8BC,IAAI,IAAI1H,MAAM,WAAW2H,IAAI,MAAMrG,KAAK,SAASsG,SAAS,IAAI3H,MAAA,iI,mBAA7H,EAAAsH,YAAYC,YAC7B,eAcM,MAdN,GAcM,C,eAbJ,eAKS,U,uDALS,EAAAD,YAAYM,aAAY,IAAE7H,MAAM,YAAYU,GAAG,yBAAyBkH,SAAS,IAAI3H,MAAA,wF,CACrG,GACA,GACA,GACA,I,cAJgB,EAAAsH,YAAYM,gBAM9B,SAWN,eAKM,MALN,GAKM,CAJJ,eAGS,UAHI,QAAK,iCAAE,GAAAC,gBAAgB9H,MAAM,0GAClCC,MAAA,8K,CACJ,eAAyD,OAAzD,GAAyD,eAArB,EAAA8H,cAAY,SAI5D,G,eAEA,eAA4G,MAA5G,GAAkF,uBAAoB,M,QAAvE,GAAlB,EAAAC,YAAYd,U,eACzB,eA6CM,MA7CN,GA6CM,CA5CF,I,mBAWA,eAgCW,2BAhCoB,EAAAc,aAAW,SAAzB3B,EAAKC,G,wBACpB,eA8BU,MA9BV,GA8BU,CA5BsD,cAAXD,EAAKG,Q,iBAApD,eAA2F,MAA3F,GAA2F,eAAfF,EAAK,O,sBACE,cAAXD,EAAKG,Q,iBAA7E,eAAoH,MAApH,GAAoH,eAAfF,EAAK,O,sBAEpE,cAAXD,EAAKG,Q,iBAAhC,eAEM,MAFN,GAEM,eADFH,EAAKjB,aAAa,YACtB,I,sBAC+D,cAAXiB,EAAKG,Q,iBAAzD,eAEM,MAFN,GAEM,eADFH,EAAKjB,aAAa,YACtB,I,sBAK4C,cAAXiB,EAAKG,Q,iBAAtC,eAEM,MAFN,GAEM,eADFH,EAAKmB,UAAU,IAAC,eAAEnB,EAAKwB,cAAc,YACzC,I,sBACqE,cAAXxB,EAAKG,Q,iBAA/D,eAEM,MAFN,GAEM,CADJ,eAAkG,OAAlG,GAAkG,eAA5CH,EAAKmB,UAAU,IAAC,eAAEnB,EAAKwB,cAAY,M,sBAKpD,cAAXxB,EAAKG,Q,iBAAjC,eAEM,MAFN,GAEM,CADJ,M,sBAE8D,cAAXH,EAAKG,Q,iBAA1D,eAEM,MAFN,GAEM,CADJ,eAAuH,KAApHpF,aAAW,0DAA+D,QAAK,mBAAE,GAAA6G,kBAAkB5B,KAAO,SAAM,kB,gDAzCnH,EAAA2B,YAAYd,OAAM,Q,qCA/Cb,aAAd,EAAA7B,kB,eA+Fb,eA+BM,MA/BN,GA+BM,CA9BS,EAAA6C,6B,iBAAX,eA6BM,MA7BN,GA6BM,C,eA3BF,eAAqH,MAArH,GAA0F,wBAAqB,M,QAAxE,GAA1B,EAAAC,oBAAoBjB,U,eACjC,eAwBM,MAxBN,GAwBM,CAvBF,I,mBASA,eAaW,2BAboB,EAAAiB,qBAAmB,SAAjC9B,EAAKC,G,wBACpB,eAWQ,MAXR,GAWQ,CATF,eAAyD,MAAzD,GAAyD,eAAfA,EAAK,MAC/C,eAGM,MAHN,GAGM,CAF2B,OAAfD,EAAK+B,Y,iBAAjB,eAA8D,yBAAxB/B,EAAK+B,YAAU,I,sBAC5B,OAAb/B,EAAKgC,U,iBAAjB,eAAmE,UAAjC,MAAS,eAAEhC,EAAKgC,UAAQ,I,wBAEhE,eAAmG,OAA9FpI,MAAA,WAAuBmB,aAAYiF,EAAKiC,W,eAAajC,EAAKkC,WAAW,IAAC,eAAElC,EAAKiC,WAAS,kBAC3F,eAA6F,OAAxFrI,MAAA,WAAuBmB,aAAYiF,EAAKmC,S,eAAWnC,EAAKoC,SAAS,IAAC,eAAEpC,EAAKmC,SAAO,kBACrF,eAA2D,MAA3D,GAA2D,eAApCnC,EAAKqC,UAAUhC,MAAK,YAC3C,eAAiF,MAAjF,GAAiF,eAA3DL,EAAKsC,iBAAiB,IAAC,eAAEtC,EAAKuC,uBAAqB,Q,qBArBxE,EAAAT,oBAAoBjB,OAAM,Q,qCAJpB,gBAAd,EAAA7B,kB,eAgCb,eAIM,MAJN,GAIM,CAHS,EAAAwD,uB,iBAAX,eAEM,MAFN,GAEM,CADF,eAA8J,IAAvIlD,aAAc,EAAAA,aAAqBmD,QAAO,SAAa,EAAApH,WAAWK,IAAarB,GAAI,EAAAgB,WAAWhB,GAAWqI,UAAW,EAAAC,kB,4FAFxH,UAAd,EAAA3D,mB,0BAzYN,EAAArD,sB,eAkZf,eAKM,MALN,GAKM,CAHF,eAEM,MAFN,GAEM,CADF,eAAyE,IAAhDiH,aAAc,EAAAvI,GAAWwI,UAAW,EAAAA,W,sDAHxD,EAAAlH,wBASf,eAqDM,OArDMtB,GAAI,EAAAgF,kBAAiB,sBAA0B1F,MAAM,cAAcmJ,WAAA,I,CAC3E,eAmDM,MAnDN,GAmDM,CAlDF,GACA,eAgDO,OAhDP,GAgDO,CA9CH,eAKM,MALN,GAKM,CAJA,eAGM,MAHN,GAGM,CAFD,G,eACD,eAAyH,SAAlH7H,KAAK,O,uDAAgB,EAAA8H,aAAa5G,MAAK,IAAExC,MAAM,WAAWgG,YAAY,iBAAiB/F,MAAA,yB,mBAAlE,EAAAmJ,aAAa5G,aAGnD,eA4BM,MA5BN,GA4BM,CA1BA,eAWM,MAXN,GAWM,CAVD,GACA,eAQM,MARN,GAQM,CAPF,eAMsF,IANjE6G,eAAgB,EAAAL,iBAChBrH,KAAK,kBACL2H,YAAY,YACZC,kBAAkB,qBAAsBC,iBAAiB,IACzDC,eAAe,qBACfC,cAAc,IACT,kBAAe,iCAAE,GAAAC,iCAAiCtG,M,+BAGrF,eASM,MATN,GASM,CARF,GACA,eAMM,MANN,GAMM,C,eALF,eAGS,U,uDAHS,EAAA+F,aAAa9H,KAAI,IAAEtB,MAAM,YAAc4H,SAAS,K,CAC9D,GACA,I,cAFc,EAAAwB,aAAa9H,QAI/B,OAGR,eAGM,MAHN,GAGM,CAFD,G,eACD,eAAyG,SAAlGA,KAAK,iB,uDAA0B,EAAA8H,aAAaQ,SAAQ,IAAE5J,MAAM,WAAWC,MAAA,yB,mBAAxC,EAAAmJ,aAAaQ,gBAG7D,eAQM,MARN,GAQM,CAPF,eAIM,MAJN,GAIM,CAHA,eAES,UAFI,QAAK,iCAAE,GAAAC,iBAAiB7J,MAAM,0GAA0GC,MAAA,8K,CACjJ,eAA0D,OAA1D,GAA0D,eAAtB,EAAA6J,eAAa,OAG3D,KAGJ,Q,gMAkBC,IACfC,OAAQ,CACN,QACA,QACA,SAEFC,MAAO,CAAC,KAAM,oBAAqB,eAAgB,eAAgB,oBAAqB,mBAAoB,iBAC5GC,KAAM,WACJ,MAAO,CAELC,OAAQC,KAAKC,OAAOC,OAAOH,OAC3BI,UAAWH,KAAKC,OAAOC,OAAOC,UAC9B1I,eAAgB,KAChBI,oBAAoB,EACpBE,aAAa,EACbR,WAAY,CACVhB,GAAIyJ,KAAKzJ,GACTsE,eAAgB,EAChBC,cAAe,EACfC,gBAAiB,EACjBC,mBAAoB,GAEtB+D,UAAW,CACTqB,MAAM,IAAIC,MAAOC,WAEnBvH,uBAAuB,EACvBwH,aAAc,OAGdxE,eAAgB,WAChBJ,cAAe,CAAE6E,WAAY,MAAO5E,aAAc,IAGlDkB,aAAc,GACd2D,qBAAsB,GACtB5B,iBAAkB,GAClBc,cAAe,eACfV,aAAc,CAAE1I,GAAI,OAGpBsH,YAAa,GACbT,YAAa,CAAE7G,GAAI,OACnBqH,aAAc,cAGdI,oBAAqB,GAGrBxE,UAAW,GACXK,iBAAkB,GAClBG,iBAAkB,GAClB0G,oBAAqB,GACrBC,2BAA4B,GAC5BC,2BAA4B,GAC5BzF,eAAgB,GAChBC,sBAAuB,GACvB7B,wBAAyB,GACzBK,6BAA8B,KAC9BiH,YAAa,CACXC,4BAA4B,EAC5BC,mCAAmC,EACnCC,mCAAmC,GAGrC9F,eAAgB,cAChBG,0BAA0B,EAC1BK,0BAA0B,EAC1BM,4BAA4B,EAC5BY,2BAA2B,EAC3BO,0BAA0B,EAC1BY,6BAA6B,EAC7BW,uBAAuB,EACvBuC,uBAAuB,IAK3BC,QAAS,CAGPrE,qBAHO,WAKLmD,KAAKf,aAAe,GACpBkC,MAAMC,MAAMC,SAASC,cAAc,IAAMtB,KAAKzE,kBAAoB,wBAAwBgG,QAE5FC,sBARO,WASLL,MAAMC,MAAMC,SAASC,cAAc,IAAMtB,KAAKzE,kBAAoB,wBAAwBkG,QAE5FC,kBAXO,WAWc,WAEnB1B,KAAKxG,UAAY,GACjBmI,QAAQC,IAAI,iCAAkC5B,KAAKxG,WACnD,IAAMA,EAAYqI,KAAKC,MAAMC,aAAaC,QAAQ,cAIlDxI,EAAUyI,SAAQ,SAAAxI,GACwB,OAApC,EAAKlC,WAAW2K,iBAClB,EAAK3K,WAAW2K,gBAAgBD,SAAQ,SAAAE,GAClCA,EAAiB5F,MAAM,KAAK,KAAO9C,EAASlD,KAC9CkD,EAASE,YAAa,MAK5B,EAAKH,UAAU4I,KAAK3I,GACpB,EAAKiH,oBAAoB0B,KAAK3I,MAGhCkI,QAAQC,IAAI,sCAAuC5B,KAAKxG,WAExD,IAAM6I,EAAoBrC,KAAKxG,UAAU8I,QAAO,SAAAC,GAAG,OAAKA,EAAK5I,cACvD6I,EAA4BH,EAAkBtF,OAChDyF,EAA4B,IAAKnB,SAASoB,eAAe,8BAA8BC,UAAY,IAAMF,EAA4B,cAEzIxC,KAAK7E,eAAiBkH,EAAkBM,KAAI,SAAAJ,GAAG,OAAKA,EAAK/K,QAAMoL,KAAK,OAEtEC,0BAxCO,WAwCsB,WAE3B7C,KAAKnG,iBAAmB,GACxB8H,QAAQC,IAAI,yCAA0C5B,KAAKnG,kBAC3D,IAAMA,EAAmBgI,KAAKC,MAAMC,aAAaC,QAAQ,sBAIzDnI,EAAiBoI,SAAQ,SAAAa,GACuB,OAA1C,EAAKvL,WAAWwL,uBAClB,EAAKxL,WAAWwL,sBAAsBd,SAAQ,SAAAe,GACxCA,EAAuBzG,MAAM,KAAK,KAAOuG,EAAOvM,KAClDuM,EAAOnJ,YAAa,MAK1B,EAAKE,iBAAiBuI,KAAKU,GAC3B,EAAKnC,2BAA2ByB,KAAKU,MAEvCnB,QAAQC,IAAI,8CAA+C5B,KAAKnG,kBAGhE,IAAMoJ,EAA2BjD,KAAKnG,iBAAiByI,QAAO,SAAAY,GAAS,OAAKA,EAAWvJ,cACjFwJ,EAAmCF,EAAyBlG,OAC9DoG,EAAmC,IAAK9B,SAASoB,eAAe,qCAAqCC,UAAY,IAAMS,EAAmC,cAE9JnD,KAAK5E,sBAAwB6H,EAAyBN,KAAI,SAAAO,GAAS,OAAKA,EAAW1L,QAAMoL,KAAK,OAEhGQ,0BArEO,WAqEsB,WAE3BpD,KAAKhG,iBAAmB,GACxB2H,QAAQC,IAAI,yCAA0C5B,KAAKhG,kBAC3D,IAAMA,EAAmB6H,KAAKC,MAAMC,aAAaC,QAAQ,sBAIzDhI,EAAiBiI,SAAQ,SAAAhI,GACwB,OAA3C,EAAK1C,WAAW8L,wBAClB,EAAK9L,WAAW8L,uBAAuBpB,SAAQ,SAAAqB,GACzCnB,iBAAiB5F,MAAM,KAAK,KAAOtC,EAAgB1D,KACrD0D,EAAgBN,YAAa,MAKnC,EAAKK,iBAAiBoI,KAAKnI,GAC3B,EAAK2G,2BAA2BwB,KAAKnI,MAEvC0H,QAAQC,IAAI,8CAA+C5B,KAAKhG,kBAEhE,IAAMuJ,EAAmCvD,KAAKhG,iBAAiBsI,QAAO,SAAAkB,GAAU,OAAKA,EAAY7J,cAAYoD,OACzGwG,EAAmC,IAAKlC,SAASoB,eAAe,qCAAqCC,UAAY,IAAMa,EAAmC,eAEhKjK,mBA9FO,WA8Fe,WACpBqI,QAAQC,IAAI,2BAA6B5B,KAAKpG,6BAA+B,OAASoG,KAAKzG,yBAEjD,+BAAtCyG,KAAKpG,6BACqC,KAAxCoG,KAAKzG,wBAAwBkK,OAC/BzD,KAAKxG,UAAYwG,KAAKxG,UAAU8I,QAAO,SAAA7I,GAAO,OAAKA,EAASjC,KAAKkM,cAAcC,SAAS,EAAKpK,wBAAwBmK,kBAErH1D,KAAKxG,UAAYwG,KAAKU,oBAEuB,sCAAtCV,KAAKpG,6BAC8B,KAAxCoG,KAAKzG,wBAAwBkK,OAC/BzD,KAAKnG,iBAAmBmG,KAAKnG,iBAAiByI,QAAO,SAAAxI,GAAa,OAAKA,EAAetC,KAAKkM,cAAcC,SAAS,EAAKpK,wBAAwBmK,kBAE/I1D,KAAKnG,iBAAmBmG,KAAKW,2BAEgB,sCAAtCX,KAAKpG,+BAC8B,KAAxCoG,KAAKzG,wBAAwBkK,OAC/BzD,KAAKhG,iBAAmBgG,KAAKhG,iBAAiBsI,QAAO,SAAArI,GAAc,OAAKA,EAAgBzC,KAAKkM,cAAcC,SAAS,EAAKpK,wBAAwBmK,kBAEjJ1D,KAAKhG,iBAAmBgG,KAAKY,6BAInCgD,mBArHO,SAqHanK,GAAU,WACtBoK,EAAW,+BACXC,EAASrK,EAASE,WAAa,MAAQ,SAEvCoK,EAAO,CACXhE,OAAQC,KAAKD,OACbiE,WAAYvK,EAASlD,GAAK,IAAMkD,EAASjC,KACzCsM,OAAQA,GAGVnC,QAAQC,IAAI,mCAAoCmC,GAIhDE,MAAMC,KAAK,IAA8BL,EAAUE,GAChDI,MAAK,SAACC,GAIL,GAHAzC,QAAQC,IAAI,sCACZD,QAAQC,IAAIwC,GAE2B,IAAnCA,EAAatE,KAAKuE,aAoEf,CACL,IAAMC,EAAYF,EAAatE,KAAMyE,QASrC,OARApD,MAAMqD,aAAa,gDAAkDF,EAAU,CAC7EjI,OAAQ,SACRoI,IAAK,cACLC,QAAS,OAKJ,EA7EP,EAAKC,iBAAmBP,EAAatE,KAAK8E,KAE1C,IAAM,EAAyB,QAAhBb,EAAKD,OAAmB,UAAY,UA0CnD3C,MAAMqD,aAAN,kNAE6D,EAF7D,+DAGyC,CACvCnI,OAAQ,UACRoI,IAAK,cACLC,QAAS,MAGX,IAAMrC,EAAoB,EAAK7I,UAAU8I,QAAO,SAAAC,GAAG,OAAKA,EAAK5I,cACvD6I,EAA4BH,EAAkBtF,OAElDsE,SAASoB,eAAe,8BAA8BC,UADpDF,EAA4B,EACoC,IAAMA,EAA4B,aAElC,GAGpE,EAAKrH,eAAiBkH,EAAkBM,KAAI,SAAAJ,GAAG,OAAKA,EAAK/K,QAAMoL,KAAK,MAKpE,EAAKiC,MAAM,cAAe,OAc7BC,OAAM,SAAUC,GACfpD,QAAQC,IAAI,cAAemD,GAC3B,IAAMC,EAAeD,EAAcjF,KAAKmF,UAOxC,OALA9D,MAAMqD,aAAa,kDAAoDQ,EAAe,IAAK,CACzF3I,OAAQ,SACRoI,IAAK,cACLC,QAAS,OAEJ,MAGbQ,yBArOO,SAqOmBpL,GAAgB,WAClC+J,EAAW,sCACXC,EAAShK,EAAeH,WAAa,MAAQ,SAE7CoK,EAAO,CACXhE,OAAQC,KAAKD,OACbiE,WAAYlK,EAAekK,WAC3BmB,iBAAkBrL,EAAevD,GAAK,IAAMuD,EAAetC,KAC3DsM,OAAQA,GAGVnC,QAAQC,IAAI,yCAA0CmC,GAItDE,MAAMC,KAAK,IAA8BL,EAAUE,GAChDI,MAAK,SAACC,GAIL,GAHAzC,QAAQC,IAAI,4CACZD,QAAQC,IAAIwC,GAE2B,IAAnCA,EAAatE,KAAKuE,aA0Ff,CACL,IAAMC,EAAYF,EAAatE,KAAMyE,QASrC,OARApD,MAAMqD,aAAa,gDAAkDF,EAAU,CAC7EjI,OAAQ,SACRoI,IAAK,cACLC,QAAS,OAKJ,EAnGP,EAAKC,iBAAmBP,EAAatE,KAAK8E,KAE1C,IAAM,EAAyB,QAAhBb,EAAKD,OAAmB,UAAY,UA+DnD3C,MAAMqD,aAAN,yNAEoE,EAFpE,+DAGyC,CACvCnI,OAAQ,UACRoI,IAAK,cACLC,QAAS,MAIX,IAAMzB,EAA2B,EAAKpJ,iBAAiByI,QAAO,SAAAY,GAAS,OAAKA,EAAWvJ,cACjFwJ,EAAmCF,EAAyBlG,OAEhEsE,SAASoB,eAAe,qCAAqCC,UAD3DS,EAAmC,EACoC,IAAMA,EAAmC,aAGzC,GAG3E,EAAK/H,sBAAwB6H,EAAyBN,KAAI,SAAAO,GAAS,OAAKA,EAAW1L,QAAMoL,KAAK,MAE9F,EAAKiC,MAAM,cAAe,OAgB7BC,OAAM,SAAUC,GACfpD,QAAQC,IAAI,cAAemD,GAC3B,IAAMC,EAAeD,EAAcjF,KAAKmF,UAOxC,OALA9D,MAAMqD,aAAa,kDAAoDQ,EAAe,IAAK,CACzF3I,OAAQ,SACRoI,IAAK,cACLC,QAAS,OAEJ,MAGb5L,yBA5WO,WA6WLkH,KAAKjH,uBAAwB,EAC7BsI,SAASC,cAAc,QAAQ8D,iBAAiB,QAASpF,KAAKqF,sBAAsB,IAEtFrM,sBAhXO,WAiXLgH,KAAKjH,uBAAwB,EAC7BsI,SAASC,cAAc,QAAQgE,oBAAoB,QAAStF,KAAKqF,sBAAsB,IAEzFA,qBApXO,SAoXeE,GACpB,IAAMC,EAAyBD,EAAME,OAAOC,QAAQ,wBACrB,OAA3BF,GAEFxF,KAAKhH,yBAGTG,YA3XO,SA2XMwM,EAAqBhN,GAEhCqH,KAAKpG,6BAA+B+L,EACpCtE,SAASoB,eAAe,qBAAqBmD,aAAa,cAAe,UAAYjN,GACrF0I,SAASoB,eAAe,eAAe3M,MAAM+P,KAAO,QAGpDC,YAAW,kBAAMzE,SAASoB,eAAe,qBAAqBsD,UAAS,MAEzE3M,eApYO,WAqYLiI,SAASoB,eAAe,eAAe3M,MAAM+P,KAAO,MAEtDlJ,oBAvYO,SAuYcT,GAAM,WAMnB2H,EAAW,8BAEXE,EAAO,CACXhE,OAAQC,KAAKD,OACbS,WAAY,gBACZ5E,aAAcM,EAAKN,aACnBS,OAAQ,aAIV4H,MAAMC,KAAK,IAA8BL,EAAUE,GAChDI,MAAK,SAACC,GAIL,GAAuC,IAAnCA,EAAatE,KAAKuE,aAgCf,CACL,IAAMC,EAAYF,EAAatE,KAAMyE,QAMrC,OALApD,MAAMqD,aAAa,gDAAkDF,EAAU,CAC7EjI,OAAQ,SACRoI,IAAK,cACLC,QAAS,OAEJ,EAtCPxI,EAAKG,OAAS0H,EAAK1H,OACnB,IAAM2J,EAAoB,gCAG1B,GAAqC,OAAjC5B,EAAatE,KAAK8E,KAAKqB,MAAgB,CACzC,IAAMC,EAAc9B,EAAatE,KAAK8E,KAAKqB,MAE3C,EAAK1O,WAAW0E,UAAUgG,SAAQ,SAAA/F,GAC5BA,EAAKN,eAAiBsK,EAAYvN,QACpCuD,EAAKG,OAAS6J,EAAY7J,OAC1BH,EAAKI,UAAY4J,EAAY5J,UACN,OAAnBJ,EAAKM,YAEPN,EAAKO,mBAAqB0J,MAAMjK,EAAKM,UAAY,KAAK4J,OAAO,oBAC7DlK,EAAKQ,aAAeyJ,MAAMjK,EAAKM,UAAY,KAAK6J,UAChD1E,QAAQC,IAAI,8BAA+B1F,EAAKM,gBAMxD2E,MAAMqD,aAAN,iMAE4CwB,EAF5C,+DAGyC,CACvC3J,OAAQ,UACRoI,IAAK,cACLC,QAAS,SAcdI,OAAM,SAAUC,GACfpD,QAAQC,IAAI,cAAemD,GAC3B,IAAMC,EAAeD,EAAcuB,SAASxG,KAAKmF,UAUjD,OARA9D,MAAMqD,aAAa,kDAAoDQ,EAAe,IAAK,CACzF3I,OAAQ,SACRoI,IAAK,cACLC,QAAS,MAGXrD,SAASoB,eAAe,cAAcC,UAAY6D,QAClDvG,KAAKwG,kBAAkBnF,SAASoB,eAAe,gBACxC,MAGbrG,0BArdO,SAqdoBF,EAAMqJ,GAAO,WAChC1B,EAAW,8BAEXE,EAAO,CACXhE,OAAQC,KAAKD,OACbS,WAAY,gBACZ5E,aAAcM,EAAKN,aACnBS,OAAyB,cAAhBH,EAAKG,OAA0B,YAAc,WAIxD4H,MAAMC,KAAK,IAA8BL,EAAUE,GAChDI,MAAK,SAACC,GAIL,GAFAzC,QAAQC,IAAI,2BAA4BwC,GAED,IAAnCA,EAAatE,KAAKuE,aAuCf,CACL,IAAMC,EAAYF,EAAatE,KAAMyE,QAMrC,OALApD,MAAMqD,aAAa,gDAAkDF,EAAU,CAC7EjI,OAAQ,SACRoI,IAAK,cACLC,QAAS,OAEJ,EA7CPxI,EAAKG,OAAS0H,EAAK1H,OACnB,IAAM2J,EAAoB,0BAE1B,GAAqC,OAAjC5B,EAAatE,KAAK8E,KAAKqB,MAAgB,CACzC,IAAMC,EAAc9B,EAAatE,KAAK8E,KAAKqB,MAE3C,EAAK1O,WAAW0E,UAAUgG,SAAQ,SAAA/F,GAC5BA,EAAKN,eAAiBsK,EAAYvN,QACpCuD,EAAKG,OAAS6J,EAAY7J,OAC1BH,EAAKI,UAAY4J,EAAY5J,UACN,OAAnBJ,EAAKM,YAEPN,EAAKO,mBAAqB0J,MAAMjK,EAAKM,UAAY,KAAK4J,OAAO,oBAC7DlK,EAAKQ,aAAeyJ,MAAMjK,EAAKM,UAAY,KAAK6J,UAChD1E,QAAQC,IAAI,8BAA+B1F,EAAKM,YAGlDsJ,YAAW,WACTP,EAAME,OAAOgB,cACPnF,cAAc,cACdoF,UAAUC,OAAO,eACtB,SAOTxF,MAAMqD,aAAN,iMAE4CwB,EAF5C,+DAGyC,CACvC3J,OAAQ,UACRoI,IAAK,cACLC,QAAS,SAcdI,OAAM,SAAUC,GACfpD,QAAQC,IAAI,cAAemD,GAC3B,IAAMC,EAAeD,EAAcuB,SAASxG,KAAKmF,UAUjD,OARA9D,MAAMqD,aAAa,kDAAoDQ,EAAe,IAAK,CACzF3I,OAAQ,SACRoI,IAAK,cACLC,QAAS,MAGXrD,SAASoB,eAAe,cAAcC,UAAY6D,QAClDvG,KAAKwG,kBAAkBnF,SAASoB,eAAe,gBACxC,MAGb3G,kBAriBO,WAqiBc,WACb+H,EAAW,8BAEXE,EAAO,CACXhE,OAAQC,KAAKD,OACbS,WAAYR,KAAKrE,cAAc6E,WAC/B5E,aAAcoE,KAAKrE,cAAcC,aACjCgL,qBAAsB5G,KAAKrE,cAAciL,sBAG3C,QAAwCnO,IAApCuH,KAAKrE,cAAcC,cAAyE,KAA3CoE,KAAKrE,cAAcC,aAAa6H,OAAe,CAElG,IAAMa,EAAW,4CAMjB,OALAnD,MAAMqD,aAAa,gDAAkDF,EAAU,CAC7EjI,OAAQ,SACRoI,IAAK,cACLC,QAAS,OAEJ,EAITT,MAAMC,KAAK,IAA8BL,EAAUE,GAChDI,MAAK,SAACC,GAIL,GAHAzC,QAAQC,IAAI,uBACZD,QAAQC,IAAIwC,GAE2B,IAAnCA,EAAatE,KAAKuE,aAsCf,CACL,IAAM,EAAYD,EAAatE,KAAMyE,QAMrC,OALApD,MAAMqD,aAAa,gDAAkD,EAAU,CAC7EnI,OAAQ,SACRoI,IAAK,cACLC,QAAS,OAEJ,EA5CP,GAAqC,OAAjCN,EAAatE,KAAK8E,KAAKqB,MAAgB,CAEzC,IAAMY,EAAYzC,EAAatE,KAAK8E,KAAKqB,MAGjB,QAApBlC,EAAKvD,YAC2B,OAA9B,EAAKjJ,WAAW0E,YAAsB,EAAK1E,WAAW0E,UAAY,IAEtE,EAAK1E,WAAW0E,UAAUmG,KAAK,CAC7BxG,aAAciL,EAAUlO,MACxB0D,OAAQ,SAEmB,WAApB0H,EAAKvD,YAEd,EAAKjJ,WAAW0E,UAAUgG,SAAQ,SAAC/F,GAC7B6H,EAAK+C,uBAAyB5K,EAAKN,eACrCM,EAAKN,aAAeiL,EAAUlO,UAMtC,EAAKgD,cAAgB,CAAE6E,WAAY,OACnC,EAAKzE,eAAiB,WAEtB,IAAMiK,EAAuD,WAAlC,EAAKrK,cAAc6E,WAA2B,0BAA4B,wBAErGW,MAAMqD,aAAN,qMAE8CwB,EAF9C,iEAG2C,CACzC3J,OAAQ,UACRoI,IAAK,cACLC,QAAS,SAcdI,OAAM,SAAUC,GACfpD,QAAQC,IAAI,cAAemD,GAC3B,IAAMC,EAAeD,EAAcuB,SAASxG,KAAKmF,UAUjD,OARA9D,MAAMqD,aAAa,kDAAoDQ,EAAe,IAAK,CACzF3I,OAAQ,SACRoI,IAAK,cACLC,QAAS,MAGXrD,SAASoB,eAAe,cAAcC,UAAY6D,QAClDvG,KAAKwG,kBAAkBnF,SAASoB,eAAe,gBACxC,MAKbsE,mBAjoBO,SAioBa7K,GAClB8D,KAAKL,cAAgB,kBACrBK,KAAKf,aAAe/C,EACpB8D,KAAKgH,iCAIPC,iCAxoBO,WAwoB6B,WAC9BC,EAAM,GAQVA,EAAM,qCAAuClH,KAAKzI,WAAW4P,WAM7D,IAEElD,MAAMmD,IAAI,IAA8BF,GACrC/C,MAAK,SAACC,GAGL,EAAKiD,+BAA+BjD,MAErCU,OAAM,SAACwC,GACN,EAAKC,+BAA+BD,MAExC,MAAOA,GACP3F,QAAQ2F,MAAM,uCAAwCA,KAI1DD,+BAvqBO,SAuqByBjD,GAAc,WAItCoD,EAAc,SAACC,GACnB,MAAO,CACLlR,GAAIkR,EAAKlR,GACTmR,UAAWD,EAAKC,UAChBC,SAAUF,EAAKE,SACfhO,YAAY,IAIViO,EAAoBxD,EAAatE,KAAK8E,KAAKiD,QAAQlF,IAAI6E,GAC7DxH,KAAKS,qBAAuBmH,EAE5B,IAAME,EAAmB,GAEzBF,EAAkB3F,SAAQ,SAACwF,GACzB,IAAMM,EAAU,CACdxR,GAAIkR,EAAKlR,GACTmR,UAAWD,EAAKC,UAChBC,SAAUF,EAAKE,SACfhO,YAAY,GAGoB,OAA9B,EAAKsF,aAAa+I,cAAkDvP,IAA9B,EAAKwG,aAAa+I,SAC1D,EAAK/I,aAAa+I,QAAQ/F,SAAQ,SAACgG,GAC7BR,EAAKlR,KAAO0R,IAAUF,EAAQpO,YAAa,MAGnDmO,EAAiB1F,KAAK2F,MAGxB/H,KAAKnB,iBAAmBiJ,GAG1Bd,8BA5sBO,WA4sB0B,WACzBY,EAAoB5H,KAAKS,qBAEzBqH,EAAmB,GAEzBF,EAAkB3F,SAAQ,SAACwF,GACzB,IAAMM,EAAU,CACdxR,GAAIkR,EAAKlR,GACTmR,UAAWD,EAAKC,UAChBC,SAAUF,EAAKE,SACfhO,YAAY,GAGoB,OAA9B,EAAKsF,aAAa+I,cAAkDvP,IAA9B,EAAKwG,aAAa+I,SAC1D,EAAK/I,aAAa+I,QAAQ/F,SAAQ,SAACgG,GAC7BR,EAAKlR,KAAO0R,IAAUF,EAAQpO,YAAa,MAGnDmO,EAAiB1F,KAAK2F,MAGxB/H,KAAKnB,iBAAmBiJ,GAG1BtI,iCApuBO,SAouB2BM,GAEhC,IAAMkI,EAAUE,MAAMC,KAAKrI,GAAM6C,KAAI,SAAAzG,GAAG,OAAKA,EAAK3F,MAClDyJ,KAAKf,aAAa+I,QAAUA,GAE9BI,qBAzuBO,SAyuBelM,GACpB,IAAM2H,EAAW,mBAEXE,EAAO,CACXxN,GAAI2F,EAAK3F,GACTwJ,OAAQC,KAAKD,OACb1H,MAAO4G,aAAa5G,MACpBoH,SAAUR,aAAaQ,SACvBuI,QAAS/I,aAAa+I,SAOxB/D,MAAMC,KAAK,IAA8BL,EAAUE,GAChDI,MAAK,SAACC,GAIL,GAAuC,IAAnCA,EAAatE,KAAKuE,aAaf,CACL,IAAMC,EAAYF,EAAatE,KAAMyE,QAMrC,OALApD,MAAMqD,aAAa,gDAAkDF,EAAU,CAC7EjI,OAAQ,SACRoI,IAAK,cACLC,QAAS,OAEJ,EAnBP,IAAMsB,EAAoB,0BAE1B7E,MAAMqD,aAAN,iMAE4CwB,EAF5C,+DAGyC,CACvC3J,OAAQ,UACRoI,IAAK,cACLC,QAAS,SAcdI,OAAM,SAAUC,GACfpD,QAAQC,IAAI,cAAemD,GAC3B,IAAMC,EAAeD,EAAcuB,SAASxG,KAAKmF,UAUjD,OARA9D,MAAMqD,aAAa,kDAAoDQ,EAAe,IAAK,CACzF3I,OAAQ,SACRoI,IAAK,cACLC,QAAS,MAGXrD,SAASoB,eAAe,cAAcC,UAAY6D,QAClDvG,KAAKwG,kBAAkBnF,SAASoB,eAAe,gBACxC,MAGb/C,aAnyBO,WAmyBS,WACRmE,EAAW,mBAEXwE,EAAgC,OAAxBrI,KAAKf,aAAa1I,GAC1BwN,EAAO,CACXxN,GAAIyJ,KAAKf,aAAa1I,GACtBwJ,OAAQC,KAAKD,OACb5I,KAAM6I,KAAKf,aAAa9H,KACxBkB,MAAO2H,KAAKf,aAAa5G,MACzB2P,QAAShI,KAAKf,aAAa+I,SAGzBhI,KAAKf,aAAaQ,WAIpBsE,EAAKtE,SAAW,IAAIY,KAAKL,KAAKf,aAAaQ,UAAU6I,eAOvDrE,MAAMC,KAAK,IAA8BL,EAAUE,GAChDI,MAAK,SAACC,GAIL,GAAuC,IAAnCA,EAAatE,KAAKuE,aAoBf,CACL,IAAMC,EAAYF,EAAatE,KAAMyE,QAMrC,OALApD,MAAMqD,aAAa,gDAAkDF,EAAU,CAC7EjI,OAAQ,SACRoI,IAAK,cACLC,QAAS,OAEJ,EA1BP,EAAKzF,aAAe,CAAE1I,GAAI,OAE1B,EAAKoJ,cAAgB,eACrB,EAAKqH,gCACL,EAAKuB,gBACL,EAAK/G,wBAEL,IAAMwE,EAAqBqC,EAAS,sBAAwB,oBAE5DlH,MAAMqD,aAAN,qMAE8CwB,EAF9C,iEAG2C,CACzC3J,OAAQ,UACRoI,IAAK,cACLC,QAAS,SAcdI,OAAM,SAAUC,GACfpD,QAAQC,IAAI,cAAemD,GAC3B,IAAMC,EAAeD,EAAcuB,SAASxG,KAAKmF,UAUjD,OARA9D,MAAMqD,aAAa,kDAAoDQ,EAAe,IAAK,CACzF3I,OAAQ,SACRoI,IAAK,cACLC,QAAS,MAGXrD,SAASoB,eAAe,cAAcC,UAAY6D,QAClDvG,KAAKwG,kBAAkBnF,SAASoB,eAAe,gBACxC,MAGbvF,mBA52BO,SA42BahB,GAAM,WAGlB2H,EAAW,qBACXE,EAAO,CACXxN,GAAI2F,EAAK3F,GACT8F,OAAQ,aAIV4H,MAAMC,KAAK,IAA8BL,EAAUE,GAChDI,MAAK,SAACC,GAIL,GAAiC,YAA7BA,EAAatE,KAAKzD,OAiBf,CACL,IAAMiI,EAAYF,EAAatE,KAAMyE,QAMrC,OALApD,MAAMqD,aAAa,gDAAkDF,EAAU,CAC7EjI,OAAQ,SACRoI,IAAK,cACLC,QAAS,OAEJ,EAvBP,EAAKzF,aAAe,CAAE1I,GAAI,OAC1B,EAAKyQ,gCACL,EAAKuB,gBAEL,IAAMvC,EAAoB,sBAE1B7E,MAAMqD,aAAN,qMAE8CwB,EAF9C,iEAG2C,CACzC3J,OAAQ,UACRoI,IAAK,cACLC,QAAS,SAcdI,OAAM,SAAUC,GACfpD,QAAQC,IAAI,cAAemD,GAC3B,IAAMC,EAAeD,EAAcuB,SAASxG,KAAKmF,UAUjD,OARA9D,MAAMqD,aAAa,kDAAoDQ,EAAe,IAAK,CACzF3I,OAAQ,SACRoI,IAAK,cACLC,QAAS,MAGXrD,SAASoB,eAAe,cAAcC,UAAY6D,QAClDvG,KAAKwG,kBAAkBnF,SAASoB,eAAe,gBACxC,MAGb8F,cAr6BO,WAq6BU,WAGHC,EAAU,oBAAsBxI,KAAKzI,WAAWhB,GAChDkS,EAAmB,SAACrE,GAExBA,EAAatE,KAAOsE,EAGpBzC,QAAQC,IAAI,mCAAoC,EAAKrK,WAAWhB,GAAI6N,GAEpE,EAAKtH,aAAe,GACpB,IAAM4L,EAAYtE,EAAatE,KAAK8E,KAEV,EAAKrN,WAAWsD,eAAxB,OAAd6N,EAAuDA,EAAU3L,OAAkD,EAEvH2L,EAAUzG,SAAQ,SAAC/F,GAEK,OAAlBA,EAAKuD,WASPvD,EAAKe,kBAAoBkJ,MAAMjK,EAAKuD,SAAW,KAAK2G,OAAO,oBAC3DzE,QAAQC,IAAI,4BAA6B1F,EAAKuD,WAGhDvD,EAAKc,YAAcd,EAAKyM,MAAMhG,KAAI,SAAA8E,GAAG,OAAKA,EAAKC,UAAY,IAAMD,EAAKE,YAAU/E,KAAK,MAErF,EAAK9F,aAAasF,KAAKlG,OAGrB0M,EAAgB,SAACtB,GACrB3F,QAAQ2F,MAAM,yCACd3F,QAAQ2F,MAAMA,GACdnG,MAAMqD,aAAa,oDAAsD8C,EAAO,CAC9EjL,OAAQ,SACRoI,IAAK,cACLC,QAAS,OA1CJ,SA8CMmE,IA9CN,8FA8CT,qGAEIlH,QAAQC,IAAI,0CAFhB,SAGUkH,cAAcC,MAAM,IAA8BP,EAC7BQ,QAAQC,MAAMR,GACdO,QAAQC,MAAML,IAL7C,2CA9CS,wBAuDT,OADAC,KACO,GAcfK,kBA1+BO,SA0+BYhN,GACjB8D,KAAKpC,aAAe,iBACpBoC,KAAK5C,YAAclB,GAErByB,YA9+BO,WA8+BQ,WACPkG,EAAW,kBAEXwE,EAA+B,OAAvBrI,KAAK5C,YAAY7G,GACzBwN,EAAO,CACXxN,GAAIyJ,KAAK5C,YAAY7G,GACrBwJ,OAAQC,KAAKD,OACb9E,YAAa+E,KAAK5C,YAAYnC,YAC9BoC,SAAU2C,KAAK5C,YAAYC,SAC3BK,aAAcsC,KAAK5C,YAAYM,cAMjC,YAAyBjF,IAArBsL,EAAK9I,aAAkD,OAArB8I,EAAK9I,aAA6C,KAArB8I,EAAK9I,aACtEkO,MAAM,sCACC,QAGa1Q,IAAlBsL,EAAK1G,UAA4C,OAAlB0G,EAAK1G,UAAuC,KAAlB0G,EAAK1G,UAChE8L,MAAM,iCACC,QAGiB1Q,IAAtBsL,EAAKrG,cAAoD,OAAtBqG,EAAKrG,cAA+C,KAAtBqG,EAAKrG,cACxEyL,MAAM,yCACC,QA0BTlF,MAAMC,KAAK,IAA8BL,EAAUE,GAChDI,MAAK,SAACC,GAIL,GAAuC,IAAnCA,EAAatE,KAAKuE,aAkBf,CACL,IAAMC,EAAYF,EAAatE,KAAMyE,QAMrC,OALApD,MAAMqD,aAAa,gDAAkDF,EAAU,CAC7EjI,OAAQ,SACRoI,IAAK,cACLC,QAAS,OAEJ,EAxBP,EAAKtH,YAAc,CAAE7G,GAAI,OAEzB,EAAKqH,aAAe,cACpB,EAAKwL,eAEL,IAAMpD,EAAqBqC,EAAS,qBAAuB,mBAE3DlH,MAAMqD,aAAN,qMAE8CwB,EAF9C,iEAG2C,CACzC3J,OAAQ,UACRoI,IAAK,cACLC,QAAS,SAcdI,OAAM,SAAUC,GACfpD,QAAQC,IAAI,cAAemD,GAC3B,IAAMC,EAAeD,EAAcuB,SAASxG,KAAKmF,UAUjD,OARA9D,MAAMqD,aAAa,kDAAoDQ,EAAe,IAAK,CACzF3I,OAAQ,SACRoI,IAAK,cACLC,QAAS,MAGXrD,SAASoB,eAAe,cAAcC,UAAY6D,QAClDvG,KAAKwG,kBAAkBnF,SAASoB,eAAe,gBACxC,MAGb3E,kBAnlCO,SAmlCY5B,GAAM,WAGjB2H,EAAW,oBACXE,EAAO,CACXxN,GAAI2F,EAAK3F,GACT8F,OAAQ,aAIV4H,MAAMC,KAAK,IAA8BL,EAAUE,GAChDI,MAAK,SAACC,GAIL,GAAiC,YAA7BA,EAAatE,KAAKzD,OAgBf,CACL,IAAMiI,EAAYF,EAAatE,KAAMyE,QAMrC,OALApD,MAAMqD,aAAa,gDAAkDF,EAAU,CAC7EjI,OAAQ,SACRoI,IAAK,cACLC,QAAS,OAEJ,EAtBP,EAAKtH,YAAc,CAAE7G,GAAI,OACzB,EAAK6S,eAEL,IAAMpD,EAAoB,2BAE1B7E,MAAMqD,aAAN,qMAE8CwB,EAF9C,iEAG2C,CACzC3J,OAAQ,UACRoI,IAAK,cACLC,QAAS,SAcdI,OAAM,SAAUC,GACfpD,QAAQC,IAAI,cAAemD,GAC3B,IAAMC,EAAeD,EAAcuB,SAASxG,KAAKmF,UAUjD,OARA9D,MAAMqD,aAAa,kDAAoDQ,EAAe,IAAK,CACzF3I,OAAQ,SACRoI,IAAK,cACLC,QAAS,MAGXrD,SAASoB,eAAe,cAAcC,UAAY6D,QAClDvG,KAAKwG,kBAAkBnF,SAASoB,eAAe,gBACxC,MAGb2G,aA3oCO,WA4oCL,IACE,IAAMlC,EAAM,mBAAqBlH,KAAKzI,WAAWhB,GAEjDyJ,KAAKqJ,mBAAmB,WAAYnC,GACpC,MAAOoC,GACPH,MAAMG,KAGVC,oBAppCO,WAqpCL,IACE,IAAMrC,EAAM,2BAA6BlH,KAAKzI,WAAWhB,GAEzDyJ,KAAKqJ,mBAAmB,mBAAoBnC,GAC5C,MAAOoC,GACPH,MAAMG,KAKVE,0BA/pCO,SA+pCoBC,EAAS3J,GAClB,cAAZ2J,EAA2BzJ,KAAK0J,uBAAuB5J,GACtC,aAAZ2J,EAA0BzJ,KAAK2J,sBAAsB7J,GACzC,qBAAZ2J,GAAkCzJ,KAAK4J,6BAA6B9J,IAE/EyH,+BApqCO,SAoqCyBD,GAC9B3F,QAAQ2F,MAAM,uCAAwCA,IAExDoC,uBAvqCO,SAuqCiBtF,KAGxBuF,sBA1qCO,SA0qCgBvF,GAAc,WAInCpE,KAAKnC,YAAc,GACnB,IAAMgM,EAAWzF,EAAatE,KAAK8E,KAEV5E,KAAKzI,WAAWuD,cAAxB,OAAb+O,EAAqDA,EAAS9M,OAAiD,EAEnH8M,EAAS5H,SAAQ,SAAC/F,GACW,OAAvBA,EAAK4N,gBAQP5N,EAAK6N,uBAAyB,EAAKC,oCAAoC9N,EAAK4N,gBAGrD,OAArB5N,EAAK+N,cAQP/N,EAAKgO,qBAAuB,EAAKF,oCAAoC9N,EAAK+N,cAI5E,EAAKpM,YAAYuE,KAAKlG,OAI1B0N,6BA/sCO,SA+sCuBxF,GAAc,WAI1CpE,KAAKhC,oBAAsB,GAC3B,IAAMA,EAAsBoG,EAAatE,KAAK8E,KAEV5E,KAAKzI,WAAWwD,gBAAxB,OAAxBiD,EAAkEA,EAAoBjB,OAAmD,EAE7IiB,EAAoBiE,SAAQ,SAAC/F,GACA,OAAvBA,EAAK4N,gBACP5N,EAAK6N,uBAAyB,EAAKC,oCAAoC9N,EAAK4N,eAE5E5N,EAAKkC,UAAYlC,EAAK6N,uBAAuBxN,MAAM,KAAK,GACxDL,EAAKiC,UAAYjC,EAAK6N,uBAAuBxN,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAK,IAAML,EAAK6N,uBAAuBxN,MAAM,KAAK,GAAGA,MAAM,KAAK,IAG/G,OAArBL,EAAK+N,cACP/N,EAAKgO,qBAAuB,EAAKF,oCAAoC9N,EAAK+N,aAC1E/N,EAAKoC,QAAUpC,EAAKgO,qBAAqB3N,MAAM,KAAK,GACpDL,EAAKmC,QAAUnC,EAAKgO,qBAAqB3N,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAK,IAAML,EAAKgO,qBAAqB3N,MAAM,KAAK,GAAGA,MAAM,KAAK,IAGxG,YAAtBL,EAAKwB,eACPxB,EAAKuC,sBAAwB,MAC7BvC,EAAKsC,gBAAkB2L,WAAWjO,EAAKmB,SAAW,IAAI+M,QAAQ,IAGhE,EAAKpM,oBAAoBoE,KAAKlG,OAIlCmO,aA/uCO,SA+uCOC,GAAQ3I,QAAQC,IAAI0I,IAClCC,aAhvCO,WAivCLvK,KAAKwK,QAAQpI,KAAK,CAChB5K,KAAM,OACN0I,OAAQ,MAGZuK,oBAtvCO,WAwvCLzK,KAAK6E,MAAM,sBAAuB,KAGpC6F,oBA3vCO,WA6vCL,UAAIC,KAAK,kBAAmB,CAC1BC,WAAY5K,KAAKzI,WACjBsT,SAAU,kBAIdpP,cAnwCO,WAswCL,OADAuE,KAAK0K,uBACE,GAOThT,mBA7wCO,WA8wCLsI,KAAKnI,oBAAqB,GAG5BC,gBAjxCO,WAkxCLkI,KAAKwK,QAAQpI,KAAK,CAChB5K,KAAM,kBACN0I,OAAQ,CACNH,OAAQC,KAAKC,OAAOC,OAAOH,OAC3BI,UAAW,UAIfH,KAAKzI,WAAWhB,GAAKyJ,KAAKC,OAAOC,OAAOH,OACxCC,KAAKjI,aAAc,EACnBiI,KAAKvI,eAAiB,KACtBuI,KAAKnI,oBAAqB,EAC1BmI,KAAKzF,YACL4G,MAAM2J,SAASzJ,SAASoB,eAAezC,KAAKxF,kBAAoB,kBAAkB+G,KAAK,IAEzFwJ,mBAjyCO,WAsyCL,OADA/K,KAAKtF,WAAW,KAAMsF,KAAK9E,iBACpB,GA+BTR,WAr0CO,SAq0CK4O,EAAG0B,GAEbhL,KAAK9E,eAAiB8P,EAItB9C,MAAMC,KAAK9G,SAAS4J,iBAAiB,IAAMjL,KAAKxF,kBAAoB,uBAC9DyH,SAAQ,SAAA/F,GAAG,OAAKA,EAAKwK,UAAUC,OAAO,gBAElC,OAAN2C,EAEFA,EAAE7D,OAAOiB,UAAUwE,IAAI,aAEV,OAAN5B,GAAsC,OAAxBtJ,KAAK9E,eAE1BmG,SAASC,cAAc,IAAMtB,KAAKxF,kBAAoB,sBAAwBwF,KAAK9E,gBAC1EwL,UAAUwE,IAAI,cAIvBvJ,QAAQC,IAAI,iDACXsG,MAAMC,KAAK9G,SAAS4J,iBAAiB,IAAMjL,KAAKxF,kBAAoB,uBAAuB,GAAIkM,UAAUwE,IAAI,cAGpF,aAAxBlL,KAAK9E,gBAAkC8E,KAAK3E,yBAIf,aAAxB2E,KAAK9E,gBAAkC8E,KAAKtE,yBAIpB,cAAxBsE,KAAK9E,gBAAmC8E,KAAKhE,2BAWrB,cAAxBgE,KAAK9E,gBAAmC8E,KAAKpD,0BAIrB,aAAxBoD,KAAK9E,gBAAkC8E,KAAK7C,yBAIpB,gBAAxB6C,KAAK9E,gBAAqC8E,KAAKjC,4BAIvB,UAAxBiC,KAAK9E,gBAA+B8E,KAAKtB,wBAEhDsB,KAAKtB,uBAAwB,GAJ7BsB,KAAKjC,6BAA8B,EAJnCiC,KAAK7C,0BAA2B,EAJhC6C,KAAKpD,2BAA4B,GAXjCoD,KAAKhE,4BAA6B,EAElC8J,YAAW,WACRoC,MAAMC,KAAK9G,SAAS4J,iBAAiB,eAC/BhJ,SAAQ,SAAAhG,GACLA,EAAUyK,UAAUC,OAAO,kBAEpC,MAXH3G,KAAKtE,0BAA2B,EAJhCsE,KAAK3E,0BAA2B,GAqCpCd,UAp4CO,WAo4CM,WAYT,QAAwB9B,IAApBuH,KAAKzI,YAAgD,OAApByI,KAAKzI,WACxC,OAAO,EAEJ,QAA2BkB,IAAvBuH,KAAKzI,WAAWhB,IAA2C,OAAvByJ,KAAKzI,WAAWhB,GAC3D,OAAO,EAGT,IAAMiS,EAAU,eAAiBxI,KAAKzI,WAAWhB,GAC3CkS,EAAmB,SAACrE,GAGxB,GADAA,EAAatE,KAAOsE,EACkB,GAAlCA,EAAatE,KAAKuE,aAAmB,CACvC,IAAM9M,EAAa6M,EAAatE,KAAK8E,KAC/BrN,EAAW4T,aAAa3T,KAAOD,EAAW4T,aAAaxS,MACvDpB,EAAWiB,SAAWjB,EAAW4T,aAGrC5T,EAAW6T,WAAuC,OAA1B7T,EAAW6T,WAAsB7T,EAAW6T,WAAa,GAGtD,OAAzB7T,EAAWgH,YACbhH,EAAWU,YAAcV,EAAWgH,UAAUhC,MAAM,KAAK,GACzDhF,EAAW8T,cAAgB9T,EAAWgH,UAAUhC,MAAM,KAAK,IAGhC,OAAzBhF,EAAW+T,YAEb/T,EAAWgB,mBAAqB4N,MAAM5O,EAAW+T,UAAY,KAAKlF,OAAO,oBACzE7O,EAAWe,aAAe6N,MAAM5O,EAAW+T,UAAY,KAAKjF,WAG7B,OAA7B9O,EAAWuS,gBAQbvS,EAAWuS,cAAgB,EAAKE,oCAAoCzS,EAAWuS,eAC/EnI,QAAQC,IAAI,8BAA+BrK,EAAWuS,gBAGzB,OAA3BvS,EAAWgU,cAObhU,EAAWiU,qBAAuBrF,MAAM5O,EAAWgU,YAAc,KAAKnF,OAAO,UAC7E7O,EAAWkU,eAAiBtF,MAAM5O,EAAWgU,YAAc,KAAKlF,UAIhE9O,EAAWgU,YAAc,EAAKvB,oCAAoCzS,EAAWgU,aAC7E5J,QAAQC,IAAI,4BAA6BrK,EAAWiU,uBAGtD,IAAME,EAAuB,GACC,OAA1BnU,EAAWoU,iBAAiDlT,IAA1BlB,EAAWoU,aAC/CpU,EAAWoU,WAAW1J,SAAQ,SAAC2J,GAAUF,EAAqBtJ,KAAKwJ,EAAIpU,SACvED,EAAWsU,iBAAmBH,EAAqB9I,KAAK,OAG9B,OAAxBrL,EAAWiB,UAA0D,OAArCjB,EAAWiB,SAAS+H,eACtD,EAAKA,aAAehJ,EAAWiB,SAAS+H,aACxC,EAAKwK,sBAGP,IAAMe,EAAsB,GAC5BvU,EAAWqH,UAAUqD,SAAQ,SAAC8J,GAAeD,EAAoB1J,KAAK2J,EAASpT,UAC/EpB,EAAWsB,gBAAkBiT,EAAoBlJ,KAAK,MAExB,OAA1BrL,EAAWyU,WAAuBzU,EAAWoD,cAAgBpD,EAAWyU,WAAWjP,OAAiBxF,EAAWoD,cAAgB,EAEtG,OAAzBpD,EAAW0E,WACb1E,EAAWqD,eAAiBrD,EAAW0E,UAAUc,OAEjDxF,EAAW0E,UAAUgG,SAAQ,SAAA/F,GACJ,OAAnBA,EAAKM,YAEPN,EAAKO,mBAAqB0J,MAAMjK,EAAKM,UAAY,KAAK4J,OAAO,oBAC7DlK,EAAKQ,aAAeyJ,MAAMjK,EAAKM,UAAY,KAAK6J,UAChD1E,QAAQC,IAAI,8BAA+B1F,EAAKM,gBAKpDjF,EAAWqD,eAAiB,EAI9BrD,EAAWyD,mBAAqBzD,EAAWyD,mBAEhB,OAAvBzD,EAAW0U,UAAoB1U,EAAWa,QAAUb,EAAW0U,QAAQ1P,MAAM,KAAK,IAExD,OAA1BhF,EAAW6T,iBAAiD3S,IAA1BlB,EAAW6T,aAC/C7T,EAAWqB,UAAYrB,EAAW6T,WAAWzS,OAG/C,EAAKpB,WAAaA,EAClB,EAAK0P,mCACL,EAAKsB,gBACL,EAAKa,eACL,EAAKG,sBAGL,EAAK7H,oBACL,EAAKmB,4BAILiD,YAAW,WACRoC,MAAMC,KAAK9G,SAAS4J,iBAAiB,eAC/BhJ,SAAQ,SAAAhG,GACLA,EAAUyK,UAAUC,OAAO,kBAEpC,OAGDiC,EAAgB,SAACtB,GACrB3F,QAAQ2F,MAAM,qCACd3F,QAAQ2F,MAAMA,GACdnG,MAAMqD,aAAa,oDAAsD8C,EAAO,CAC9EjL,OAAQ,SACRoI,IAAK,cACLC,QAAS,OA3IJ,SA+IMmE,IA/IN,8FA+IT,8GAEUC,cAAcC,MAAM,IAA8BP,EACrCQ,QAAQC,MAAMR,GACdO,QAAQC,MAAML,IAJrC,2CA/IS,wBAyJX,OAHEC,KAGK,GAWT5P,gBAxiDO,SAwiDUiT,EAAOC,GACtB9K,SAASoB,eAAe,YAAcyJ,GAAOpW,MAAMsW,IAAM,OAEpD/K,SAASoB,eAAe,YAAcyJ,GAAOxF,UAAU2F,SAAS,WAMnEhL,SAASoB,eAAe,YAAcyJ,GAAOpW,MAAMW,UAAY,KAC/D4K,SAASoB,eAAe,YAAcyJ,GAAOxF,UAAUC,OAAO,YAL9DtF,SAASoB,eAAe,YAAcyJ,GAAOpW,MAAMW,UAAY,WAC/D4K,SAASoB,eAAe,YAAcyJ,GAAOxF,UAAUwE,IAAI,WAQ7D7J,SAASC,cAAc,QAAQ8D,iBAAiB,QAASpF,KAAKsM,wBAAwB,IAIxFC,gBA1jDO,WA2jDLlL,SAAS4J,iBAAiB,iBAAiBhJ,SAAQ,SAAC/F,GAElDA,EAAKpG,MAAMW,UAAY,KACvByF,EAAKwK,UAAUC,OAAO,aAIxBtF,SAASC,cAAc,QAAQgE,oBAAoB,QAAStF,KAAKsM,wBAAwB,GACzFjL,SAASoB,eAAe,eAAe3M,MAAM+P,KAAO,MAEtDyG,uBArkDO,SAqkDiB/G,GACtB,IAAMiH,EAAcjH,EAAME,OAAOC,QAAQ,iBACrB,OAAhB8G,GAEFxM,KAAKuM,mBAGT7S,iBA5kDO,SA4kDWsK,GAAY,WAG5BhE,KAAKxG,UAAUyI,SAAQ,SAAAxI,GACjBA,EAASlD,KAAOyN,IAClBvK,EAASE,YAAcF,EAASE,WAChC,EAAKiK,mBAAmBnK,QAI9BM,uBAtlDO,SAslDiBoL,GAAkB,WAGxCnF,KAAKnG,iBAAiBoI,SAAQ,SAAAnI,GACxBA,EAAevD,KAAO4O,IACxBrL,EAAeH,YAAcG,EAAeH,WAC5C,EAAKuL,yBAAyBpL,SAKtC2S,QAAS,aACTC,SAAU,CACRC,aAAc,WAGZ,OAAO3M,KAAK4M,OAAOC,QAAQC,QAG/BC,QAAS,WAAY,WA+CnB,GA9CApL,QAAQC,IAAI,kDAAoD5B,KAAKxF,mBAErE,UAAIwS,IAAI,uBACR,UAAIC,GAAG,uBAAuB,SAACnN,GAC7B,EAAKvF,eAGP,UAAIyS,IAAI,wBACR,UAAIC,GAAG,wBAAwB,SAACnN,GAG9B6B,QAAQC,IAAI9B,GAEW,8BAAnBA,EAAKoN,WAAgE,8BAAnBpN,EAAKoN,WAAgE,oCAAnBpN,EAAKoN,UAC3G,EAAKxS,WAAW,KAAM,YAGtBiH,QAAQ2F,MAAM,gJAAiJxH,MA6B/JE,KAAKmN,cACP,OAAO,EAGyB,OAA9BnN,KAAKC,OAAOC,OAAOH,aAAiDtH,IAA9BuH,KAAKC,OAAOC,OAAOH,SAC3DC,KAAKjI,aAAc,EACnBiI,KAAKnI,oBAAqB,EAC1BmI,KAAKvI,eAAiB,KACtBuI,KAAKzI,WAAWhB,GAAKyJ,KAAKC,OAAOC,OAAOH,OAExCC,KAAKzF,aAG8B,OAAjCyF,KAAKC,OAAOC,OAAOC,gBAAuD1H,IAAjCuH,KAAKC,OAAOC,OAAOC,WAA4D,SAAjCH,KAAKC,OAAOC,OAAOC,YAC5GH,KAAKzI,WAAWhB,GAAKyJ,KAAKC,OAAOC,OAAOC,UACxCgB,MAAM2J,SAASzJ,SAASoB,eAAezC,KAAKxF,kBAAoB,kBAAkB+G,KAAK,GACvFvB,KAAKjI,aAAc,EACnBiI,KAAKnI,oBAAqB,EAC1BmI,KAAKzF,cAMT6S,UAAW,WAMT,IAAMC,EAA6B,CAAC,IAAMrN,KAAKzE,kBAAoB,uBAEnE8R,EAA2BpL,SAAQ,SAAAqL,GAC/B,IAAMlM,EAAQC,SAASC,cAAcgM,GACvB,OAAVlM,GACFA,EAAMqF,cAAc8G,YAAYnM,OAMxCoM,MAAO,CAQL,sBARK,SAQkBC,EAAQC,GAC3B/L,QAAQC,IAAI5B,KAAKxE,aAAayM,SAElC,iBAXK,SAWewF,EAAQC,GAMxB,OALA1N,KAAKjI,aAAc,EACnBiI,KAAKnI,oBAAqB,EAC1BmI,KAAKvI,eAAiB,KACtBuI,KAAKzI,WAAWhB,GAAKyJ,KAAK2N,iBAC1B3N,KAAKzF,aACE,GAEX,uBAnBK,SAmBmBqT,EAAWC,GACjClM,QAAQC,IAAI,wBAA0BiM,EAAY,OAASD,GAEzC,SAAdA,IACF5N,KAAKjI,aAAc,EACnBiI,KAAKvI,eAAiB,KACtBuI,KAAKD,OAAS6N,EACd5N,KAAKzI,WAAWhB,GAAKqX,EAIrB5N,KAAK3E,0BAA2B,EAChC2E,KAAKtE,0BAA2B,EAChCsE,KAAKhE,4BAA6B,EAClCgE,KAAKpD,2BAA4B,EACjCoD,KAAK7C,0BAA2B,EAChC6C,KAAKjC,6BAA8B,EACnCiC,KAAKtB,uBAAwB,EAC7BsB,KAAKiB,uBAAwB,EAC7BU,QAAQC,IAAI,8DAA+D5B,KAAK9E,gBAEhF8E,KAAKzF,cAGT,0BA3CK,SA2CsBuT,EAAcC,GACvCpM,QAAQC,IAAI,2BAA6BmM,EAAe,OAASD,EAAe,uCAE3D,SAAjBA,IACF9N,KAAKvI,eAAiBuI,KAAKzI,WAAWK,IACtCoI,KAAKzI,WAAWhB,GAAKuX,EACrB3M,MAAM2J,SAASzJ,SAASoB,eAAezC,KAAKxF,kBAAoB,kBAAkB+G,KAAK,GACvFvB,KAAKjI,aAAc,EACnBiI,KAAKzF,gB,UCviFb,GAAOyT,OAASA,GAChB,GAAOC,UAAY,kBAEJ,iB,oCCRf,W","file":"task-view-2.min.js","sourcesContent":["<template>\n\n  <div class=\"\" style=\"background:rgb(255, 255, 255, 0);overflow-y:hidden;display: flex;flex-grow: 1;\">\n    <div class=\"task_details_container task_view_container\">\n      <div class=\"task_title\"><span uk-icon=\"star\"></span> &nbsp;&nbsp;{{taskObject.name}}</div>\n      <div class=\"task_view_header\">\n\n        <div v-show=\"showNewSubTaskForm\" style=\"align-self: center;background: transparent;color: white;margin-left: 10px;padding-right:0px;border-radius: 3px;\">\n            <div class=\"tab-bar\" style=\"display: flex;column-gap: 12px;background: transparent;height: auto;border-bottom: none;\">\n                <button v-bind:uk-tooltip=\"'Go back to Parent Task - ' + parentTaskName\"  v-on:click=\"exitNewSubTaskView()\" class=\"uk-button uk-button-danger uk-button-small uk-grid-margin uk-first-column end-call-button subtask-back-button\" ><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"18\" height=\"18\" ><path fill=\"currentColor\" d=\"M12 4l1.4 1.4L7.8 11H20v2H7.8l5.6 5.6L12 20l-8-8 8-8z\"></path></svg></button>\n                <div href=\"#\" style=\"display: flex;column-gap: 10px;font-size: 0.65rem;text-transform: uppercase;place-self: center start;place-items: center;color: white;background: #6eb2ff;padding: 10px;border-radius: 3px;\">\n                    <span class=\"tab_icon\"><ui-icon name=\"subtask\" size=\"width:15px;height:15px\"/></span><span class=\"tab_label\">New <b>Sub Task</b> for</span>\n                </div>\n            </div>\n            <div style=\"text-align: center;padding: 10px 20px 5px 20px;color: rgb(37, 139, 255);place-self: center;\">\n                <div style=\"font-size: .55rem;text-transform: uppercase;font-weight: bold;\"> Task </div>\n                <div> #{{taskObject.sno}}</div>\n            </div>\n        </div>\n        <div v-show=\"viewSubTask\" style=\"align-self: center;background: transparent;color: white;margin-left: 10px;padding-right:0px;border-radius: 3px;\">\n            <div class=\"tab-bar\" style=\"display: flex;column-gap: 12px;background: transparent;height: auto;border-bottom: none;\">\n                <button v-bind:uk-tooltip=\"'Go back to Parent Task - ' + parentTaskName\" v-on:click=\"exitSubTaskView()\" class=\"uk-button uk-button-danger uk-button-small uk-grid-margin uk-first-column end-call-button subtask-back-button\" ><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"18\" height=\"18\" ><path fill=\"currentColor\" d=\"M12 4l1.4 1.4L7.8 11H20v2H7.8l5.6 5.6L12 20l-8-8 8-8z\"></path></svg></button>\n                <div href=\"#\" style=\"display: flex;column-gap: 10px;font-size: 0.65rem;text-transform: uppercase;place-self: center start;place-items: center;color: white;background: #6eb2ff;padding: 10px;border-radius: 3px;\">\n                    <span class=\"tab_icon\"><ui-icon name=\"subtask\" size=\"width:15px;height:15px\"/></span><span class=\"tab_label\">Sub Task</span>\n                </div>\n            </div>\n            <div style=\"text-align: center;padding: 10px 20px 5px 20px;color: rgb(37, 139, 255);place-self: center;\">\n                <div style=\"font-size: 0.85rem;text-transform: uppercase;font-weight: bold;color: #258bfe;letter-spacing: 1px;\"> Task </div>\n                <div> #{{taskObject.sno}}</div>\n            </div>\n        </div>\n        <div v-show=\"!showNewSubTaskForm && !viewSubTask\" style=\"align-self: center;background: transparent;color: white;margin-left: 10px;padding-right:0px;border-radius: 3px;\">\n            <div style=\"text-align: center;padding: 10px 20px 5px 20px;color: rgb(37, 139, 255);place-self: center;\">\n                <div style=\"display:flex;align-items:center;justify-content:center;flex-direction: row;min-width: 65px;\">\n                     <!--<div v-if=\"taskObject.createdBy.split(\"#\")[1]!=='Pawan Bhojanala'\" style=\"letter-spacing: 1px;width: 25px;height: 25px;background-color: rgb(240, 240, 240);padding: 10px;font-weight: bold;color: rgb(51, 51, 51);border-radius: 50%;align-items: center;justify-content: center;display: flex;border: 3px solid rgb(219,235,255);\">\n                        {{(taskObject.createdBy.split(\"#\")[1].split(\" \")[0])[0]}}{{(taskObject.createdBy.split(\"#\")[1].split(\" \")[1])[0]}}\n                     </div>-->\n                     <img v-bind:data-img-id=\"taskObject.createdById\" class=\"uk-border-pill ui-navbar-profile-image\"\n                     v-bind:src=\"'/api/us/profile/get/' + taskObject.createdById\"\n                     onerror=\"this.onerror=null;this.src='resources/images/male_default_pic.png';\"\n                     width=\"25\" height=\"25\"\n                     style=\"border: 2px solid rgb(220, 220, 220);margin-left: 0px;height:60px;width:60px;\">\n                </div>\n            </div>\n        </div>\n\n        <div v-show=\"!showNewSubTaskForm\" style=\"display: flex;flex-direction: column;padding: 5px 0px;margin: 5px 0px;height: fit-content;row-gap: 5px;width: 100%;box-sizing: border-box;\">\n\n            <div style=\"display:flex;width: 100%;\">\n                <div style=\"flex-grow: 1;display: flex;gap: 5px;flex-direction: column;justify-content: center;\">\n                    <div style=\"color: rgb(129, 129, 129);font-weight: bold;font-size: 0.50rem;border-radius: 2px;letter-spacing: 1px;display: flex;align-items: center;\">\n                        <div style=\"color: rgb(127, 126, 126);font-weight: normal;font-size: 0.5rem;text-transform: uppercase;letter-spacing: 1px;padding: 0px 0px;font-size: 0.75rem;text-transform: uppercase;font-weight: bold;color: #258bfe;letter-spacing: 1px;\">Task#{{taskObject.sno}}</div>\n                    </div>\n                    <div style=\"color: rgb(129, 129, 129);font-weight: bold;font-size: 0.50rem;border-radius: 2px;letter-spacing: 1px;display: flex;align-items: center;\">\n                        <div style=\"color: rgb(127, 126, 126);font-weight: normal;font-size: 0.5rem;letter-spacing: 1px;padding: 0px 0px;\">by <span class=\"task_created_by\"> {{taskObject.ownedBy}}</span></div>\n                    </div>\n                    <div style=\"color: rgb(129, 129, 129);font-weight: bold;font-size: 0.50rem;border-radius: 2px;letter-spacing: 1px;display: flex;align-items: center;\">\n                        <div style=\"color: rgb(127, 126, 126);font-weight: normal;font-size: 0.5rem;text-transform: uppercase;letter-spacing: 1px;5px 10px 0px\"><span class=\"task_created_on\" style=\"font-family: system-ui, 'Nunito';color: rgb(177 177 177);\" v-bind:title=\"'created ' + taskObject.createdOnAgo + '..'\"> {{taskObject.createdOnFormatted}} </span></div>\n                    </div>\n                </div>\n                <div style=\"flex-grow: 3;display: flex;gap: 5px;flex-direction: column;\">\n                    <div style=\"color: rgb(129, 129, 129);font-weight: bold;font-size: 0.50rem;border-radius: 2px;letter-spacing: 1px;display: flex;align-items: center;\">\n                        <div style=\"color: rgb(127, 126, 126);font-weight: normal;font-size: 0.55rem;text-transform: uppercase;letter-spacing: 1px;padding: 5px 10px;flex: 0 0 20%;text-align: right;\">Category</div>\n                        <div >\n                          <div style=\"font-weight: normal;font-size: 0.6rem;text-transform: capitalize;letter-spacing: 1px;padding: 3px 5px;background: rgb(239 239 239);color: #2196f3;border-radius: 3px;\" v-if=\"taskObject.category!==null && taskObject.category!==undefined\">\n                            <span> {{taskObject.category.name}} </span>\n                            <span v-if=\"taskObject.processTemplateInfo!==null && taskObject.processTemplateInfo!==undefined\"> / {{taskObject.processTemplateInfo.label}} </span>\n                          </div>\n                        </div>\n                    </div>\n                    <div style=\"color: rgb(129, 129, 129);font-weight: bold;font-size: 0.50rem;border-radius: 2px;letter-spacing: 1px;display: flex;align-items: center;\">\n                        <div style=\"color: rgb(127, 126, 126);font-weight: normal;font-size: 0.55rem;text-transform: uppercase;letter-spacing: 1px;padding: 5px 10px;flex: 0 0 20%;text-align: right;\">Stage</div>\n                        <div > <div v-if=\"taskObject.stageName!==null && taskObject.stageName!==undefined\" style=\"font-weight: normal;font-size: 0.6rem;text-transform: capitalize;letter-spacing: 1px;padding: 3px 5px;background: rgb(239 239 239);color: #2196f3;border-radius: 3px;\"> {{taskObject.stageName}} </div> </div>\n                    </div>\n                    <div style=\"color: rgb(129, 129, 129);font-weight: bold;font-size: 0.50rem;border-radius: 2px;letter-spacing: 1px;display: flex;align-items: center;\">\n                        <div style=\"color: rgb(127, 126, 126);font-weight: normal;font-size: 0.55rem;text-transform: uppercase;letter-spacing: 1px;padding: 5px 10px;flex: 0 0 20%;text-align: right;\">Assignee</div>\n                        <div > <div style=\"font-weight: normal;font-size: 0.6rem;text-transform: capitalize;letter-spacing: 1px;padding: 3px 5px;background: rgb(239 239 239);color: #2196f3;border-radius: 3px;\"> {{taskObject.assigneesString}} </div> </div>\n                    </div>\n                </div>\n                <div style=\"flex-grow: 1;display: flex;gap: 5px;flex-direction: column;justify-content: flex-start;align-items: flex-end;padding-right: 20px;\">\n                  <div style=\"padding-top:10px\">\n                      <div style=\"display: flex;gap: 10px;width: 100%;\">\n                        <div>\n                          <span  style=\"user-select: none;\" uk-tooltip=\"Click to edit this task's basic info\" v-show=\"!showTaskInfoContainer\" class=\"uk-button updateTaskInfoTrigger\" uk-icon=\"icon:pencil;ratio:0.85\" v-on:click=\"showTaskInfoContainerDiv()\"></span>\n                          <span  style=\"user-select: none;\" uk-tooltip=\"Click to close this task\" v-show=\"showTaskInfoContainer\"  class=\"uk-button updateTaskInfoTrigger\" uk-icon=\"icon:chevron-up;ratio:0.85\"   v-on:click=\"hideTaskInfoContainer()\"></span>\n                        </div>\n                        <div style=\"position: relative;\">\n                          <div class=\"chat-context-menu-triggerx\" style=\"user-select: none;\">\n                            <span uk-tooltip=\"Add / Remove Hooks\" v-bind:id=\"'ctx-menu-trigger-' + taskObject.id\" class=\"uk-button updateTaskInfoTrigger recd-ctx-menu-trigger\" uk-icon=\"icon:more-verticalx;ratio:0.65\" v-on:click.stop=\"openContextMenu(taskObject.id, $event)\" >\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"15\" viewBox=\"0 0 18 18\">\n                                  <g id=\"Add_hook\" data-name=\"Add hook\" transform=\"translate(-3140 502)\">\n                                    <g id=\"Group_1485\" data-name=\"Group 1485\" transform=\"translate(16.5 -62)\">\n                                      <path id=\"Path_2566\" data-name=\"Path 2566\" d=\"M3115-445.109h6.05\" transform=\"translate(19.257 10.841)\" fill=\"none\" stroke=\"#3977ff\" stroke-linecap=\"round\" stroke-width=\"1.3\"/>\n                                      <g id=\"Group_1484\" data-name=\"Group 1484\" transform=\"translate(1.632 0.639)\">\n                                        <path id=\"Path_2569\" data-name=\"Path 2569\" d=\"M3115-444.815h6\" transform=\"translate(8.5 9.757)\" fill=\"none\" stroke=\"#3977ff\" stroke-linecap=\"round\" stroke-width=\"1.3\"/>\n                                        <path id=\"Path_2570\" data-name=\"Path 2570\" d=\"M0,0H5.884\" transform=\"translate(3126.5 -438) rotate(90)\" fill=\"none\" stroke=\"#3977ff\" stroke-linecap=\"round\" stroke-width=\"1.3\"/>\n                                      </g>\n                                      <path id=\"Path_2567\" data-name=\"Path 2567\" d=\"M3115-445.109h12.87\" transform=\"translate(12.437 15.841)\" fill=\"none\" stroke=\"#3977ff\" stroke-linecap=\"round\" stroke-width=\"1.3\"/>\n                                      <path id=\"Path_2568\" data-name=\"Path 2568\" d=\"M3115-445.109h12.87\" transform=\"translate(12.437 20.841)\" fill=\"none\" stroke=\"#3977ff\" stroke-linecap=\"round\" stroke-width=\"1.3\"/>\n                                    </g>\n                                    <rect id=\"Rectangle_1455\" data-name=\"Rectangle 1455\" width=\"18\" height=\"18\" transform=\"translate(3140 -502)\" fill=\"none\"/>\n                                  </g>\n                              </svg>\n                            </span>\n                          </div>\n                          <div v-bind:id=\"'ctx_menu_' + taskObject.id\" class=\"context-menu\">\n                            <div style=\"user-select: none;display: flex;gap: 0px;flex-direction: column;\">\n\n                                <!--\n                                <div v-on:click=\"replyToMessage(msg)\">\n                                  <span uk-icon=\"ratio:0.7;icon: users\" class=\"uk-icon\"></span>\n                                  <span style=\"padding-left: 5px;\"> Customers</span>\n                                </div>\n                                <div v-on:click=\"convertMsgToTask(msg)\">\n                                  <span uk-icon=\"ratio:0.7;icon:user\" class=\"uk-icon\"></span>\n                                  <span style=\"padding-left: 5px;\"> Contacts </span>\n                                </div>\n                                -->\n\n                                <div id=\"menu_container\" class=\"menu_container\">\n\n                                    <div id=\"menu_slider\" class=\"menu_slider\">\n                                      <div id=\"menu\" class=\"menu menu_fixed_height\">\n                                          <div v-on:click=\"onMenuClick('isSubmenuCustomersSelected', 'Customers')\">\n                                            <span uk-icon=\"ratio:0.7;icon: users\" class=\"uk-icon\"></span>\n                                            <span style=\"padding-left: 5px;\">Customers <span id=\"selectedHookCustomersBadge\" style=\"color:rgb(159 156 156)\"></span></span>\n                                            <span uk-icon=\"ratio:0.7;icon: chevron-right\" class=\"uk-icon\" style=\"margin-left:auto\"></span>\n                                          </div>\n                                          <div v-on:click=\"onMenuClick('isSubmenuCustomerBranchesSelected', 'Customer Branches')\">\n                                            <span uk-icon=\"ratio:0.7;icon: location\" class=\"uk-icon\"></span>\n                                            <span style=\"padding-left: 5px;\">Branches <span id=\"selectedHookCustomerBranchesBadge\" style=\"color:rgb(159 156 156)\"></span></span>\n                                            <span uk-icon=\"ratio:0.7;icon: chevron-right\" class=\"uk-icon\" style=\"margin-left:auto\"></span>\n                                          </div>\n                                          <div v-on:click=\"onMenuClick('isSubmenuCustomerContactsSelected', 'Customer Contacts')\">\n                                            <span uk-icon=\"ratio:0.7;icon: user\" class=\"uk-icon\"></span>\n                                            <span style=\"padding-left: 5px;\">Contacts <span id=\"selectedHookCustomerContactsBadge\" style=\"color:rgb(159 156 156)\"></span></span>\n                                            <span uk-icon=\"ratio:0.7;icon: chevron-right\" class=\"uk-icon\" style=\"margin-left:auto\"></span>\n                                          </div>\n                                      </div>\n                                      <div id=\"submenu\" class=\"submenu_container\">\n                                          <div style=\"display: flex;gap: 10px;border-bottom: 1px solid #f0f0f0;padding-bottom: 10px;\">\n                                            <button v-bind:uk-tooltip=\"'Go back'\"  v-on:click=\"onSubmenuClick()\" class=\"uk-button uk-button-danger uk-button-small uk-grid-margin uk-first-column end-call-button subtask-back-button\" style=\"border-radius: 3px;\">\n                                              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"18\" height=\"18\" >\n                                                <path fill=\"currentColor\" d=\"M12 4l1.4 1.4L7.8 11H20v2H7.8l5.6 5.6L12 20l-8-8 8-8z\"></path>\n                                              </svg>\n                                            </button>\n                                            <div style=\"padding-right: 1px;position: relative;border: 1px solid rgb(187, 186, 186);border-radius: 3px;display: inline-flex;flex-direction: row-reverse;column-gap: 10px;\">\n                                                  <input autocomplete=\"off\" type=\"text\" id=\"submenu_searchbox\" v-on:keyup=\"searchHooksSubmenu()\" v-model=\"hooksSubmenuSearchQuery\" class=\"dropdown_input\" style=\"border: 0px;padding-right: 30px;width: 98%;height: 30px;\">\n                                                  <span uk-icon=\"icon:search;ratio:0.85\" style=\"display: flex;padding: 5px;user-select: none;align-items: center;justify-content: center;width: 30px;opacity: 0.55;xbackground: #f0f0f0;\"></span>\n                                            </div>\n                                          </div>\n                                          <div class=\"submenu menu_fixed_height\">\n\n                                            <div class=\"submenu_category\" v-show=\"hookSubmenuCurrentlySelected === 'isSubmenuCustomersSelected'\">\n                                              <template v-for=\"customer in customers\">\n                                                <div v-on:click=\"onCustomerSelect(customer.id)\" style=\"display: flex;-moz-column-gap: 10px;column-gap: 10px;cursor: pointer;\">\n                                                  <div>\n                                                    <div style=\"border: 1px solid rgb(85, 85, 85); height: 15px; width: 15px; display: grid;\">\n                                                      <span v-show=\"customer.isSelected\"  uk-icon=\"check\" class=\"uk-icon\">\n                                                        <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\" data-svg=\"check\">\n                                                          <polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" points=\"4,10 8,15 17,4\"></polyline>\n                                                        </svg>\n                                                      </span>\n                                                    </div>\n                                                  </div>\n                                                  <div style=\"padding-left: 5px;\">{{customer.name}}</div>\n                                                </div>\n                                              </template>\n                                            </div>\n\n                                            <div class=\"submenu_category\" v-show=\"hookSubmenuCurrentlySelected === 'isSubmenuCustomerBranchesSelected'\">\n                                              <template v-for=\"customerBranch in customerBranches\">\n                                                <div v-on:click=\"onCustomerBranchSelect(customerBranch.id)\" style=\"display: flex;-moz-column-gap: 10px;column-gap: 10px;cursor: pointer;\">\n                                                  <div>\n                                                    <div style=\"border: 1px solid rgb(85, 85, 85); height: 15px; width: 15px; display: grid;\">\n                                                      <span v-show=\"customerBranch.isSelected\"  uk-icon=\"check\" class=\"uk-icon\">\n                                                        <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\" data-svg=\"check\">\n                                                          <polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" points=\"4,10 8,15 17,4\"></polyline>\n                                                        </svg>\n                                                      </span>\n                                                    </div>\n                                                  </div>\n                                                  <div style=\"padding-left: 5px;\">{{customerBranch.name}}</div>\n                                                </div>\n                                              </template>\n                                            </div>\n\n                                            <div class=\"submenu_category\" v-show=\"hookSubmenuCurrentlySelected === 'isSubmenuCustomerContactsSelected'\">\n                                              <template v-for=\"customerContact in customerContacts\">\n                                                <div v-on:click=\"onCustomerContactSelect(customerContact.id)\" style=\"display: flex;-moz-column-gap: 10px;column-gap: 10px;cursor: pointer;\">\n                                                  <div>\n                                                    <div style=\"border: 1px solid rgb(85, 85, 85); height: 15px; width: 15px; display: grid;\">\n                                                      <span v-show=\"customerContact.isSelected\"  uk-icon=\"check\" class=\"uk-icon\">\n                                                        <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\" data-svg=\"check\">\n                                                          <polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" points=\"4,10 8,15 17,4\"></polyline>\n                                                        </svg>\n                                                      </span>\n                                                    </div>\n                                                  </div>\n                                                  <div style=\"padding-left: 5px;\">{{customerContact.name}}</div>\n                                                </div>\n                                              </template>\n                                            </div>\n\n                                            <!--\n                                            <div v-on:click=\"onCustomerSelect()\" style=\"display: flex;-moz-column-gap: 10px;column-gap: 10px;cursor: pointer;\">\n                                              <div>\n                                                <div style=\"border: 1px solid rgb(85, 85, 85); height: 15px; width: 15px; display: grid;\">\n                                                  <span uk-icon=\"check\"  style=\"display: none;\" class=\"uk-icon\">\n                                                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\" data-svg=\"check\">\n                                                      <polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" points=\"4,10 8,15 17,4\"></polyline>\n                                                    </svg>\n                                                  </span>\n                                                </div>\n                                              </div>\n                                              <div style=\"padding-left: 5px;\">Customer 1</div>\n                                            </div>\n                                            <div v-on:click=\"onCustomerSelect()\" style=\"display: flex;-moz-column-gap: 10px;column-gap: 10px;cursor: pointer;\">\n                                              <div>\n                                                <div style=\"border: 1px solid rgb(85, 85, 85); height: 15px; width: 15px; display: grid;\">\n                                                  <span uk-icon=\"check\"  style=\"display: none;\" class=\"uk-icon\">\n                                                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\" data-svg=\"check\">\n                                                      <polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" points=\"4,10 8,15 17,4\"></polyline>\n                                                    </svg>\n                                                  </span>\n                                                </div>\n                                              </div>\n                                              <div style=\"padding-left: 5px;\">Customer 2</div>\n                                            </div>\n                                            -->\n\n                                          </div>\n                                      </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                          </div>\n                        </div>\n                        <div style=\"position: relative;\">\n                          <div class=\"chat-context-menu-triggerx\" >\n                            <span uk-tooltip=\"Click to view action menu\" v-bind:id=\"'ctx-menu-trigger-' + taskObject.id\" class=\"uk-button updateTaskInfoTrigger recd-ctx-menu-trigger list-item-menu\" uk-icon=\"icon:more-vertical;ratio:0.65\" v-on:click.stop=\"openContextMenu(taskObject.id, $event)\" >\n                            </span>\n                          </div>\n                          <div v-bind:id=\"'ctx_menu_' + taskObject.id\" class=\"context-menu\">\n                            <div style=\"user-select: none;display: flex;gap: 0px;flex-direction: column;\">\n                                <div v-on:click=\"replyToMessage(msg)\">\n                                  <span uk-icon=\"ratio:0.7;icon: users\" class=\"uk-icon\"></span>\n                                  <span style=\"padding-left: 5px;\"> Change Owner</span>\n                                </div>\n                                <div v-on:click=\"convertMsgToTask(msg)\">\n                                  <span uk-icon=\"ratio:0.7;icon:user\" class=\"uk-icon\"></span>\n                                  <span style=\"padding-left: 5px;\"> Other Menu items </span>\n                                </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                  </div>\n                </div>\n            </div>\n\n        </div>\n      </div>\n      <div v-show=\"showTaskInfoContainer\" style=\"position:relative\" class=\"task-info-container\">\n          <div class=\"first_column_scrollable custom-scroll-bar\" style=\"font-size: 0.7rem;position: absolute;left: 35px;right: 35px;top: -1px;opacity: 1;z-index: 100;background: linear-gradient(rgb(254 254 254), rgb(255, 255, 255));border-width: 0px 1px 1px;border-top-style: initial;border-right-style: solid;border-bottom-style: solid;border-left-style: solid;border-top-color: initial;border-right-color: rgb(226, 226, 226);border-bottom-color: rgb(226, 226, 226);border-left-color: rgb(226, 226, 226);border-image: initial;box-shadow: rgba(0, 0, 0, 0.12) 0px 15px 12px 0px;border-radius: 0px 0px 5px 5px;\">\n            <task-info-tab v-bind:taskInfo=\"taskObject\" v-on:refreshTaskDetails=\"getRecord()\" />\n          </div>\n      </div>\n      <div  v-show=\"!showNewSubTaskForm\" style=\"display: grid;grid-template-rows: auto 1fr;display: flex;flex-direction: column;flex-grow: 1;overflow-y: hidden;\">\n            <ul  v-bind:id=\"embeddingViewName + '_switcherTabs'\" class=\"uk-subnav uk-subnav-pill tab-bar\" xuk-switcher style=\"gap: 10px;user-select: none;align-items: center;justify-content: flex-start;column-gap: 30px;\">\n              <!--<li uk-tooltip=\"title:Task Info;pos:bottom\"><a href=\"#\"><span class=\"tab_icon\"><ui-icon name=\"info\" size=\"width:15px;height:15px\"/></span><span class=\"\">Task Info</span></a></li>-->\n              <li v-on:click=\"displayTab($event, 'description')\" class=\"uk-active description\" uk-tooltip=\"title:Task Description;pos:bottom\" style=\"margin-left: 20px;\">\n                <a style=\"pointer-events: none;user-select: none;align-items: center;justify-content: center;\" >\n                  <span class=\"tab_icon\" style=\"display: flex;column-gap: 5px;align-items: center;\">\n                    <ui-icon name=\"description\" size=\"width:15px;height:15px\"/>\n                  </span>\n                  <span class=\"\">Description</span>\n                </a>\n              </li>\n              <li v-on:click=\"displayTab($event, 'activity')\" class=\"activity\" uk-tooltip=\"title:Activities;pos:bottom\">\n                  <a style=\"pointer-events: none;user-select: none;align-items: center;justify-content: center;\" >\n                    <span class=\"tab_icon\"  style=\"display: flex;column-gap: 5px;align-items: center;position:relative\">\n                        <ui-icon name=\"activity\" size=\"width:15px;height:15px\"/>\n                    </span>\n                    <span class=\"tab_label\">Activity</span>\n                  </a>\n              </li>\n              <li v-on:click=\"displayTab($event, 'subtasks')\" class=\"subtasks\" uk-tooltip=\"title:Sub Tasks;pos:bottom\">\n                  <a style=\"pointer-events: none;user-select: none;align-items: center;justify-content: center;position:relative\" >\n                    <span v-show=\"taskObject.subTasksCount>0\" style=\"position: absolute;right: -10px;top: -5px;background: rgb(241 241 241);color: #868686;border-radius: 15px;text-align: center;padding: 1px 2px;min-width: 20px;font-size: 0.45rem;\">{{taskObject.subTasksCount}}</span>\n                    <span class=\"tab_icon\"  style=\"display: flex;column-gap: 5px;align-items: center;position:relative\">\n                        <ui-icon name=\"subtask\" size=\"width:15px;height:15px\"/>\n                    </span>\n                    <span class=\"tab_label\">Sub Tasks </span>\n                  </a>\n              </li>\n              <li v-on:click=\"displayTab($event, 'checklist')\" class=\"checklist\" uk-tooltip=\"title:Checklists;pos:bottom\">\n                <a style=\"pointer-events: none;user-select: none;align-items: center;justify-content: center;position:relative\" >\n                  <span v-show=\"taskObject.checklistCount>0\" style=\"position: absolute;right: -10px;top: -5px;background: rgb(241 241 241);color: #868686;border-radius: 15px;text-align: center;padding: 1px 2px;min-width: 20px;font-size: 0.45rem;\">{{taskObject.checklistCount}}</span>\n                  <span class=\"tab_icon\"  style=\"display: flex;column-gap: 5px;align-items: center;position:relative\">\n                    <ui-icon name=\"checklist\" size=\"width:15px;height:15px\"/>\n                  </span>\n                  <span class=\"tab_label\">Checklist</span>\n                </a>\n              </li>\n              <li v-on:click=\"displayTab($event, 'reminders')\" class=\"reminders\" uk-tooltip=\"title:Reminders;pos:bottom\">\n                <a style=\"pointer-events: none;user-select: none;align-items: center;justify-content: center;position:relative\" >\n                  <span v-show=\"taskObject.remindersCount!==undefined && taskObject.remindersCount!==null && taskObject.remindersCount>0\" style=\"position: absolute;right: -10px;top: -5px;background: rgb(241 241 241);color: #868686;border-radius: 15px;text-align: center;padding: 1px 2px;min-width: 20px;font-size: 0.45rem;\">{{taskObject.remindersCount}}</span>\n                  <span class=\"tab_icon\"  style=\"display: flex;column-gap: 5px;align-items: center;position:relative\">\n                    <ui-icon name=\"reminder\" size=\"width:14px;height:14px\"/>\n                  </span>\n                  <span class=\"tab_label\">Reminders</span>\n                </a>\n              </li>\n              <li v-on:click=\"displayTab($event, 'timelogs')\" class=\"timelogs\" uk-tooltip=\"title:Time logs;pos:bottom\">\n                <a style=\"pointer-events: none;user-select: none;align-items: center;justify-content: center;position:relative\" >\n                  <span  v-show=\"taskObject.timelogsCount!==undefined && taskObject.timelogsCount!==null && taskObject.timelogsCount>0\" style=\"position: absolute;right: -10px;top: -5px;background: rgb(241 241 241);color: #868686;border-radius: 15px;text-align: center;padding: 1px 2px;min-width: 20px;font-size: 0.45rem;\">{{taskObject.timelogsCount}}</span>\n                  <span class=\"tab_icon\"  style=\"display: flex;column-gap: 5px;align-items: center;position:relative\">\n                    <ui-icon name=\"timelog\" size=\"width:15px;height:15px\"/>\n                  </span>\n                  <span class=\"tab_label\">Time logs</span></a>\n              </li>\n              <li v-on:click=\"displayTab($event, 'transitions')\" class=\"transitions\" uk-tooltip=\"title:Task Stage Transitions;pos:bottom\">\n                <a style=\"pointer-events: none;user-select: none;align-items: center;justify-content: center;position:relative\" >\n                  <span v-show=\"taskObject.transitionCount!==undefined && taskObject.transitionCount!==null && taskObject.transitionCount>0\" style=\"position: absolute;right: -10px;top: -5px;background: rgb(241 241 241);color: #868686;border-radius: 15px;text-align: center;padding: 1px 2px;min-width: 20px;font-size: 0.45rem;\">{{taskObject.transitionCount}}</span>\n                  <span class=\"tab_icon\" style=\"display: flex;column-gap: 5px;align-items: center;position:relative\">\n                    <ui-icon name=\"history\" size=\"width:12px;height:12px\"/>\n                  </span>\n                  <span class=\"tab_label\">Transitions</span></a>\n              </li>\n              <li v-on:click=\"displayTab($event, 'forms')\" class=\"forms\" uk-tooltip=\"title:Attached Forms;pos:bottom\">\n                <a style=\"pointer-events: none;user-select: none;align-items: center;justify-content: center;position:relative\" >\n                  <span v-show=\"taskObject.attachedFormsCount!==undefined && taskObject.attachedFormsCount!==null && taskObject.attachedFormsCount>0\" style=\"position: absolute;right: -10px;top: -5px;background: rgb(241 241 241);color: #868686;border-radius: 15px;text-align: center;padding: 1px 2px;min-width: 20px;font-size: 0.45rem;\">{{taskObject.attachedFormsCount}}</span>\n                  <span class=\"tab_icon\" style=\"display: flex;column-gap: 5px;align-items: center;position:relative\">\n                    <ui-icon name=\"forms\" style=\"width: 15px; height: 15px;\"/>\n                  </span>\n                  <span class=\"tab_label\">Forms</span></a>\n              </li>\n              <li v-on:click=\"displayTab($event, 'hooks')\" class=\"hooks\" uk-tooltip=\"title:Task Hooks;pos:bottom\">\n                <a style=\"pointer-events: none;user-select: none;align-items: center;justify-content: center;transform: translateY(-3px);\">\n                  <span class=\"tab_icon\" style=\"display: flex;column-gap: 5px;align-items: center;\">\n                    <ui-icon name=\"hooks\" size=\"width:14px;height:14px\"/>\n                  </span>\n                  <span class=\"tab_label\">Hooks</span>\n                </a>\n              </li>\n            </ul>\n            <div  v-bind:id=\"embeddingViewName + '_switcherTabsContent'\"  class=\"xuk-switcher xuk-switcher-component\" style=\"margin-top: 0px;font-size: 0.7rem;padding:5px 10px;overflow-y: hidden;display: flex;flex-grow: 1;background: rgb(255, 255, 255, 0);touch-action: pan-y pinch-zoom;box-sizing: border-box;\">\n              <!--\n              <div style=\"overflow-y: hidden; position: relative;\">\n                <div style=\"display: grid;grid-template-rows: 1fr;height: 100%;margin-top: 20px;overflow-y: hidden;\">\n                      <div class=\"first_column_scrollable custom-scroll-bar\" >\n                          <task-info-tab v-bind:taskInfo=\"taskObject\" v-on:refreshList=\"refreshPaneList()\" />\n                      </div>\n                  </div>\n              -->\n              <div v-show=\"selectedTabKey==='description'\" class=\"custom-scroll-bar\" style=\"flex-grow: 1;overflow-y: scroll;position: relative;padding: 35px;height: 100%;background: rgba(255, 255, 255, 0.7);box-sizing: border-box;margin-bottom: 10px;\">\n                  <div class=\"task-communication\" style=\"min-height:75px\">\n                      <!--<label class=\"uk-form-label\" style=\"font-size: 0.56rem;text-transform: uppercase;font-weight: bold;letter-spacing: 1px;text-decoration: underline;\">Task Description</label>-->\n                      <div style=\"padding-left: 0px;padding-top: 10px;padding-bottom: 25px;white-space: pre-line;\">\n                        {{taskObject.description}}\n                      </div>\n                  </div>\n              </div>\n              <div v-show=\"selectedTabKey==='hooks'\" style=\";flex-grow: 1;overflow-y: hidden;position: relative;padding: 35px;height: 100%;background: white;\">\n                  <div class=\"task-communication\" style=\"min-height:75px\">\n                      <div v-show=\"customersNames!==''\">\n                        <label class=\"uk-form-label\" style=\"font-size: 0.56rem;text-transform: uppercase;font-weight: bold;letter-spacing: 1px;text-decoration: underline;\">Customers</label>\n                        <div style=\"padding-left: 0px;padding-top: 10px;padding-bottom: 25px;\">{{customersNames}}</div>\n                      </div>\n\n                      <div v-show=\"customerBranchesNames!==''\">\n                        <label class=\"uk-form-label\" style=\"font-size: 0.56rem;text-transform: uppercase;font-weight: bold;letter-spacing: 1px;text-decoration: underline;\">Branches</label>\n                        <div style=\"padding-left: 0px;padding-top: 10px;padding-bottom: 25px;\">{{customerBranchesNames}}</div>\n                      </div>\n                  </div>\n              </div>\n              <div v-show=\"selectedTabKey==='activity'\" style=\";flex-grow: 1;overflow-y: hidden; position: relative;\">\n                <!--div class=\"activity_background\"></div>-->\n                <div v-if=\"isActivityTabInitialized\" style=\"width: 100%;box-sizing: border-box;z-index: 0;position: absolute;display: flex;grid-template-rows: 1fr;flex-grow: 1;padding: 20px;height: 100%;overflow-y: hidden;background: #ffffffa1;\">\n                    <task-activity-tab v-bind:embeddingComponentName=\"embeddingViewName\" v-bind:uniqueComponentId=\" uniqueComponentId + '_activity_tab'\" v-bind:id=\"taskObject.id\"  v-bind:loggedInUser=\"loggedInUser\"/>\n                </div>\n              </div>\n              <div v-show=\"selectedTabKey==='subtasks'\" style=\";flex-grow: 1;overflow-y: hidden; position: relative;    padding: 20px;;background: #ffffffa1;\">\n                  <div style=\"padding: 5px 0px;margin-right:20px;margin-bottom: 10px;display: grid;grid-template-rows: 1fr;place-items: start;border-bottom: 1px solid #d0d0d0;\">\n                      <button v-on:click=\"addNewSubTask()\"  class=\"clickable-btn uk-button uk-button-danger uk-button-small uk-grid-margin uk-first-column end-call-button\" style=\"background-color:#2196f3;border-radius: 3px;min-width: 100px;font-size: 0.65rem;line-height: 30px;font-weight: normal !important;display: inline-block;\">\n                          <span uk-icon=\"icon:plus;ratio:0.65\" class=\"uk-icon\" style=\"\">\n                            <svg width=\"13\" height=\"13\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\" data-svg=\"plus\">\n                              <rect x=\"9\" y=\"1\" width=\"1\" height=\"17\"></rect>\n                              <rect x=\"1\" y=\"9\" width=\"17\" height=\"1\"></rect>\n                            </svg>\n                          </span>\n                          <span style=\"padding-left: 10px;\">Add New SubTask</span>\n                      </button>\n                  </div>\n                  <div v-if=\"isSubtasksTabInitialized\" style=\"display:grid;padding-top:15px;margin-right:20px;\">\n                      <task-subtasks-tab v-bind:id=\"taskObject.id\" />\n                  </div>\n              </div>\n              <div v-show=\"selectedTabKey==='checklist'\" style=\"flex-grow: 1;overflow-y: hidden;position: relative;background: rgba(255, 255, 255, 0.75);display: flex;flex-direction: column;\">\n                  <div style=\"display: flex;padding: 20px 0px;column-gap: 30px;;margin-right:15px;margin-left:15px;\">\n                        <div style=\"flex:1\">\n                            <input type=\"text\" v-model=\"checklistItem.activityName\" class=\"uk-input\" placeholder=\"Add new checklist item\" style=\"border-radius:3px\"/>\n                        </div>\n                        <div>\n                            <button v-on:click=\"saveChecklistItem()\"  class=\"clickable-btn uk-button uk-button-danger uk-button-small uk-grid-margin uk-first-column end-call-button\" style=\"background-color:#2196f3;border-radius: 3px;min-width: 100px;font-size: 0.65rem;line-height: 30px;font-weight: normal !important;display: inline-block;\">\n                                <span style=\"padding-left: 10px;\">{{checklistLabel}}</span>\n                            </button>\n                        </div>\n                  </div>\n                  <br>\n                  <div v-if=\"isChecklistsTabInitialized\" class=\"custom-scroll-bar\" style=\"position: relative;flex-grow: 1;\">\n\n                      <template v-for=\"item,index in taskObject.checklist\">\n                          <div class=\"checklist_item\">\n                              <div v-show=\"item.status!=='COMPLETED' && item.status!=='CANCELLED'\" v-on:click=\"updateChecklistItemStatus(item, $event)\" style=\"border:1px solid #555;height: 20px;width: 20px;display: grid;cursor:pointer;border-radius: 3px;\">\n                              </div>\n                              <div v-show=\"item.status==='COMPLETED'\" uk-tooltip=\"pos:left;title:You cannot change the status of a completed item\" style=\"xcursor: not-allowed;border: 1px solid rgb(86, 206, 42);background: rgb(122, 209, 90);height: 20px;width: 20px;display: grid;border-radius: 3px;\">\n                                  <span uk-icon=\"check\" class=\"scaleZero\" style=\"color: white;transform-origin: center center;transition: 0.15s ease-out;\"></span>\n                              </div>\n                              <div v-show=\"item.status==='CANCELLED'\" style=\"filter: brightness(1.75);border:1px solid gray;height: 20px;width: 20px;display: grid;cursor:pointer;border-radius: 3px;\">\n                              </div>\n                              <div style=\"flex:1;\" v-if=\"item.status==='COMPLETED'\">\n                                <div>\n                                  {{index+1}}.\n                                  <span style=\"text-decoration: xline-through red;\">{{item.activityName}}</span>\n                                </div>\n                                <div v-if=\"item.updatedBy !== null\" style=\"padding-left:0px\">\n                                  <span style=\"color: rgb(140 140 140);font-size: 0.55rem;\">\n                                     Completed by {{item.updatedBy.split(\"#\")[1]}}\n                                  </span>\n                                  <span v-if=\"item.updatedOn !== null\" style=\"cursor: help;color: rgb(140 140 140);font-size: 0.55rem;\" v-bind:title=\"item.updatedOnFormatted\">&nbsp; ({{item.updatedOnAgo}})</span>\n                                </div>\n                              </div>\n                              <div style=\"flex:1;\" v-if=\"item.status!=='COMPLETED' && item.status!=='CANCELLED'\">\n                                {{index+1}}. {{item.activityName}} &nbsp; &nbsp; &nbsp; &nbsp;\n                              </div>\n                              <div style=\"flex: 1 1 0%;filter: brightness(1.75);\" v-if=\"item.status==='CANCELLED'\">\n                                <div>\n                                  {{index+1}}.\n                                  <span style=\"text-decoration: xline-through red;\">{{item.activityName}}</span>\n                                </div>\n                                <div v-if=\"item.updatedBy !== null\" style=\"padding-left:0px\">\n                                  <span style=\"color: rgb(101 101 101);font-size: 0.55rem;\">\n                                     Cancelled by {{item.updatedBy.split(\"#\")[1]}}\n                                  </span>\n                                  <span v-if=\"item.updatedOn !== null\" style=\"cursor: help;color: rgb(101 101 101);font-size: 0.55rem;\" v-bind:title=\"item.updatedOnFormatted\">&nbsp; ({{item.updatedOnAgo}})</span>\n                                </div>\n                              </div>\n\n                              <div v-if=\"item.status==='COMPLETED'\">\n                                <span style=\"background: #59d059;color: white;padding:4px 10px;border-radius: 20px;font-size: 0.45rem;margin-left: 20px;letter-spacing: 1px;\">COMPLETED</span>\n                              </div>\n                              <div v-if=\"item.status==='CANCELLED'\">\n                                <span style=\"filter: brightness(1.75);background: rgb(99 99 99);color: #929292;padding:4px 10px;border-radius: 20px;font-size: 0.45rem;margin-left: 20px;letter-spacing: 1px;\">CANCELLED</span>\n                              </div>\n                              <div v-if=\"item.status!=='COMPLETED' && item.status!=='CANCELLED'\">\n                                <a uk-tooltip=\"pos:left;title:You cannot undo once you cancel the item\" v-on:click=\"cancelChecklistItem(item)\">Cancel Item</a>\n                              </div>\n                          </div>\n                      </template>\n                  </div>\n              </div>\n              <div v-show=\"selectedTabKey==='reminders'\" style=\"display: flex;flex-direction: column;flex-grow: 1;overflow-y: hidden; position: relative;height: 100%;;background: #ffffffa1;\">\n                  <div v-if=\"isRemindersTabInitialized\" style=\"display: flex;padding: 20px;min-height: 300px;flex-direction: column;\">\n\n                      <div style=\"padding: 5px 0px;margin-right:20px;margin-bottom: 10px;display: grid;grid-template-rows: 1fr;place-items: flex-start;border-bottom: 1px solid #d0d0d0;\">\n                          <button v-on:click=\"openAddReminderModal()\"  class=\"clickable-btn uk-button uk-button-danger uk-button-small uk-grid-margin uk-first-column end-call-button\" style=\"background-color:#2196f3;border-radius: 3px;min-width: 100px;font-size: 0.65rem;line-height: 30px;font-weight: normal !important;display: inline-block;\">\n                              <span uk-icon=\"icon:plus;ratio:0.65\" class=\"uk-icon\" style=\"\">\n                                <svg width=\"13\" height=\"13\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\" data-svg=\"plus\">\n                                  <rect x=\"9\" y=\"1\" width=\"1\" height=\"17\"></rect>\n                                  <rect x=\"1\" y=\"9\" width=\"17\" height=\"1\"></rect>\n                                </svg>\n                              </span>\n                              <span style=\"padding-left: 10px;\">Add Reminder</span>\n                          </button>\n                      </div>\n                      <div v-if=\"isRemindersTabInitialized\" class=\"custom-scroll-bar\" style=\"position: relative;flex-grow: 1;\">\n                        <div v-show=\"reminderList.length==0\" style=\"text-align:center;border-bottom: 0px;\"> No reminders added </div>\n                        <div  v-show=\"reminderList.length>0\" style=\"border-radius: 5px;border: 1px solid rgba(128, 128, 128, 0.25);margin-right: 5px;margin-left: 0px;padding: 1px 1px;\">\n                            <div style=\"background:rgb(242 242 242 / 23%);border-width:1px 1px 0px;border-top-style:solid;border-right-style:solid;border-bottom-style:initial;border-left-style:solid;border-top-color:transparent;border-right-color:transparent;border-bottom-color:initial;border-left-color:transparent;border-image:initial;text-transform:uppercase;font-size:.5rem;padding: 10px 0px;display:flex;border-bottom:1px solid #d0d0d0;column-gap:20px;font-weight:bold;letter-spacing:1px;\">\n\n                                <div style=\"flex:0.25;text-align:right\">Sno.</div>\n                                <div style=\"flex:4;\">\n                                  Title\n                                </div>\n                                <div style=\"flex:1;\">Type</div>\n                                <div style=\"flex:2;\">Date/Time</div>\n                                <div style=\"flex:1;\">Actions</div>\n                            </div>\n                            <template v-for=\"item,index in reminderList\">\n                                <div style=\"position: relative;padding: 10px;min-height: 20px;justify-items: start;column-gap: 20px;background-color: rgb(255 255 255 / 75%);font-size: 0.65rem;display: flex;\">\n\n                                    <div style=\"flex:0.25;text-align:right\" v-if=\"item.status==='ELAPSED'\">{{index+1}}</div>\n                                    <div style=\"flex:0.25;text-align:right;\" v-if=\"item.status!=='ELAPSED' && item.status!=='CANCELLED'\">{{index+1}}</div>\n                                    <div style=\"flex:0.25;text-align:right;filter: brightness(1.75);\" v-if=\"item.status==='CANCELLED'\">{{index+1}}</div>\n\n                                    <div  style=\"flex:4;\" v-if=\"item.status==='ELAPSED'\">\n                                      <div><span style=\"text-decoration: line-through red;\">{{item.title}}</span></div>\n                                      <div style=\"color: rgb(188 188 188); font-size: 0.55rem;\">Reminder set for {{item.usersString}}</div>\n                                    </div>\n                                    <div style=\"flex:4;\" v-if=\"item.status!=='ELAPSED' && item.status!=='CANCELLED'\">\n                                      <div>{{item.title}} &nbsp; &nbsp; &nbsp; &nbsp; </div>\n                                      <div style=\"color: rgb(188 188 188); font-size: 0.55rem;\">Reminder set for {{item.usersString}}</div>\n                                    </div>\n                                    <div style=\"flex:4;filter: brightness(1.75);\" v-if=\"item.status==='CANCELLED'\">\n                                      <div>{{item.title}} &nbsp; &nbsp; &nbsp; &nbsp;</div>\n                                      <div style=\"color: rgb(101, 101, 101); font-size: 0.55rem;\">Reminder set for {{item.usersString}}</div>\n                                    </div>\n\n                                    <div style=\"flex:1;\" v-if=\"item.status==='ELAPSED'\">{{item.type}}</div>\n                                    <div style=\"flex:1;\" v-if=\"item.status!=='ELAPSED' && item.status!=='CANCELLED'\">{{item.type}}</div>\n                                    <div style=\"flex:1;filter: brightness(1.75);\" v-if=\"item.status==='CANCELLED'\">{{item.type}}</div>\n\n                                    <div style=\"flex:2;\" v-if=\"item.status==='ELAPSED'\">{{item.dateTimeFormatted}}</div>\n                                    <div style=\"flex:2;\" v-if=\"item.status!=='ELAPSED' && item.status!=='CANCELLED'\">{{item.dateTimeFormatted}}</div>\n                                    <div style=\"flex:2;filter: brightness(1.75);\" v-if=\"item.status==='CANCELLED'\">{{item.dateTimeFormatted}}</div>\n\n                                    <!-- <div style=\"flex:1;\" v-if=\"item.status!=='ELAPSED'\"><a v-on:click=\"updateReminderItem(item)\">Edit</a>  |  <a v-on:click=\"removeReminder(item)\">Remove</a></div> Removing after Pawan said 'Cancel will do, no edits required' -->\n                                    <div style=\"flex:1;text-align:center;\" v-if=\"item.status!=='ELAPSED' && item.status!=='CANCELLED'\"><a v-on:click=\"cancelReminderItem(item)\">Cancel</a></div>\n                                    <div style=\"flex:1;\" v-if=\"item.status==='ELAPSED'\">\n                                      <span style=\"background: #59d059;color: white;padding:4px 10px;border-radius: 20px;font-size: 0.45rem;margin-left: 20px;letter-spacing: 1px;\">ELAPSED</span>\n                                    </div>\n                                    <div style=\"flex:1;\" v-if=\"item.status==='CANCELLED'\">\n                                      <span style=\"filter: brightness(1.75);background: rgb(99 99 99);color: #929292;padding:4px 10px;border-radius: 20px;font-size: 0.45rem;margin-left: 20px;letter-spacing: 1px;\">CANCELLED</span>\n                                    </div>\n                                </div>\n                            </template>\n                        </div>\n                      </div>\n\n\n                  </div>\n              </div>\n              <div v-show=\"selectedTabKey==='timelogs'\" style=\"overflow-y: hidden; position: relative;;background: #ffffffa1;\">\n                  <div v-if=\"isTimelogsTabInitialized\"  style=\"display: flex;padding: 20px;min-height: 300px;flex-direction: column;\">\n                      <div style=\"display: flex;padding: 5px 0px;column-gap: 30px;;margin-right: 15px;margin-left: 15px;\">\n                            <div style=\"flex:4\">\n                                 <label class=\"uk-form-label\">Description</label>\n                                <input type=\"text\" v-model=\"timelogItem.description\" class=\"uk-input\" placeholder=\"Describe activity\" style=\"border-radius:3px\"/>\n                            </div>\n                            <!-- <div style=\"flex:1\">\n                                 <label class=\"uk-form-label\">From Date/Time</label>\n                                <input type=\"datetime-local\" v-model=\"timelogItem.startDateTime\" class=\"uk-input\" style=\"border-radius:3px\"/>\n                            </div>\n                            <div style=\"flex:1\">\n                                 <label class=\"uk-form-label\">To Date/Time</label>\n                                <input type=\"datetime-local\" v-model=\"timelogItem.endDateTime\" class=\"uk-input\" style=\"border-radius:3px\"/>\n                            </div> -->\n                            <div style=\"flex:2\">\n                                <label class=\"uk-form-label\">Duration</label>\n                               <div class=\"uk-form-controls\" style=\"display: grid; grid-template-columns: 1fr 2fr;\">\n                                <input  v-model=\"timelogItem.duration\" onkeypress=\"return event.charCode >= 48\" min=\"1\" class=\"uk-input\" dir=\"rtl\" type=\"number\" tabindex=\"6\" style=\"border: 1px solid rgb(187, 187, 187); text-align: right;border-top-right-radius:0px;border-bottom-right-radius:0px;\">\n                                <div style=\"position: relative;\">\n                                  <select  v-model=\"timelogItem.durationUnit\" class=\"uk-select\" id=\"form-horizontal-select\" tabindex=\"7\" style=\"border-left: 1px;;border-top-left-radius:0px;border-bottom-left-radius:0px;\">\n                                    <option value=\"Hour(s)\">Hour(s)</option>\n                                    <option value=\"Day(s)\">Day(s)</option>\n                                    <option value=\"Week(s)\">Week(s)</option>\n                                    <option value=\"Month(s)\">Month(s)</option>\n                                  </select>\n                                  <div style=\"position: absolute; right: 7px; top: 9px; pointer-events: none;\">\n                                    <span class=\"uk-icon\" uk-icon=\"triangle-down\">\n                                      <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\" data-svg=\"triangle-down\">\n                                        <polygon points=\"5 7 15 7 10 12\"></polygon>\n                                      </svg>\n                                    </span>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <div style=\"flex: 2 1 0%;align-items: flex-end;display: flex;\">\n                              <button v-on:click=\"saveTimelog()\"  class=\"clickable-btn uk-button uk-button-danger uk-button-small uk-grid-margin uk-first-column end-call-button\"\n                                      style=\"background-color:#2196f3;border-radius: 3px;min-width: 100px;font-size: 0.65rem;line-height: 35px;font-weight: normal !important;display: inline-block;\">\n                                  <span style=\"padding-left: 10px;\">{{timelogLabel}}</span>\n                              </button>\n                            </div>\n                      </div>\n                      <br>\n\n                      <div v-show=\"timelogList.length==0\" style=\"text-align:center;border-bottom: 0px;\"> No timelog entries </div>\n                      <div  v-show=\"timelogList.length>0\" style=\"border-radius: 5px;border: 1px solid rgba(128, 128, 128, 0.25);margin-right: 15px;margin-left: 15px;padding: 1px 1px;\">\n                          <div  style=\"background:rgb(242 242 242 / 23%);border-width:1px 1px 0px;border-top-style:solid;border-right-style:solid;border-bottom-style:initial;border-left-style:solid;border-top-color:transparent;border-right-color:transparent;border-bottom-color:initial;border-left-color:transparent;border-image:initial;text-transform:uppercase;font-size:.5rem;padding: 10px 0px;display:flex;border-bottom:1px solid #d0d0d0;column-gap:20px;font-weight:bold;letter-spacing:1px;\">\n\n                              <div style=\"flex:0.25;text-align:right\">Sno.</div>\n                              <div style=\"flex:3;\">\n                                Description\n                              </div>\n                              <!-- <div style=\"flex:1;\">From </div>\n                              <div style=\"flex:1;\">To</div> -->\n                              <div style=\"flex:1;\">Duration</div>\n                              <div style=\"flex:1;\">Actions</div>\n                          </div>\n                          <template v-for=\"item,index in timelogList\">\n                            <div style=\"position: relative;padding: 10px;min-height: 20px;justify-items: start;column-gap: 20px;background-color: rgb(255 255 255 / 75%);font-size: 0.65rem;display: flex;\">\n\n                                  <div style=\"flex:0.25;text-align:right;\" v-if=\"item.status!=='CANCELLED'\">{{index+1}}</div>\n                                  <div style=\"flex:0.25;text-align:right;filter: brightness(1.75);\" v-if=\"item.status==='CANCELLED'\">{{index+1}}</div>\n\n                                  <div style=\"flex:3;\" v-if=\"item.status!=='CANCELLED'\">\n                                    {{item.description}} &nbsp; &nbsp; &nbsp; &nbsp;\n                                  </div>\n                                  <div style=\"flex:3;filter: brightness(1.75);\" v-if=\"item.status==='CANCELLED'\">\n                                    {{item.description}} &nbsp; &nbsp; &nbsp; &nbsp;\n                                  </div>\n\n\n                                  <!-- <div style=\"flex:1;\">{{item.startDateTimeFormatted}}</div>\n                                  <div style=\"flex:1;\">{{item.endDateTimeFormatted}}</div> -->\n                                  <div style=\"flex: 1 1 0%;\" v-if=\"item.status!=='CANCELLED'\">\n                                    {{item.duration}} {{item.durationUnit}} &nbsp; &nbsp; &nbsp; &nbsp;\n                                  </div>\n                                  <div style=\"flex: 1 1 0%;filter: brightness(1.75);\" v-if=\"item.status==='CANCELLED'\">\n                                    <span style=\"text-decoration: xline-through gray;\"> {{item.duration}} {{item.durationUnit}}</span>\n                                  </div>\n                                  <!-- <div style=\"flex:1;\" ><a v-on:click=\"updateTimelogItem(item)\">Edit</a>  |  <a v-on:click=\"removeTimelog(item)\">Remove</a></div> -->\n\n\n                                  <div  style=\"flex:1;\" v-if=\"item.status==='CANCELLED'\">\n                                    <span style=\"filter: brightness(1.75);background: rgb(99 99 99);color: #929292;padding:4px 10px;border-radius: 20px;font-size: 0.45rem;margin-left: 20px;letter-spacing: 1px;\">CANCELLED</span>\n                                  </div>\n                                  <div style=\"flex: 1 1 0%; text-align: center;\" v-if=\"item.status!=='CANCELLED'\">\n                                    <a uk-tooltip=\"pos:left;title:You cannot undo once you cancel the item\" v-on:click=\"cancelTimelogItem(item)\">Cancel</a>\n                                  </div>\n                                </div>\n                          </template>\n                      </div>\n                  </div>\n              </div>\n              <div v-show=\"selectedTabKey==='transitions'\" style=\"overflow-y: hidden; position: relative;width: 100%;;background: #ffffffa1;\">\n                  <div v-if=\"isTransitionsTabInitialized\"  style=\"display: flex;padding: 20px;min-height: 300px;flex-direction: column;\">\n\n                      <div v-show=\"taskTransitionsList.length==0\" style=\"text-align:center;border-bottom: 0px;\"> No task transitions </div>\n                      <div v-show=\"taskTransitionsList.length>0\" style=\"border-radius: 5px;border: 1px solid rgba(128, 128, 128, 0.25);margin-right: 15px;margin-left: 15px;padding: 1px 1px;\">\n                          <div  style=\"background:rgb(242 242 242 / 23%);border-width:1px 1px 0px;border-top-style:solid;border-right-style:solid;border-bottom-style:initial;border-left-style:solid;border-top-color:transparent;border-right-color:transparent;border-bottom-color:initial;border-left-color:transparent;border-image:initial;text-transform:uppercase;font-size:.5rem;padding: 10px 0px;display:flex;border-bottom:1px solid #d0d0d0;column-gap:20px;font-weight:bold;letter-spacing:1px;\">\n\n                              <div style=\"flex:0.25;text-align:right\">Sno.</div>\n                              <div style=\"flex:2;\">Transition</div>\n                              <div style=\"flex:1;\">From </div>\n                              <div style=\"flex:1;\">To</div>\n                              <div style=\"flex:1;\">By </div>\n                              <div style=\"flex:1;\">Duration</div>\n                          </div>\n                          <template v-for=\"item,index in taskTransitionsList\">\n                            <div style=\"position: relative; padding: 10px; min-height: 20px; justify-items: start; column-gap: 20px; background-color: rgba(255, 255, 255, 0.75); font-size: 0.65rem; display: flex;\">\n\n                                  <div style=\"flex:0.25;text-align:right\">{{index+1}}</div>\n                                  <div style=\"flex:2;\">\n                                        <span v-if=\"item.fromStatus!==null\">{{item.fromStatus}}</span>\n                                        <span v-if=\"item.toStatus!==null\"> &#8594; {{item.toStatus}}</span>\n                                  </div>\n                                  <div style=\"flex:1;\" v-bind:uk-tooltip=\"item.startTime\">{{item.startDate}} {{item.startTime}}</div>\n                                  <div style=\"flex:1;\" v-bind:uk-tooltip=\"item.endTime\">{{item.endDate}} {{item.endTime}}</div>\n                                  <div style=\"flex:1;\">{{item.createdBy.split(\"#\")[1]}}</div>\n                                  <div style=\"flex:1\">{{item.durationInHours}} {{item.durationUnitFormatted}}</div>\n                              </div>\n                          </template>\n                      </div>\n\n                  </div>\n              </div>\n              <div v-show=\"selectedTabKey==='forms'\" style=\"flex-grow: 1; overflow-y: hidden; position: relative; background: rgba(255, 255, 255, 0.75); display: flex; flex-direction: column;\">\n                  <div v-if=\"isFormsTabInitialized\" style=\"display: grid;padding: 10px;padding-top: 15px;margin-right: 20px;overflow-y: scroll;\">\n                      <task-forms-tab v-bind:loggedInUser=\"loggedInUser\" v-bind:taskSNO=\"'Task #' + taskObject.sno\"  v-bind:id=\"taskObject.id\" v-bind:assignees=\"availableMembers\"/>\n                  </div>\n              </div>\n\n            </div>\n      </div>\n\n      <div v-show=\"showNewSubTaskForm\" style=\"overflow-y: hidden;display: grid;grid-template-rows: auto 1fr;\">\n\n          <div style=\"overflow-y: hidden;display: grid;\">\n              <new-subtask-form v-bind:parentTaskId=\"id\" v-bind:resetTime=\"resetTime\"/>\n          </div>\n      </div>\n\n    </div>\n\n    <div v-bind:id=\"uniqueComponentId + '_add_reminder_modal'\" class=\"uk-flex-top\" uk-modal>\n        <div class=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\" style=\"width: 60%;font-size: 0.65rem;padding: 35px;border-radius: 5px;\">\n            <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\n            <form style=\";padding-bottom: 50px;width: 100%;place-self: center\" onsubmit=\"console.log('Submitted.');return false;\">\n\n                <div style=\"display: flex;padding: 5px 0px;column-gap: 30px;;margin-right:15px;margin-left:15px;\">\n                      <div style=\"flex:1\">\n                           <label class=\"uk-form-label\">Title</label>\n                          <input type=\"text\" v-model=\"reminderItem.title\" class=\"uk-input\" placeholder=\"Reminder Title\" style=\"border-radius:3px\"/>\n                      </div>\n                </div>\n                <div style=\"display: flex;padding: 5px 0px;column-gap: 30px;;margin-right:15px;margin-left:15px;\">\n\n                      <div style=\"height: 70px;flex:1\">\n                           <label class=\"uk-form-label\">Reminder for</label>\n                           <div class=\"uk-form-controls\">\n                               <ui-selectbox v-bind:availableItems=\"availableMembers\"\n                                                    name=\"ReminderMembers\"\n                                                    tagProperty=\"firstName\"\n                                                    displayLabelProps=\"firstName,lastName\"  maxTagsToDisplay=\"4\"\n                                                    searchProperty=\"firstName,lastName\"\n                                                    data_tabindex=\"3\"\n                                                    v-on:selectBoxUpdate=\"updateReminderReceiversEmitEvent($event)\"/>\n                           </div>\n                      </div>\n                      <div style=\"flex:1\">\n                          <label class=\"uk-form-label\" for=\"form-stacked-text\">Type </label>\n                          <div style=\"position:relative\">\n                              <select  v-model=\"reminderItem.type\" class=\"uk-select\"   tabindex=\"4\">\n                                  <option>Email</option>\n                                  <option>App Notification</option>\n                              </select>\n                              <div style=\"position:absolute;right: 7px;top: 9px;pointer-events: none;\"><span class=\"uk-icon\" uk-icon=\"triangle-down\"></span></div>\n                          </div>\n                      </div>\n                      <div style=\"flex:1\">\n                           <label class=\"uk-form-label\">Reminder Date/Time</label>\n                          <input type=\"datetime-local\" v-model=\"reminderItem.dateTime\" class=\"uk-input\" style=\"border-radius:3px\"/>\n                      </div>\n                </div>\n                <div style=\"display: flex;padding: 5px 0px;column-gap: 30px;;margin-right:15px;margin-left:15px;\">\n                    <div style=\"\">\n                          <button v-on:click=\"saveReminder()\"  class=\"clickable-btn uk-button uk-button-danger uk-button-small uk-grid-margin uk-first-column end-call-button\" style=\"background-color:#2196f3;border-radius: 3px;min-width: 100px;font-size: 0.65rem;line-height: 30px;font-weight: normal !important;display: inline-block;\">\n                              <span style=\"padding-left: 10px;\">{{reminderLabel}}</span>\n                          </button>\n                    </div>\n                    <div style=\"flex:1\">\n                    </div>\n                </div>\n                <br>\n\n            </form>\n        </div>\n    </div>\n\n\n  </div>\n\n</template>\n\n<script>\n\n  import { bus } from './../../../main.js';\n  import userMixinLib from './../../mixins/lib/user_mixin_lib';\n  import utilsMixinLib from './../../mixins/lib/utils_lib';\n  import uiListMixinLib from './../../mixins/lib/ui-list.js';\n\n  export default {\n  mixins: [\n    userMixinLib,\n    utilsMixinLib,\n    uiListMixinLib\n  ],\n  props: ['id', 'uniqueComponentId', 'selectedTask', 'loggedInUser', 'embeddingViewName', 'taskIdToBeViewed', 'isModalViewed'],\n  data: function () {\n    return {\n      // /loggedInUser :  {},\n      taskId: this.$route.params.taskId,\n      subtaskId: this.$route.params.subtaskId,\n      parentTaskName: null,\n      showNewSubTaskForm: false,\n      viewSubTask: false,\n      taskObject: {\n        id: this.id,\n        remindersCount: 0,\n        timelogsCount: 0,\n        transitionCount: 0,\n        attachedFormsCount: 0\n      },\n      resetTime: {\n        time: new Date().getTime()\n      },\n      showTaskInfoContainer: false,\n      preferredTab: 'none',\n\n      // Checklist data\n      checklistLabel: 'Add Item',\n      checklistItem: { actionType: 'NEW', activityName: '' },\n\n      // Reminders data\n      reminderList: [],\n      potentialMembersList: [],\n      availableMembers: [],\n      reminderLabel: 'Add Reminder',\n      reminderItem: { id: 'New' },\n\n      // Timelog data\n      timelogList: [],\n      timelogItem: { id: 'New' },\n      timelogLabel: 'Add Timelog',\n\n      // Task Transitions data\n      taskTransitionsList: [],\n\n      // Hooks data\n      customers: [],\n      customerBranches: [],\n      customerContacts: [],\n      customersUnfiltered: [],\n      customerBranchesUnfiltered: [],\n      customerContactsUnfiltered: [],\n      customersNames: '',\n      customerBranchesNames: '',\n      hooksSubmenuSearchQuery: '',\n      hookSubmenuCurrentlySelected: null,\n      hookSubmenu: {\n        isSubmenuCustomersSelected: false,\n        isSubmenuCustomerBranchesSelected: false,\n        isSubmenuCustomerContactsSelected: false\n      },\n\n      selectedTabKey: 'description',\n      isActivityTabInitialized: false,\n      isSubtasksTabInitialized: false,\n      isChecklistsTabInitialized: false,\n      isRemindersTabInitialized: false,\n      isTimelogsTabInitialized: false,\n      isTransitionsTabInitialized: false,\n      isFormsTabInitialized: false,\n      isHooksTabInitialized: false\n\n\n    };\n  },\n  methods: {\n\n\n    openAddReminderModal () {\n      // Clear these fields before attaching a new form-template.\n      this.reminderItem = {};\n      UIkit.modal(document.querySelector('#' + this.uniqueComponentId + '_add_reminder_modal')).show();\n    },\n    closeAddReminderModal () {\n      UIkit.modal(document.querySelector('#' + this.uniqueComponentId + '_add_reminder_modal')).hide();\n    },\n    loadCustomerHooks () {\n      // Load customers from local-storage\n      this.customers = []; // Reset this otherwise, for every task viewed, the dropdown gets populated resulting in unstable duplicates.\n      console.log('Customers before localstorage ', this.customers);\n      const customers = JSON.parse(localStorage.getItem('customers'));\n\n      // Make a copy from the local-storage data inorder to prevent manipulating the global data.\n      // This data will differ for each selected task.\n      customers.forEach(customer => {\n        if (this.taskObject.customerHookIds !== null) {\n          this.taskObject.customerHookIds.forEach(customerHookData => {\n            if (customerHookData.split('#')[0] === customer.id) {\n              customer.isSelected = true;\n            }\n          });\n        }\n\n        this.customers.push(customer);\n        this.customersUnfiltered.push(customer);\n      });\n\n      console.log('Customers after localstorage fetch ', this.customers);\n\n      const selectedCustomers = this.customers.filter(cust => cust.isSelected);\n      const numberOfSelectedCustomers = selectedCustomers.length;\n      if (numberOfSelectedCustomers > 0) { document.getElementById('selectedHookCustomersBadge').innerHTML = '(' + numberOfSelectedCustomers + ' selected)'; }\n\n      this.customersNames = selectedCustomers.map(cust => cust.name).join(', ');\n    },\n    loadCustomerBranchesHooks () {\n      // Load customers from local-storage\n      this.customerBranches = []; // Reset this otherwise, for every task viewed, the dropdown gets populated resulting in unstable duplicates.\n      console.log('Customer Branches before localstorage ', this.customerBranches);\n      const customerBranches = JSON.parse(localStorage.getItem('customer_branches'));\n\n      // Make a copy from the local-storage data inorder to prevent manipulating the global data.\n      // This data will differ for each selected task.\n      customerBranches.forEach(branch => {\n        if (this.taskObject.customerBranchHookIds !== null) {\n          this.taskObject.customerBranchHookIds.forEach(customerBranchHookData => {\n            if (customerBranchHookData.split('#')[0] === branch.id) {\n              branch.isSelected = true;\n            }\n          });\n        }\n\n        this.customerBranches.push(branch);\n        this.customerBranchesUnfiltered.push(branch);\n      });\n      console.log('Customer branches after localstorage fetch ', this.customerBranches);\n\n      // Update the selected badge\n      const selectedCustomerBranches = this.customerBranches.filter(custBranch => custBranch.isSelected);\n      const numberOfSelectedCustomerBranches = selectedCustomerBranches.length;\n      if (numberOfSelectedCustomerBranches > 0) { document.getElementById('selectedHookCustomerBranchesBadge').innerHTML = '(' + numberOfSelectedCustomerBranches + ' selected)'; }\n\n      this.customerBranchesNames = selectedCustomerBranches.map(custBranch => custBranch.name).join(', ');\n    },\n    loadCustomerContactsHooks () {\n      // Load customers from local-storage\n      this.customerContacts = []; // Reset this otherwise, for every task viewed, the dropdown gets populated resulting in unstable duplicates.\n      console.log('Customer Contacts before localstorage ', this.customerContacts);\n      const customerContacts = JSON.parse(localStorage.getItem('customer-contacts'));\n\n      // Make a copy from the local-storage data inorder to prevent manipulating the global data.\n      // This data will differ for each selected task.\n      customerContacts.forEach(customerContact => {\n        if (this.taskObject.customerContactHookIds !== null) {\n          this.taskObject.customerContactHookIds.forEach(customerContactHookData => {\n            if (customerHookData.split('#')[0] === customerContact.id) {\n              customerContact.isSelected = true;\n            }\n          });\n        }\n\n        this.customerContacts.push(customerContact);\n        this.customerContactsUnfiltered.push(customerContact);\n      });\n      console.log('Customer contacts after localstorage fetch ', this.customerContacts);\n\n      const numberOfSelectedCustomerContacts = this.customerContacts.filter(custContact => custContact.isSelected).length;\n      if (numberOfSelectedCustomerContacts > 0) { document.getElementById('selectedHookCustomerContactsBadge').innerHTML = '(' + numberOfSelectedCustomerContacts + ' selected)'; }\n    },\n    searchHooksSubmenu () {\n      console.log('hooks submenu query for ' + this.hookSubmenuCurrentlySelected + ' is ' + this.hooksSubmenuSearchQuery);\n\n      if (this.hookSubmenuCurrentlySelected === 'isSubmenuCustomersSelected') {\n        if (this.hooksSubmenuSearchQuery.trim() !== '') {\n          this.customers = this.customers.filter(customer => customer.name.toLowerCase().includes(this.hooksSubmenuSearchQuery.toLowerCase()));\n        } else {\n          this.customers = this.customersUnfiltered;\n        }\n      } else if (this.hookSubmenuCurrentlySelected === 'isSubmenuCustomerBranchesSelected') {\n        if (this.hooksSubmenuSearchQuery.trim() !== '') {\n          this.customerBranches = this.customerBranches.filter(customerBranch => customerBranch.name.toLowerCase().includes(this.hooksSubmenuSearchQuery.toLowerCase()));\n        } else {\n          this.customerBranches = this.customerBranchesUnfiltered;\n        }\n      } else if (this.hookSubmenuCurrentlySelected === 'isSubmenuCustomerContactsSelected') {\n        if (this.hooksSubmenuSearchQuery.trim() !== '') {\n          this.customerContacts = this.customerContacts.filter(customerContact => customerContact.name.toLowerCase().includes(this.hooksSubmenuSearchQuery.toLowerCase()));\n        } else {\n          this.customerContacts = this.customerContactsUnfiltered;\n        }\n      }\n    },\n    updateCustomerHook (customer) {\n      const post_url = './tasks/update-customer-hook';\n      const action = customer.isSelected ? 'ADD' : 'REMOVE';\n\n      const form = {\n        taskId: this.taskId,\n        customerId: customer.id + '#' + customer.name,\n        action: action\n      };\n\n      console.log('Task CustomerHook Update Data : ', form);\n      // return false;\n\n      // VueJS ajax call-1\n      axios.post(process.env.VUE_APP_API_URL + post_url, form)\n        .then((dataResponse) => {\n          console.log('Task CustomerHook Update Result : ');\n          console.log(dataResponse);\n\n          if (dataResponse.data.actionResult === 1) {\n            this.newWorkgroupInfo = dataResponse.data.bean;\n\n            const action = form.action === 'ADD' ? ' added ' : 'removed';\n\n            /*\n                        Revisit this code-block later (Commented on March 15, 2021)\n\n                        if(form.action===\"ADD\"){\n                            customer[\"isSelected\"] = true;\n                            this.currentlySelectedSubtaskForDependencyUpdate[\"dependencyTaskIds\"].push(form.customerId);\n                        }\n                        else if(form.action===\"REMOVE\"){\n\n                            customer[\"isSelected\"] = false;\n\n                            this.currentlySelectedSubtaskForDependencyUpdate[\"dependencyTaskIds\"]\n                                .forEach((dependencyTaskId, index) => {\n                                    if(dependencyTaskId === form.dependencyTaskId)\n                                    {\n                                        this.currentlySelectedSubtaskForDependencyUpdate[\"dependencyTaskIds\"].splice(index,1);\n                                    }\n                            });\n                        }\n\n                        //Update the labels in the gridrow based on the latest values.\n                        if(this.currentlySelectedSubtaskForDependencyUpdate.dependencyTaskIds===null)\n                        {\n                            this.currentlySelectedSubtaskForDependencyUpdate.dependencyTaskIds=[];\n                        }\n\n                        if(this.currentlySelectedSubtaskForDependencyUpdate.dependencyTaskIds!==null)\n                        {\n                            let dependencyTasksLabelArray = [];\n                            let dependencyTasksLabel = \"none\";\n                            this.currentlySelectedSubtaskForDependencyUpdate.dependencyTaskIds.forEach((dTaskId) => {\n                              dependencyTasksLabelArray.push(\"#\" + dTaskId.split(\"#\")[1]);\n                            });\n\n                            dependencyTasksLabel = dependencyTasksLabelArray.length>0 ? dependencyTasksLabelArray.join(\", \") : \"none\";\n                            this.currentlySelectedSubtaskForDependencyUpdate[\"dependencyTasksLabel\"] = dependencyTasksLabel;\n                        }\n\n                        */\n\n            UIkit.notification(`<div class=\"taskone-notification\">\n                                                <span uk-icon=\"icon: check;ratio:1\"></span>\n                                                <div>Customer Hook was ${action}.</div>\n                                            </div>`, {\n              status: 'success',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n\n            const selectedCustomers = this.customers.filter(cust => cust.isSelected);\n            const numberOfSelectedCustomers = selectedCustomers.length;\n            if (numberOfSelectedCustomers > 0) {\n              document.getElementById('selectedHookCustomersBadge').innerHTML = '(' + numberOfSelectedCustomers + ' selected)';\n            } else {\n              document.getElementById('selectedHookCustomersBadge').innerHTML = '';\n            }\n\n            this.customersNames = selectedCustomers.map(cust => cust.name).join(', ');\n\n            // document.getElementById('saveButton').innerHTML = btnText;\n            // this.enableHTMLElement(document.getElementById('saveButton'));\n\n            this.$emit('refreshList', {});\n          } else {\n            const errorMsg = (dataResponse.data).message;\n            UIkit.notification(\"<span uk-icon='icon: warning;ratio:1'></span>\" + errorMsg, {\n              status: 'danger',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n\n            // document.getElementById('saveButton').innerHTML = btnText;\n            // this.enableHTMLElement(document.getElementById('saveButton'));\n            return false;\n          }\n        })\n        .catch(function (errorResponse) {\n          console.log('ERROR MS - ', errorResponse);\n          const exceptionMsg = errorResponse.data.exception;\n\n          UIkit.notification(\"<span uk-icon='icon: warning ;ratio:1'></span> \" + exceptionMsg + '.', {\n            status: 'danger',\n            pos: 'bottom-left',\n            timeout: 500000\n          });\n          return false;\n        });\n    },\n    updateCustomerBranchHook (customerBranch) {\n      const post_url = './tasks/update-customer-branch-hook';\n      const action = customerBranch.isSelected ? 'ADD' : 'REMOVE';\n\n      const form = {\n        taskId: this.taskId,\n        customerId: customerBranch.customerId,\n        customerBranchId: customerBranch.id + '#' + customerBranch.name,\n        action: action\n      };\n\n      console.log('Task CustomerBranchHook Update Data : ', form);\n      // return false;\n\n      // VueJS ajax call-1\n      axios.post(process.env.VUE_APP_API_URL + post_url, form)\n        .then((dataResponse) => {\n          console.log('Task CustomerBranchHook Update Result : ');\n          console.log(dataResponse);\n\n          if (dataResponse.data.actionResult === 1) {\n            this.newWorkgroupInfo = dataResponse.data.bean;\n\n            const action = form.action === 'ADD' ? ' added ' : 'removed';\n\n            // Cascading Logic - March 16 2017\n            // When a branch is hooked, automatically check the corresponding branch's customer checkbox in the customer submenu.\n            // This will automatically display the customer as selected.\n            // Confirm the logic with Pawan the following 2 things\n            // 1. Should selecting atleast one branch also make the customer selected.\n            // 2. Should deselecting a customer, deselect all the branches?\n            // How to apply these logics?\n\n            /*\n                        this.customers.forEach(customer => {\n                          if(customer.id===form.customerId.split(\"#\")[0])\n                          {\n                            if(action === \"added\")\n                                customer.isSelected = true;\n                            else if(action === \"removed\")\n                                customer.isSelected = false;\n                          }\n                        });\n\n                        */\n\n            /*\n                        Revisit this code-block later (Commented on March 15, 2021)\n\n                        if(form.action===\"ADD\"){\n                            customer[\"isSelected\"] = true;\n                            this.currentlySelectedSubtaskForDependencyUpdate[\"dependencyTaskIds\"].push(form.customerId);\n                        }\n                        else if(form.action===\"REMOVE\"){\n\n                            customer[\"isSelected\"] = false;\n\n                            this.currentlySelectedSubtaskForDependencyUpdate[\"dependencyTaskIds\"]\n                                .forEach((dependencyTaskId, index) => {\n                                    if(dependencyTaskId === form.dependencyTaskId)\n                                    {\n                                        this.currentlySelectedSubtaskForDependencyUpdate[\"dependencyTaskIds\"].splice(index,1);\n                                    }\n                            });\n                        }\n\n                        //Update the labels in the gridrow based on the latest values.\n                        if(this.currentlySelectedSubtaskForDependencyUpdate.dependencyTaskIds===null)\n                        {\n                            this.currentlySelectedSubtaskForDependencyUpdate.dependencyTaskIds=[];\n                        }\n\n                        if(this.currentlySelectedSubtaskForDependencyUpdate.dependencyTaskIds!==null)\n                        {\n                            let dependencyTasksLabelArray = [];\n                            let dependencyTasksLabel = \"none\";\n                            this.currentlySelectedSubtaskForDependencyUpdate.dependencyTaskIds.forEach((dTaskId) => {\n                              dependencyTasksLabelArray.push(\"#\" + dTaskId.split(\"#\")[1]);\n                            });\n\n                            dependencyTasksLabel = dependencyTasksLabelArray.length>0 ? dependencyTasksLabelArray.join(\", \") : \"none\";\n                            this.currentlySelectedSubtaskForDependencyUpdate[\"dependencyTasksLabel\"] = dependencyTasksLabel;\n                        }\n\n                        */\n\n            UIkit.notification(`<div class=\"taskone-notification\">\n                                                <span uk-icon=\"icon: check;ratio:1\"></span>\n                                                <div>Customer Branch Hook was ${action}.</div>\n                                            </div>`, {\n              status: 'success',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n\n            // Update the selected badge\n            const selectedCustomerBranches = this.customerBranches.filter(custBranch => custBranch.isSelected);\n            const numberOfSelectedCustomerBranches = selectedCustomerBranches.length;\n            if (numberOfSelectedCustomerBranches > 0) {\n              document.getElementById('selectedHookCustomerBranchesBadge').innerHTML = '(' + numberOfSelectedCustomerBranches + ' selected)';\n            }\n            else {\n              document.getElementById('selectedHookCustomerBranchesBadge').innerHTML = '';\n            }\n\n            this.customerBranchesNames = selectedCustomerBranches.map(custBranch => custBranch.name).join(', ');\n\n            this.$emit('refreshList', {});\n            // document.getElementById('saveButton').innerHTML = btnText;\n            // this.enableHTMLElement(document.getElementById('saveButton'));\n          } else {\n            const errorMsg = (dataResponse.data).message;\n            UIkit.notification(\"<span uk-icon='icon: warning;ratio:1'></span>\" + errorMsg, {\n              status: 'danger',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n\n            // document.getElementById('saveButton').innerHTML = btnText;\n            // this.enableHTMLElement(document.getElementById('saveButton'));\n            return false;\n          }\n        })\n        .catch(function (errorResponse) {\n          console.log('ERROR MS - ', errorResponse);\n          const exceptionMsg = errorResponse.data.exception;\n\n          UIkit.notification(\"<span uk-icon='icon: warning ;ratio:1'></span> \" + exceptionMsg + '.', {\n            status: 'danger',\n            pos: 'bottom-left',\n            timeout: 500000\n          });\n          return false;\n        });\n    },\n    showTaskInfoContainerDiv () {\n      this.showTaskInfoContainer = true;\n      document.querySelector('body').addEventListener('click', this.handleBodyClickEvent, true);\n    },\n    hideTaskInfoContainer () {\n      this.showTaskInfoContainer = false;\n      document.querySelector('body').removeEventListener('click', this.handleBodyClickEvent, true);\n    },\n    handleBodyClickEvent (event) {\n      const foundTaskInfoContainer = event.target.closest('.task-info-container');\n      if (foundTaskInfoContainer === null) {\n        // This means, if target on which the click happened is not within the context-menu div, so you can close the context-menu dropdown.\n        this.hideTaskInfoContainer();\n      }\n    },\n    onMenuClick (selectedSubmenuName, label) {\n      // Display the relevant submenu list\n      this.hookSubmenuCurrentlySelected = selectedSubmenuName;\n      document.getElementById('submenu_searchbox').setAttribute('placeholder', 'Search ' + label);\n      document.getElementById('menu_slider').style.left = '-100%';\n\n      // If focus is done without settimeout, then the submenu sliding doesn't animate as expected.\n      setTimeout(() => document.getElementById('submenu_searchbox').focus(), 300);\n    },\n    onSubmenuClick () {\n      document.getElementById('menu_slider').style.left = '0%';\n    },\n    cancelChecklistItem (item) {\n      // this.checklistLabel = 'Update Item';\n      // this.checklistItem = item;\n      // this.checklistItem.actionType = 'UPDATE';\n      // this.checklistItem.previousActivityName = item.activityName; // This is the key to update\n\n      const post_url = './tasks/save-checklist-item';\n\n      const form = {\n        taskId: this.taskId,\n        actionType: 'UPDATE_STATUS',\n        activityName: item.activityName,\n        status: \"CANCELLED\"\n      };\n\n      // VueJS ajax call-1\n      axios.post(process.env.VUE_APP_API_URL + post_url, form)\n        .then((dataResponse) => {\n          // console.log(\"Task Save Result : \");\n          // console.log(dataResponse);\n\n          if (dataResponse.data.actionResult === 1) {\n            item.status = form.status;\n            const notificationLabel = 'Checklist item was cancelled.';\n\n\n            if (dataResponse.data.bean.first !== null) {\n              const updatedItem = dataResponse.data.bean.first;\n\n              this.taskObject.checklist.forEach(item => {\n                if (item.activityName === updatedItem.label) {\n                  item.status = updatedItem.status;\n                  item.updatedBy = updatedItem.updatedBy;\n                  if (item.updatedOn !== null) {\n                    // item.updatedOn = this.convertUTCDateFromServerToLocalDate(item.updatedOn);\n                    item.updatedOnFormatted = dayjs(item.updatedOn + \"Z\").format('DD/MM/YYYY HH:mm');\n                    item.updatedOnAgo = dayjs(item.updatedOn + \"Z\").fromNow();\n                    console.log('checklist-item.updatedOn = ', item.updatedOn);\n                  }\n                }\n              });\n            }\n\n            UIkit.notification(`<div class=\"taskone-notification\">\n                                                <span uk-icon=\"icon: check;ratio:1\"></span>\n                                                <div> ${notificationLabel} </div>\n                                            </div>`, {\n              status: 'success',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n\n            // this.$emit(\"refreshList\",{});\n          } else {\n            const errorMsg = (dataResponse.data).message;\n            UIkit.notification(\"<span uk-icon='icon: warning;ratio:1'></span>\" + errorMsg, {\n              status: 'danger',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n            return false;\n          }\n        })\n        .catch(function (errorResponse) {\n          console.log('ERROR MS - ', errorResponse);\n          const exceptionMsg = errorResponse.response.data.exception;\n\n          UIkit.notification(\"<span uk-icon='icon: warning ;ratio:1'></span> \" + exceptionMsg + '.', {\n            status: 'danger',\n            pos: 'bottom-left',\n            timeout: 5000\n          });\n\n          document.getElementById('saveButton').innerHTML = btnText;\n          this.enableHTMLElement(document.getElementById('saveButton'));\n          return false;\n        });\n    },\n    updateChecklistItemStatus (item, event) {\n      const post_url = './tasks/save-checklist-item';\n\n      const form = {\n        taskId: this.taskId,\n        actionType: 'UPDATE_STATUS',\n        activityName: item.activityName,\n        status: (item.status !== 'COMPLETED') ? 'COMPLETED' : 'PENDING'\n      };\n\n      // VueJS ajax call-1\n      axios.post(process.env.VUE_APP_API_URL + post_url, form)\n        .then((dataResponse) => {\n          // console.log(\"Task Save Result : \");\n          console.log(\"Checklist Item update : \", dataResponse);\n\n          if (dataResponse.data.actionResult === 1) {\n            item.status = form.status;\n            const notificationLabel = 'Checklist item updated.';\n\n            if (dataResponse.data.bean.first !== null) {\n              const updatedItem = dataResponse.data.bean.first;\n\n              this.taskObject.checklist.forEach(item => {\n                if (item.activityName === updatedItem.label) {\n                  item.status = updatedItem.status;\n                  item.updatedBy = updatedItem.updatedBy;\n                  if (item.updatedOn !== null) {\n                    // item.updatedOn = this.convertUTCDateFromServerToLocalDate(item.updatedOn);\n                    item.updatedOnFormatted = dayjs(item.updatedOn + \"Z\").format('DD/MM/YYYY HH:mm');\n                    item.updatedOnAgo = dayjs(item.updatedOn + \"Z\").fromNow();\n                    console.log('checklist-item.updatedOn = ', item.updatedOn);\n                  }\n\n                  setTimeout(() => {\n                    event.target.parentElement\n                         .querySelector(\".scaleZero\")\n                         .classList.remove(\"scaleZero\");\n                  }, 100);\n\n                }\n              });\n            }\n\n\n            UIkit.notification(`<div class=\"taskone-notification\">\n                                                <span uk-icon=\"icon: check;ratio:1\"></span>\n                                                <div> ${notificationLabel} </div>\n                                            </div>`, {\n              status: 'success',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n\n            // this.$emit(\"refreshList\",{});\n          } else {\n            const errorMsg = (dataResponse.data).message;\n            UIkit.notification(\"<span uk-icon='icon: warning;ratio:1'></span>\" + errorMsg, {\n              status: 'danger',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n            return false;\n          }\n        })\n        .catch(function (errorResponse) {\n          console.log('ERROR MS - ', errorResponse);\n          const exceptionMsg = errorResponse.response.data.exception;\n\n          UIkit.notification(\"<span uk-icon='icon: warning ;ratio:1'></span> \" + exceptionMsg + '.', {\n            status: 'danger',\n            pos: 'bottom-left',\n            timeout: 5000\n          });\n\n          document.getElementById('saveButton').innerHTML = btnText;\n          this.enableHTMLElement(document.getElementById('saveButton'));\n          return false;\n        });\n    },\n    saveChecklistItem () {\n      const post_url = './tasks/save-checklist-item';\n\n      const form = {\n        taskId: this.taskId,\n        actionType: this.checklistItem.actionType,\n        activityName: this.checklistItem.activityName,\n        previousActivityName: this.checklistItem.previousActivityName\n      };\n\n      if (this.checklistItem.activityName === undefined || this.checklistItem.activityName.trim() === \"\") {\n\n        const errorMsg = \"&nbsp;Checklist activity cannot be empty.\";\n        UIkit.notification(\"<span uk-icon='icon: warning;ratio:1'></span>\" + errorMsg, {\n          status: 'danger',\n          pos: 'bottom-left',\n          timeout: 5000\n        });\n        return false;\n      }\n\n      // VueJS ajax call-1\n      axios.post(process.env.VUE_APP_API_URL + post_url, form)\n        .then((dataResponse) => {\n          console.log('Task Save Result : ');\n          console.log(dataResponse);\n\n          if (dataResponse.data.actionResult === 1) {\n            if (dataResponse.data.bean.first !== null) {\n\n              const addedItem = dataResponse.data.bean.first;\n\n              // Get the current item from the existing list and update it, otherwise add new item.\n              if (form.actionType === 'NEW') {\n                if (this.taskObject.checklist === null) { this.taskObject.checklist = []; }\n\n                this.taskObject.checklist.push({\n                  activityName: addedItem.label,\n                  status: 'NEW'\n                });\n              } else if (form.actionType === 'UPDATE') {\n                // Iterate through the existing items and change its value.\n                this.taskObject.checklist.forEach((item) => {\n                  if (form.previousActivityname === item.activityName) {\n                    item.activityName = addedItem.label;\n                  }\n                });\n              }\n            }\n\n            this.checklistItem = { actionType: 'NEW' };\n            this.checklistLabel = 'Add Item';\n\n            const notificationLabel = (this.checklistItem.actionType === 'UPDATE') ? 'Checklist item updated.' : 'Checklist item added.';\n\n            UIkit.notification(`<div class=\"taskone-notification\">\n                                                  <span uk-icon=\"icon: check;ratio:1\"></span>\n                                                  <div> ${notificationLabel} </div>\n                                              </div>`, {\n              status: 'success',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n\n            // this.$emit(\"refreshList\",{});\n          } else {\n            const errorMsg = (dataResponse.data).message;\n            UIkit.notification(\"<span uk-icon='icon: warning;ratio:1'></span>\" + errorMsg, {\n              status: 'danger',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n            return false;\n          }\n        })\n        .catch(function (errorResponse) {\n          console.log('ERROR MS - ', errorResponse);\n          const exceptionMsg = errorResponse.response.data.exception;\n\n          UIkit.notification(\"<span uk-icon='icon: warning ;ratio:1'></span> \" + exceptionMsg + '.', {\n            status: 'danger',\n            pos: 'bottom-left',\n            timeout: 5000\n          });\n\n          document.getElementById('saveButton').innerHTML = btnText;\n          this.enableHTMLElement(document.getElementById('saveButton'));\n          return false;\n        });\n    },\n\n    // Reminders codes\n    updateReminderItem (item) {\n      this.reminderLabel = 'Update Reminder';\n      this.reminderItem = item;\n      this.resetReminderPotentialMembers();\n    },\n\n    // This data will be used to filter both members and admins by merging with the result from 'get-associated-people/{workgroup-id}'\n    loadPotentialMembersForReminders () {\n      let url = '';\n\n      // if(!this.doesCategoryHasAdvancedSettings)\n      //     url = \"./categories/get-category-members/\" + this.taskObject.categoryIds[0];          // Fetch all potential members (users)\n      // else\n      //     url = \"./categories-stages/get-category-stage-members/\" + this.taskObject.status;               // Fetch specific members assigned to handle category-stage.\n\n      // Clarify with the boss if assignee values must be the same as configured in stage-members? or is stage-members only used for permission to take that action via selectbox?\n      url = './categories/get-category-members/' + this.taskObject.categoryId; // Fetch all potential members (users)\n      // console.log(\" this.taskObject potentialMembers\",  this.taskObject);\n      // this.getUnpaginatedList(\"potentialMembers\", url);   // This lib call will fire the callback \"handleUnpaginatedListData\" when it completes.\n\n      // console.log(\"Mixin : Retrieving data from : \" + url);\n\n      try {\n        // VueJS ajax call-1\n        axios.get(process.env.VUE_APP_API_URL + url)\n          .then((dataResponse) => {\n            // console.log(\"List: \" , dataResponse);\n\n            this.handlePotentialReminderMembers(dataResponse);\n          })\n          .catch((error) => {\n            this.handleUnpaginatedListDataError(error);\n          });\n      } catch (error) {\n        console.error('Unpaginated List data fetch error : ', error);\n      }\n    },\n    // Callbacks\n    handlePotentialReminderMembers (dataResponse) {\n      // Pass it to the availableAssignees prop to the dropdown.\n      // console.log(\"Potential members to receive reminders relevant to the category: \", dataResponse);\n\n      const mapFunction = (user) => {\n        return {\n          id: user.id,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          isSelected: false\n        };\n      };\n\n      const mappedArrayOfUser = dataResponse.data.bean.members.map(mapFunction);\n      this.potentialMembersList = mappedArrayOfUser;\n\n      const potentialMembers = [];\n\n      mappedArrayOfUser.forEach((user) => {\n        const userObj = {\n          id: user.id,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          isSelected: false // Set false by default, so that if the category didn't have any member, then all of the available list could be passed to selectbox.\n        };\n\n        if (this.reminderItem.userIds !== null && this.reminderItem.userIds !== undefined) {\n          this.reminderItem.userIds.forEach((userId) => {\n            if (user.id === userId) { userObj.isSelected = true; }\n          });\n        }\n        potentialMembers.push(userObj);\n      });\n\n      this.availableMembers = potentialMembers;\n      // console.log(\"this.availableMembers : \" , this.availableMembers);\n    },\n    resetReminderPotentialMembers () {\n      const mappedArrayOfUser = this.potentialMembersList;\n\n      const potentialMembers = [];\n\n      mappedArrayOfUser.forEach((user) => {\n        const userObj = {\n          id: user.id,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          isSelected: false // Set false by default, so that if the category didn't have any member, then all of the available list could be passed to selectbox.\n        };\n\n        if (this.reminderItem.userIds !== null && this.reminderItem.userIds !== undefined) {\n          this.reminderItem.userIds.forEach((userId) => {\n            if (user.id === userId) { userObj.isSelected = true; }\n          });\n        }\n        potentialMembers.push(userObj);\n      });\n\n      this.availableMembers = potentialMembers;\n      // console.log(\"this.availableMembers : \" , this.availableMembers);\n    },\n    updateReminderReceiversEmitEvent (data) {\n      // console.log(\"--data--\" , data);\n      const userIds = Array.from(data).map(item => item.id);\n      this.reminderItem.userIds = userIds;\n    },\n    updateReminderStatus (item) {\n      const post_url = './reminders/save';\n\n      const form = {\n        id: item.id,\n        taskId: this.taskId,\n        title: reminderItem.title,\n        dateTime: reminderItem.dateTime,\n        userIds: reminderItem.userIds\n      };\n\n      // console.log(form);\n      // return false;\n\n      // VueJS ajax call-1\n      axios.post(process.env.VUE_APP_API_URL + post_url, form)\n        .then((dataResponse) => {\n          // console.log(\"Reminder Save Result : \");\n          // console.log(dataResponse);\n\n          if (dataResponse.data.actionResult === 1) {\n            const notificationLabel = 'Checklist item updated.';\n\n            UIkit.notification(`<div class=\"taskone-notification\">\n                                                <span uk-icon=\"icon: check;ratio:1\"></span>\n                                                <div> ${notificationLabel} </div>\n                                            </div>`, {\n              status: 'success',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n\n            // this.$emit(\"refreshList\",{});\n          } else {\n            const errorMsg = (dataResponse.data).message;\n            UIkit.notification(\"<span uk-icon='icon: warning;ratio:1'></span>\" + errorMsg, {\n              status: 'danger',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n            return false;\n          }\n        })\n        .catch(function (errorResponse) {\n          console.log('ERROR MS - ', errorResponse);\n          const exceptionMsg = errorResponse.response.data.exception;\n\n          UIkit.notification(\"<span uk-icon='icon: warning ;ratio:1'></span> \" + exceptionMsg + '.', {\n            status: 'danger',\n            pos: 'bottom-left',\n            timeout: 5000\n          });\n\n          document.getElementById('saveButton').innerHTML = btnText;\n          this.enableHTMLElement(document.getElementById('saveButton'));\n          return false;\n        });\n    },\n    saveReminder () {\n      const post_url = './reminders/save';\n\n      const isNew = this.reminderItem.id == 'New';\n      const form = {\n        id: this.reminderItem.id,\n        taskId: this.taskId,\n        type: this.reminderItem.type,\n        title: this.reminderItem.title,\n        userIds: this.reminderItem.userIds\n      };\n\n      if (this.reminderItem.dateTime) {\n        // form[\"dateTime\"] = new Date(this.reminderItem.dateTime).toLocaleString();\n\n        // Always convert the inputs from browser into UTC timezone and ISO format.\n        form.dateTime = new Date(this.reminderItem.dateTime).toISOString();\n      }\n\n      // console.log(form);\n      // return false;\n\n      // VueJS ajax call-1\n      axios.post(process.env.VUE_APP_API_URL + post_url, form)\n        .then((dataResponse) => {\n          // console.log(\"Reminder save Result : \");\n          // console.log(dataResponse);\n\n          if (dataResponse.data.actionResult === 1) {\n            this.reminderItem = { id: 'New' };\n            // this.reminderItem = {\"actionType\" : \"NEW\"};\n            this.reminderLabel = 'Add Reminder';\n            this.resetReminderPotentialMembers();\n            this.loadReminders();\n            this.closeAddReminderModal();\n\n            const notificationLabel = (isNew) ? 'New Reminder added.' : 'Reminder updated.';\n\n            UIkit.notification(`<div class=\"taskone-notification\">\n                                                  <span uk-icon=\"icon: check;ratio:1\"></span>\n                                                  <div> ${notificationLabel} </div>\n                                              </div>`, {\n              status: 'success',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n\n            // this.$emit(\"refreshList\",{});\n          } else {\n            const errorMsg = (dataResponse.data).message;\n            UIkit.notification(\"<span uk-icon='icon: warning;ratio:1'></span>\" + errorMsg, {\n              status: 'danger',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n            return false;\n          }\n        })\n        .catch(function (errorResponse) {\n          console.log('ERROR MS - ', errorResponse);\n          const exceptionMsg = errorResponse.response.data.exception;\n\n          UIkit.notification(\"<span uk-icon='icon: warning ;ratio:1'></span> \" + exceptionMsg + '.', {\n            status: 'danger',\n            pos: 'bottom-left',\n            timeout: 5000\n          });\n\n          document.getElementById('saveButton').innerHTML = btnText;\n          this.enableHTMLElement(document.getElementById('saveButton'));\n          return false;\n        });\n    },\n    cancelReminderItem (item) {\n      // this.reminderItem = item;\n\n      const post_url = './reminders/cancel';\n      const form = {\n        id: item.id,\n        status: \"CANCELLED\"\n      };\n\n      // VueJS ajax call-1\n      axios.post(process.env.VUE_APP_API_URL + post_url, form)\n        .then((dataResponse) => {\n          // console.log(\"Reminder save Result : \");\n          // console.log(dataResponse);\n\n          if (dataResponse.data.status === \"SUCCESS\") {\n            this.reminderItem = { id: 'New' };\n            this.resetReminderPotentialMembers();\n            this.loadReminders();\n\n            const notificationLabel = 'Reminder cancelled.';\n\n            UIkit.notification(`<div class=\"taskone-notification\">\n                                                  <span uk-icon=\"icon: check;ratio:1\"></span>\n                                                  <div> ${notificationLabel} </div>\n                                              </div>`, {\n              status: 'success',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n\n            // this.$emit(\"refreshList\",{});\n          } else {\n            const errorMsg = (dataResponse.data).message;\n            UIkit.notification(\"<span uk-icon='icon: warning;ratio:1'></span>\" + errorMsg, {\n              status: 'danger',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n            return false;\n          }\n        })\n        .catch(function (errorResponse) {\n          console.log('ERROR MS - ', errorResponse);\n          const exceptionMsg = errorResponse.response.data.exception;\n\n          UIkit.notification(\"<span uk-icon='icon: warning ;ratio:1'></span> \" + exceptionMsg + '.', {\n            status: 'danger',\n            pos: 'bottom-left',\n            timeout: 5000\n          });\n\n          document.getElementById('saveButton').innerHTML = btnText;\n          this.enableHTMLElement(document.getElementById('saveButton'));\n          return false;\n        });\n    },\n    loadReminders () {\n\n        // Attempting to use Comlink Worker\n            const get_url = './reminders/list/' + this.taskObject.id; // Fetch all reminders\n            const callbackFunction = (dataResponse) => {\n\n              dataResponse.data = dataResponse;\n\n              // Pass it to the availableAssignees prop to the dropdown.\n              console.log('Fetched reminders for task id : ', this.taskObject.id, dataResponse);\n\n              this.reminderList = [];\n              const reminders = dataResponse.data.bean;\n\n              if (reminders !== null) { this.taskObject.remindersCount = reminders.length; } else { this.taskObject.remindersCount = 0; }\n\n              reminders.forEach((item) => {\n\n                if (item.dateTime !== null) {\n                  // item.dateTimeFormatted = new Date(item.dateTime).toLocaleString()\n                  //                                          .slice(0, 17)\n                  //                                          .replace(',', '')\n                  //                                          .replace('T',' ');\n\n                  // Added during \"Fix-Date-UTC-Update\"\n                  // item.dateTimeFormatted = new Date(item.dateTime.replace(',', '').replace('T',' ') + \" UTC\").toLocaleString();\n                  // item.dateTimeFormatted = this.convertUTCDateFromServerToLocalDate(item.dateTime);\n                  item.dateTimeFormatted = dayjs(item.dateTime + \"Z\").format('DD/MM/YYYY HH:mm');\n                  console.log('reminder-item.dateTime = ', item.dateTime);\n                }\n\n                item.usersString = item.users.map(user => user.firstName + \" \" + user.lastName).join(\", \");\n\n                this.reminderList.push(item);\n              });\n            };\n            const callbackError = (error) => {\n              console.error('Error in task-view-ms.loadReminders()');\n              console.error(error);\n              UIkit.notification(\"<span uk-icon='icon: warning;ratio: 0.75'></span>\" + error, {\n                status: 'danger',\n                pos: 'bottom-left',\n                timeout: 5000\n              });\n            };\n\n            async function sendTaskToWorker () {\n                // const remoteFunction = Comlink.wrap(new Worker(\"resources/js/comlink-worker.js\"));\n                console.log(\"Loading reminders using comlink-worker\");\n                await ComlinkWorker.fetch(process.env.VUE_APP_API_URL + get_url,\n                                           Comlink.proxy(callbackFunction),\n                                           Comlink.proxy(callbackError));\n            }\n\n            sendTaskToWorker();\n            return false;\n        // Comlink worker ends here\n\n      try {\n        const url = './reminders/list/' + this.taskObject.id; // Fetch all subtasks\n        // console.log(\"loading reminders : \" + url);\n        this.getUnpaginatedList('reminders', url); // This lib call will fire the callback \"handleUnpaginatedListData\" when it completes.\n      } catch (e) {\n        alert(e);\n      }\n    },\n\n    // Timelogs codes\n\n    updateTimelogItem (item) {\n      this.timelogLabel = 'Update Timelog';\n      this.timelogItem = item;\n    },\n    saveTimelog () {\n      const post_url = './timelogs/save';\n\n      const isNew = this.timelogItem.id == 'New';\n      const form = {\n        id: this.timelogItem.id,\n        taskId: this.taskId,\n        description: this.timelogItem.description,\n        duration: this.timelogItem.duration,\n        durationUnit: this.timelogItem.durationUnit\n      };\n\n      // do validations here\n\n\n      if (form.description === undefined || form.description === null || form.description === \"\") {\n        alert(\"Please enter a valid description.\");\n        return false;\n      }\n\n      if (form.duration === undefined || form.duration === null || form.duration === \"\") {\n        alert(\"Please add a valid duration.\");\n        return false;\n      }\n\n      if (form.durationUnit === undefined || form.durationUnit === null || form.durationUnit === \"\") {\n        alert(\"Please select a valid duration unit.\");\n        return false;\n      }\n\n      /*\n\n        Pawan wanted this as 'duration and durationUnits'\n\n      if (this.timelogItem.startDateTime) {\n        // form[\"startDateTime\"] = new Date(this.timelogItem.startDateTime).toLocaleString();\n\n        // Always convert the inputs from browser into UTC timezone and ISO format.\n        form.startDateTime = new Date(this.timelogItem.startDateTime).toISOString();\n      }\n\n      if (this.timelogItem.endDateTime) {\n        // form[\"endDateTime\"] = new Date(this.timelogItem.endDateTime).toLocaleString();\n\n        // Always convert the inputs from browser into UTC timezone and ISO format.\n        form.endDateTime = new Date(this.timelogItem.endDateTime).toISOString();\n      }\n      */\n\n      // console.log(form);\n      // return false;\n\n      // VueJS ajax call-1\n      axios.post(process.env.VUE_APP_API_URL + post_url, form)\n        .then((dataResponse) => {\n          // console.log(\"Timelog save Result : \");\n          // console.log(dataResponse);\n\n          if (dataResponse.data.actionResult === 1) {\n            this.timelogItem = { id: 'New' };\n            // this.reminderItem = {\"actionType\" : \"NEW\"};\n            this.timelogLabel = 'Add Timelog';\n            this.loadTimelogs();\n\n            const notificationLabel = (isNew) ? 'New Timelog added.' : 'Timelog updated.';\n\n            UIkit.notification(`<div class=\"taskone-notification\">\n                                                  <span uk-icon=\"icon: check;ratio:1\"></span>\n                                                  <div> ${notificationLabel} </div>\n                                              </div>`, {\n              status: 'success',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n\n            // this.$emit(\"refreshList\",{});\n          } else {\n            const errorMsg = (dataResponse.data).message;\n            UIkit.notification(\"<span uk-icon='icon: warning;ratio:1'></span>\" + errorMsg, {\n              status: 'danger',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n            return false;\n          }\n        })\n        .catch(function (errorResponse) {\n          console.log('ERROR MS - ', errorResponse);\n          const exceptionMsg = errorResponse.response.data.exception;\n\n          UIkit.notification(\"<span uk-icon='icon: warning ;ratio:1'></span> \" + exceptionMsg + '.', {\n            status: 'danger',\n            pos: 'bottom-left',\n            timeout: 5000\n          });\n\n          document.getElementById('saveButton').innerHTML = btnText;\n          this.enableHTMLElement(document.getElementById('saveButton'));\n          return false;\n        });\n    },\n    cancelTimelogItem (item) {\n      // this.timelogItem = item;\n\n      const post_url = './timelogs/cancel';\n      const form = {\n        id: item.id,\n        status: \"CANCELLED\"\n      };\n\n      // VueJS ajax call-1\n      axios.post(process.env.VUE_APP_API_URL + post_url, form)\n        .then((dataResponse) => {\n          // console.log(\"Reminder save Result : \");\n          // console.log(dataResponse);\n\n          if (dataResponse.data.status === \"SUCCESS\") {\n            this.timelogItem = { id: 'New' };\n            this.loadTimelogs();\n\n            const notificationLabel = 'Timelog entry cancelled.';\n\n            UIkit.notification(`<div class=\"taskone-notification\">\n                                                  <span uk-icon=\"icon: check;ratio:1\"></span>\n                                                  <div> ${notificationLabel} </div>\n                                              </div>`, {\n              status: 'success',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n\n            // this.$emit(\"refreshList\",{});\n          } else {\n            const errorMsg = (dataResponse.data).message;\n            UIkit.notification(\"<span uk-icon='icon: warning;ratio:1'></span>\" + errorMsg, {\n              status: 'danger',\n              pos: 'bottom-left',\n              timeout: 5000\n            });\n            return false;\n          }\n        })\n        .catch(function (errorResponse) {\n          console.log('ERROR MS - ', errorResponse);\n          const exceptionMsg = errorResponse.response.data.exception;\n\n          UIkit.notification(\"<span uk-icon='icon: warning ;ratio:1'></span> \" + exceptionMsg + '.', {\n            status: 'danger',\n            pos: 'bottom-left',\n            timeout: 5000\n          });\n\n          document.getElementById('saveButton').innerHTML = btnText;\n          this.enableHTMLElement(document.getElementById('saveButton'));\n          return false;\n        });\n    },\n    loadTimelogs () {\n      try {\n        const url = './timelogs/list/' + this.taskObject.id; // Fetch all subtasks\n        // console.log(\"loading timelogs : \" + url);\n        this.getUnpaginatedList('timelogs', url); // This lib call will fire the callback \"handleUnpaginatedListData\" when it completes.\n      } catch (e) {\n        alert(e);\n      }\n    },\n    loadTaskTransitions () {\n      try {\n        const url = './task-transitions/list/' + this.taskObject.id; // Fetch all task transitions\n        // console.log(\"loading transitions : \" + url);\n        this.getUnpaginatedList('task_transitions', url); // This lib call will fire the callback \"handleUnpaginatedListData\" when it completes.\n      } catch (e) {\n        alert(e);\n      }\n    },\n\n    // Callbacks of loadPotentialMembersForReminders function.\n    handleUnpaginatedListData (listKey, data) {\n      if (listKey === 'reminders') { this.handleFetchedReminders(data); }\n      else if (listKey === 'timelogs') { this.handleFetchedTimelogs(data); }\n      else if (listKey === 'task_transitions') { this.handleFetchedTaskTransitions(data); }\n    },\n    handleUnpaginatedListDataError (error) {\n      console.error('Unpaginated List data fetch error : ', error);\n    },\n    handleFetchedReminders (dataResponse) {\n\n    },\n    handleFetchedTimelogs (dataResponse) {\n      // Pass it to the availableAssignees prop to the dropdown.\n      // console.log(\"Potential transitions : \", dataResponse);\n\n      this.timelogList = [];\n      const timelogs = dataResponse.data.bean;\n\n      if (timelogs !== null) { this.taskObject.timelogsCount = timelogs.length; } else { this.taskObject.timelogsCount = 0; }\n\n      timelogs.forEach((item) => {\n        if (item.startDateTime !== null) {\n          // item.startDateTimeFormatted = new Date(item.startDateTime).toLocaleString()\n          //                                          .slice(0, 17)\n          //                                          .replace(',', '')\n          //                                          .replace('T',' ');\n\n          // Added during \"Fix-Date-UTC-Update\"\n          // item.startDateTimeFormatted = new Date(item.startDateTime.replace(',', '').replace('T',' ') + \" UTC\").toLocaleString();\n          item.startDateTimeFormatted = this.convertUTCDateFromServerToLocalDate(item.startDateTime);\n        }\n\n        if (item.endDateTime !== null) {\n          // item.endDateTimeFormatted = new Date(item.endDateTime).toLocaleString()\n          //                                          .slice(0, 17)\n          //                                          .replace(',', '')\n          //                                          .replace('T',' ');\n\n          // Added during \"Fix-Date-UTC-Update\"\n          // item.endDateTimeFormatted = new Date(item.endDateTime.replace(',', '').replace('T',' ') + \" UTC\").toLocaleString();\n          item.endDateTimeFormatted = this.convertUTCDateFromServerToLocalDate(item.endDateTime);\n        }\n\n\n        this.timelogList.push(item);\n      });\n    },\n\n    handleFetchedTaskTransitions (dataResponse) {\n      // Pass it to the availableAssignees prop to the dropdown.\n      // console.log(\"Potential transitions : \", dataResponse);\n\n      this.taskTransitionsList = [];\n      const taskTransitionsList = dataResponse.data.bean;\n\n      if (taskTransitionsList !== null) { this.taskObject.transitionCount = taskTransitionsList.length; } else { this.taskObject.transitionCount = 0; }\n\n      taskTransitionsList.forEach((item) => {\n        if (item.startDateTime !== null) {\n          item.startDateTimeFormatted = this.convertUTCDateFromServerToLocalDate(item.startDateTime);\n          // alert(item.startDateTime + \" to \" + item.startDateTimeFormatted);\n          item.startDate = item.startDateTimeFormatted.split(\"T\")[0];\n          item.startTime = item.startDateTimeFormatted.split(\"T\")[1].split(\":\")[0] + \":\" + item.startDateTimeFormatted.split(\"T\")[1].split(\":\")[1];\n        }\n\n        if (item.endDateTime !== null) {\n          item.endDateTimeFormatted = this.convertUTCDateFromServerToLocalDate(item.endDateTime);\n          item.endDate = item.endDateTimeFormatted.split(\"T\")[0];\n          item.endTime = item.endDateTimeFormatted.split(\"T\")[1].split(\":\")[0] + \":\" + item.endDateTimeFormatted.split(\"T\")[1].split(\":\")[1];\n        }\n\n        if (item.durationUnit === 'MINUTES') {\n          item.durationUnitFormatted = 'Hrs';\n          item.durationInHours = parseFloat(item.duration / 60).toFixed(2);\n        }\n\n        this.taskTransitionsList.push(item);\n      });\n    },\n\n    someFunction (elem) { console.log(elem); },\n    goToHomePage () {\n      this.$router.push({\n        name: 'home',\n        params: {}\n      });\n    },\n    refreshSubTasksList () {\n      // console.log(\"Refresh refresh SubTasks list\");\n      this.$emit('refreshSubTasksList', {});\n    },\n\n    sendNewSubTaskEvent () {\n      // console.log(\"Event emitted in bus.\", new Date());\n      bus.emit('newSubTaskEvent', {\n        parentTask: this.taskObject,\n        modalKey: \"new_sub_task\"\n      });\n    },\n    /* This addNewSubTask method will be substituted by sendNewSubTaskEvent method which keeps the 'new-task' and 'new-subtask' flows as same. */\n    addNewSubTask () {\n      // Altered code to link components and actions with their appropriate routes. (Dec 5th 2020 by Bhaskara vignesh)\n      this.sendNewSubTaskEvent();\n      return false;\n      // The below code won't be executed.\n\n      this.parentTaskName = this.taskObject.sno;\n      this.showNewSubTaskForm = true;\n      this.viewSubTask = false;\n    },\n    exitNewSubTaskView () {\n      this.showNewSubTaskForm = false;\n      // this.viewSubTask=true;\n    },\n    exitSubTaskView () {\n      this.$router.push({\n        name: 'view-task-inbox',\n        params: {\n          taskId: this.$route.params.taskId,\n          subtaskId: 'none'\n        }\n      });\n\n      this.taskObject.id = this.$route.params.taskId;\n      this.viewSubTask = false;\n      this.parentTaskName = null;\n      this.showNewSubTaskForm = false;\n      this.getRecord();\n      UIkit.switcher(document.getElementById(this.embeddingViewName + '_switcherTabs')).show(3); // Show the subtasks tab\n    },\n    displayRelevantTab () {\n\n      // Show the existing opened tab, even if the task chosen on list changes.\n      // In this way, when we are on \"Activity Tab\", we can see activities of different tasks with less clicks.\n      this.displayTab(null, this.selectedTabKey);\n      return false;\n\n      if (this.preferredTab === 'Description') {\n        this.displayTab(null, 'description');\n        UIkit.switcher(document.getElementById(this.embeddingViewName + '_switcherTabs')).show(0);\n      } else if (this.preferredTab === 'Activity') {\n        this.displayTab(null, 'activity');\n        UIkit.switcher(document.getElementById(this.embeddingViewName + '_switcherTabs')).show(1);\n      } else if (this.preferredTab === 'Subtasks') {\n        this.displayTab(null, 'subtasks');\n        UIkit.switcher(document.getElementById(this.embeddingViewName + '_switcherTabs')).show(2);\n      } else if (this.preferredTab === 'Checklist') {\n        this.displayTab(null, 'checklist');\n        UIkit.switcher(document.getElementById(this.embeddingViewName + '_switcherTabs')).show(3);\n\n\n\n      } else if (this.preferredTab === 'Reminders') {\n        this.displayTab(null, 'reminders');\n        UIkit.switcher(document.getElementById(this.embeddingViewName + '_switcherTabs')).show(4);\n      } else if (this.preferredTab === 'Timelog') {\n        this.displayTab(null, 'timelogs');\n        UIkit.switcher(document.getElementById(this.embeddingViewName + '_switcherTabs')).show(5);\n      } else if (this.preferredTab === 'Status Tracking') {\n        this.displayTab(null, 'transitions');\n        UIkit.switcher(document.getElementById(this.embeddingViewName + '_switcherTabs')).show(6);\n      } else if (this.preferredTab === 'Task Log') {\n        this.displayTab(null, 'forms');\n        UIkit.switcher(document.getElementById(this.embeddingViewName + '_switcherTabs')).show(7);\n      }\n    },\n    displayTab (e, tabKey) {\n      // e.preventDefault();\n      this.selectedTabKey = tabKey;\n\n\n      // Reset all active tabs\n      Array.from(document.querySelectorAll('#' + this.embeddingViewName + '_switcherTabs > li'))\n           .forEach(item => item.classList.remove(\"uk-active\"));\n\n      if (e !== null)\n      {\n        e.target.classList.add(\"uk-active\");\n      }\n      else if (e === null && this.selectedTabKey !== null) {\n\n        document.querySelector('#' + this.embeddingViewName + '_switcherTabs > li.' + this.selectedTabKey)\n                .classList.add(\"uk-active\");\n      }\n      else\n      {\n        console.log(\"No active tab, so making the first one active\");\n        (Array.from(document.querySelectorAll('#' + this.embeddingViewName + '_switcherTabs > li'))[0]).classList.add(\"uk-active\");\n      }\n\n      if (this.selectedTabKey === 'activity' && !this.isActivityTabInitialized)\n      {\n        this.isActivityTabInitialized = true;\n      }\n      else if (this.selectedTabKey === 'subtasks' && !this.isSubtasksTabInitialized)\n      {\n        this.isSubtasksTabInitialized = true;\n      }\n      else if (this.selectedTabKey === 'checklist' && !this.isChecklistsTabInitialized)\n      {\n        this.isChecklistsTabInitialized = true;\n        // Animate show the checkboxes.\n        setTimeout(() => {\n           Array.from(document.querySelectorAll(\".scaleZero\"))\n                .forEach(checklist => {\n                    checklist.classList.remove(\"scaleZero\");\n                });\n        }, 500);\n      }\n      else if (this.selectedTabKey === 'reminders' && !this.isRemindersTabInitialized)\n      {\n        this.isRemindersTabInitialized = true;\n      }\n      else if (this.selectedTabKey === 'timelogs' && !this.isTimelogsTabInitialized)\n      {\n        this.isTimelogsTabInitialized = true;\n      }\n      else if (this.selectedTabKey === 'transitions' && !this.isTransitionsTabInitialized)\n      {\n        this.isTransitionsTabInitialized = true;\n      }\n      else if (this.selectedTabKey === 'forms' && !this.isFormsTabInitialized)\n      {\n        this.isFormsTabInitialized = true;\n      }\n\n      // alert(\"Going to activity Tab\");\n      // UIkit.switcher(document.getElementById(this.embeddingViewName + '_switcherTabs')).show(6);\n    },\n    getRecord () {\n\n      // Attempting fetch using comlink;\n\n        // Developer notes regarding the usage of Comlink.\n        // In the main.js, we are importing Comlink using 'import * as Comlink from \"comlink\"'\n        // After importing, we are storing the Comlink object into the window object\n        //    in the following code line\n        //    window.Comlink = Comlink\n        // Secondly, we are storing a reference of the worker into the window object as well.\n        //    window.ComlinkWorker = Comlink.wrap(new Worker(\"resources/js/comlink-worker.js\"));\n\n        if (this.taskObject === undefined || this.taskObject === null) {\n          return false;\n        }\n        else if (this.taskObject.id === undefined || this.taskObject.id === null) {\n          return false;\n        }\n\n        const get_url = './tasks/get/' + this.taskObject.id;\n        const callbackFunction = (dataResponse) => {\n\n          dataResponse.data = dataResponse;\n          if (dataResponse.data.actionResult == 1) {\n            const taskObject = dataResponse.data.bean;\n                  taskObject.categoryInfo.name = taskObject.categoryInfo.label;\n                  taskObject.category = taskObject.categoryInfo; // v2 schema change (June 7, 2021)\n\n              // To prevent undefined error in the status's selectbox's v-bind:selected attribute\n              taskObject.statusInfo = taskObject.statusInfo !== null ? taskObject.statusInfo : {};\n\n\n            if (taskObject.createdBy !== null) {\n              taskObject.createdById = taskObject.createdBy.split('#')[0];\n              taskObject.createdByName = taskObject.createdBy.split('#')[1];\n            }\n\n            if (taskObject.createdOn !== null) {\n              // taskObject.createdOn = this.convertUTCDateFromServerToLocalDate(taskObject.createdOn);\n              taskObject.createdOnFormatted = dayjs(taskObject.createdOn + \"Z\").format('DD/MM/YYYY HH:mm');\n              taskObject.createdOnAgo = dayjs(taskObject.createdOn + \"Z\").fromNow();\n            }\n\n            if (taskObject.startDateTime !== null) {\n              // task.dueDateTime = new Date(task.dueDateTime).toLocaleString()\n              //                                          .slice(0, 17)\n              //                                          .replace(',', '')\n              //                                          .replace('T',' ');\n\n              // Added during \"Fix-Date-UTC-Update\"\n              // taskObject.dueDateTime = new Date(taskObject.dueDateTime.replace(',', '').replace('T',' ') + \" UTC\").toLocaleString();\n              taskObject.startDateTime = this.convertUTCDateFromServerToLocalDate(taskObject.startDateTime);\n              console.log('taskObject.startDateTime = ', taskObject.startDateTime);\n            }\n\n            if (taskObject.dueDateTime !== null) {\n              // task.dueDateTime = new Date(task.dueDateTime).toLocaleString()\n              //                                          .slice(0, 17)\n              //                                          .replace(',', '')\n              //                                          .replace('T',' ');\n\n\n              taskObject.dueDateTimeFormatted = dayjs(taskObject.dueDateTime + \"Z\").format('DD MMM'); // ('DD/MM/YYYY HH:mm');\n              taskObject.dueDateTimeAgo = dayjs(taskObject.dueDateTime + \"Z\").fromNow();\n\n              // Added during \"Fix-Date-UTC-Update\"\n              // taskObject.dueDateTime = new Date(taskObject.dueDateTime.replace(',', '').replace('T',' ') + \" UTC\").toLocaleString();\n              taskObject.dueDateTime = this.convertUTCDateFromServerToLocalDate(taskObject.dueDateTime);\n              console.log('taskObject.dueDateTime = ', taskObject.dueDateTimeFormatted);\n            }\n\n            const categoriesNamesArray = [];\n            if (taskObject.categories !== null && taskObject.categories !== undefined) {\n              taskObject.categories.forEach((cat) => { categoriesNamesArray.push(cat.name); });\n              taskObject.categoriesString = categoriesNamesArray.join(', ');\n            }\n\n            if (taskObject.category !== null && taskObject.category.preferredTab !== null) {\n              this.preferredTab = taskObject.category.preferredTab;\n              this.displayRelevantTab();\n            }\n\n            const assigneesNamesArray = [];\n            taskObject.assignees.forEach((assignee) => { assigneesNamesArray.push(assignee.label); });\n            taskObject.assigneesString = assigneesNamesArray.join(', ');\n\n            if (taskObject.subTaskIds !== null) { taskObject.subTasksCount = taskObject.subTaskIds.length; } else { taskObject.subTasksCount = 0; }\n\n            if (taskObject.checklist !== null) {\n              taskObject.checklistCount = taskObject.checklist.length;\n\n              taskObject.checklist.forEach(item => {\n                if (item.updatedOn !== null) {\n                  // item.updatedOn = this.convertUTCDateFromServerToLocalDate(item.updatedOn);\n                  item.updatedOnFormatted = dayjs(item.updatedOn + \"Z\").format('DD/MM/YYYY HH:mm');\n                  item.updatedOnAgo = dayjs(item.updatedOn + \"Z\").fromNow();\n                  console.log('checklist-item.updatedOn = ', item.updatedOn);\n                }\n              });\n            }\n            else {\n              taskObject.checklistCount = 0;\n            }\n\n            // Assign the 'attachedFormsCount' prop (double-assignment)\n            taskObject.attachedFormsCount = taskObject.attachedFormsCount;\n\n            if (taskObject.ownerId !== null) { taskObject.ownedBy = taskObject.ownerId.split('#')[1]; }\n\n            if (taskObject.statusInfo !== null && taskObject.statusInfo !== undefined) {\n              taskObject.stageName = taskObject.statusInfo.label;\n            }\n\n            this.taskObject = taskObject;\n            this.loadPotentialMembersForReminders();\n            this.loadReminders();\n            this.loadTimelogs();\n            this.loadTaskTransitions();\n\n            // Load Hooks\n            this.loadCustomerHooks();\n            this.loadCustomerBranchesHooks();\n            // this.loadCustomerContactsHooks();\n\n            // Animate show the checkboxes.\n            setTimeout(() => {\n               Array.from(document.querySelectorAll(\".scaleZero\"))\n                    .forEach(checklist => {\n                        checklist.classList.remove(\"scaleZero\");\n                    });\n            }, 500);\n          }\n        };\n        const callbackError = (error) => {\n          console.error('Error in task-view-ms.getRecord()');\n          console.error(error);\n          UIkit.notification(\"<span uk-icon='icon: warning;ratio: 0.75'></span>\" + error, {\n            status: 'danger',\n            pos: 'bottom-left',\n            timeout: 5000\n          });\n        };\n\n        async function sendTaskToWorker () {\n            // const remoteFunction = Comlink.wrap(new Worker(\"resources/js/comlink-worker.js\"));\n            await ComlinkWorker.fetch(process.env.VUE_APP_API_URL + get_url,\n                               Comlink.proxy(callbackFunction),\n                               Comlink.proxy(callbackError));\n        }\n\n        sendTaskToWorker();\n      // Comlink ends here\n\n      return false;\n\n      axios.get(process.env.VUE_APP_API_URL + get_url)\n        .then((dataResponse) => {\n          callbackFunction(dataResponse);\n        })\n        .catch((error) => {\n          console.log(error);\n          return false;\n        });\n    },\n    openContextMenu (msgId, evt) {\n      document.getElementById('ctx_menu_' + msgId).style.top = '30px';\n\n      if (!document.getElementById('ctx_menu_' + msgId).classList.contains('opened')) {\n        // document.getElementById(\"ctx_menu_\" + msgId).style.display = \"grid\";\n        document.getElementById('ctx_menu_' + msgId).style.transform = 'scale(1)';\n        document.getElementById('ctx_menu_' + msgId).classList.add('opened');\n      } else {\n        // document.getElementById(\"ctx_menu_\" + msgId).style.display = \"none\";\n        document.getElementById('ctx_menu_' + msgId).style.transform = null;\n        document.getElementById('ctx_menu_' + msgId).classList.remove('opened');\n      }\n\n      // Add click-listener\n      document.querySelector('body').addEventListener('click', this.handleClickEventOnBody, false);\n\n      // document.getElementById(\"ctx-menu-trigger-\" + msgId).style.opacity=1;\n    },\n    hideContextMenu () {\n      document.querySelectorAll('.context-menu').forEach((item) => {\n        // item.style.display=\"none\";\n        item.style.transform = null;\n        item.classList.remove('opened');\n      });\n\n      // Remove click listener\n      document.querySelector('body').removeEventListener('click', this.handleClickEventOnBody, false);\n      document.getElementById('menu_slider').style.left = '0%';\n    },\n    handleClickEventOnBody (event) {\n      const foundParent = event.target.closest('.context-menu');\n      if (foundParent === null) {\n        // This means, if target on which the click happened is not within the context-menu div, so you can close the context-menu dropdown.\n        this.hideContextMenu();\n      }\n    },\n    onCustomerSelect (customerId) {\n      // alert(\"Customer \" + customerId + \" is selected.\");\n\n      this.customers.forEach(customer => {\n        if (customer.id === customerId) {\n          customer.isSelected = !customer.isSelected;\n          this.updateCustomerHook(customer);\n        }\n      });\n    },\n    onCustomerBranchSelect (customerBranchId) {\n      // alert(\"Customer \" + customerId + \" is selected.\");\n\n      this.customerBranches.forEach(customerBranch => {\n        if (customerBranch.id === customerBranchId) {\n          customerBranch.isSelected = !customerBranch.isSelected;\n          this.updateCustomerBranchHook(customerBranch);\n        }\n      });\n    }\n  },\n  created: function () {},\n  computed: {\n    storeCounter: function () {\n      // console.log('Accessing vuex store ', this.$store)\n      // console.log('Store data accessed from home page : ' + this.$store.getters.count);\n      return this.$store.getters.count;\n    }\n  },\n  mounted: function () {\n    console.log('################ task-view.vue ################' + this.embeddingViewName);\n\n    bus.off(\"reload_task_details\");\n    bus.on(\"reload_task_details\", (data) => {\n      this.getRecord();\n    });\n\n    bus.off(\"show_task_detail_tab\");\n    bus.on(\"show_task_detail_tab\", (data) => {\n\n      // Display tab based on eventType\n      console.log(data);\n\n      if (data.eventType === \"TASK_ACTIVITY_NEW_COMMENT\" || data.eventType === \"TASK_ACTIVITY_NEW_COMMENT\" || data.eventType === \"TASK_ACTIVITY_NEW_COMMENT_REPLY\") {\n        this.displayTab(null, 'activity');\n      }\n      else {\n        console.error(\"show_task_detail_tab's on-event's data event type is not handled yet. Handle it in task-view's mounted method for bus.on:show_task_detail_tab\", data);\n      }\n\n    });\n\n    // alert(this.loggedInUser.userId);\n\n    // console.log(\"Mounted task-view-ms.vue component \" + this.$route.params.taskId);\n    // this.$store.commit('increment');\n    // this.storeCounter();\n    // console.log('Accessing vuex store ', this.$store)\n    // console.log('Store data accessed from home page : ' + this.$store.getters.count)\n    // console.log('Done.........................')\n\n    // UIkit.switcher(document.getElementById(this.embeddingViewName + '_switcherTabs'), {\n    //   beforeshow: function (e) {\n    //     alert(e);\n    //   }\n    // });\n\n\n    // setTimeout(() => {\n    //   UIkit.util.on('.uk-switcher', 'beforeshow', function (ev) {\n    //     // this works and stop navigation to next clicked tab\n    //       ev.preventDefault();\n    //   });\n    // }, 500);\n\n    // If this component is used for viewing a task in modal, then ignore loading the details of params.taskId.\n    if (this.isModalViewed) {\n      return false;\n    }\n\n    if (this.$route.params.taskId !== null && this.$route.params.taskId !== undefined) {\n      this.viewSubTask = false;\n      this.showNewSubTaskForm = false;\n      this.parentTaskName = null;\n      this.taskObject.id = this.$route.params.taskId;\n\n      this.getRecord();\n    }\n\n    if (this.$route.params.subtaskId !== null && this.$route.params.subtaskId !== undefined && this.$route.params.subtaskId !== 'none') {\n      this.taskObject.id = this.$route.params.subtaskId;\n      UIkit.switcher(document.getElementById(this.embeddingViewName + '_switcherTabs')).show(0);\n      this.viewSubTask = true;\n      this.showNewSubTaskForm = false;\n      this.getRecord();\n    }\n\n\n  },\n\n  unmounted: function () {\n\n    // Remove all modals as they get created everytime in the DOM when this component is mounted again and again.\n    // This causes the same DOM element with the same ID to be created multiple times and causes data corruption.\n    // Hence all modals mounted by a .vue component must be deleted from the DOM when the .vue component is unmounted.\n\n    const modalIdsToBeDeletedFromDOM = ['#' + this.uniqueComponentId + '_add_reminder_modal'];\n    // alert(\"Unmounting reminder modal \" + modalIdsToBeDeletedFromDOM);\n    modalIdsToBeDeletedFromDOM.forEach(modalId => {\n        const modal = document.querySelector(modalId);\n        if (modal !== null) {\n          modal.parentElement.removeChild(modal);\n          // alert(\"_add_reminder_modal removed\");\n        }\n    });\n\n  },\n  watch: {\n\n    // Since we are passing an asynced data as 'availableItems', it is necessary to watch this prop when it receives new data.\n    // selectedTask:function(newTask, oldTask){\n    //     console.log(\"id changed from \" + oldTask.id + \" to \" + newTask.id);\n    //     this.taskObject = newTask;\n    //     //this.getRecord();\n    // },\n    'loggedInUser.userId' (newVal, oldVal) {\n        console.log(this.loggedInUser.userId);\n    },\n    'taskIdToBeViewed' (newVal, oldVal) {\n        this.viewSubTask = false;\n        this.showNewSubTaskForm = false;\n        this.parentTaskName = null;\n        this.taskObject.id = this.taskIdToBeViewed;\n        this.getRecord();\n        return false;\n    },\n    '$route.params.taskId' (newTaskId, oldTaskId) {\n      console.log('Task ID changed from ' + oldTaskId + ' to ' + newTaskId);\n\n      if (newTaskId !== 'none') {\n        this.viewSubTask = false;\n        this.parentTaskName = null;\n        this.taskId = newTaskId;\n        this.taskObject.id = newTaskId;\n\n        // Reset the tab-initializations if the selectedTask changes.\n        // this.selectedTabKey = 'description';\n        this.isActivityTabInitialized = false;\n        this.isSubtasksTabInitialized = false;\n        this.isChecklistsTabInitialized = false;\n        this.isRemindersTabInitialized = false;\n        this.isTimelogsTabInitialized = false;\n        this.isTransitionsTabInitialized = false;\n        this.isFormsTabInitialized = false;\n        this.isHooksTabInitialized = false;\n        console.log(\"All Tabs initializations are reset. this.selectedTabKey is \", this.selectedTabKey);\n\n        this.getRecord();\n      }\n    },\n    '$route.params.subtaskId' (newSubTaskId, oldSubTaskId) {\n      console.log('SubTask ID changed from ' + oldSubTaskId + ' to ' + newSubTaskId + ' in the task-view-ms.vue component.');\n\n      if (newSubTaskId !== 'none') {\n        this.parentTaskName = this.taskObject.sno;\n        this.taskObject.id = newSubTaskId;\n        UIkit.switcher(document.getElementById(this.embeddingViewName + '_switcherTabs')).show(0);\n        this.viewSubTask = true;\n        this.getRecord();\n      }\n    }\n  }\n};\n\n</script>\n\n<style scoped>\n\n  .scaleZero{\n    transform: scale(0);\n  }\n\n  .uk-subnav-pill > .uk-active > a[data-v-5cb99e14] {\n    border-bottom: 2px solid #4698f5!important;\n    color: #4698f5;\n    background-color: #fff0!important;\n  }\n\n\n  .task_details_container {\n    display: grid;\n    grid-template-rows: auto auto 1fr;\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    overflow-y: hidden;\n  }\n\n  .task_details_container .task_title {\n    font-size: 1.25rem;\n    font-weight: bold;\n    color: #404040;\n    padding: 10px;\n    margin-left: 15px;\n    z-index: 1;\n  }\n\n  .task_details_container .task_created_by {\n    font-size: 0.65rem;\n    font-weight: bold;\n  }\n\n  .task_details_container .task_created_on {\n    font-size: 0.55rem;\n    font-weight: bold;\n  }\n\n  .tab-bar > li {\n    cursor:pointer;\n    padding-left: 0px;\n    transform-origin:center center;\n    transition: 0.1s ease-in;\n  }\n\n  .tab-bar > li:hover:not(.active) {\n    cursor: pointer;\n    background-color: #f7f7f7;\n    border-radius: 4px;\n  }\n\n  .tab-bar > li:active {\n    transform:scale(0.95);\n  }\n\n\n  .tab-bar > li > a {\n    display: flex;\n    column-gap: 10px;\n  }\n\n  .tab-bar > li .tab_label {\n    display: none;\n  }\n\n  .tab-bar > li.uk-active .tab_label {\n    display: block !important;\n  }\n\n  .uk-subnav-pill > * > a {\n    font-size: 0.55rem !important;\n    border-radius: 0px;\n    letter-spacing: 0.075rem;\n  }\n\n  .uk-subnav-pill > .uk-active > a {\n    border-bottom: 2px solid #4698f5!important;\n    color: #4698f5;\n    background-color: #fff!important;\n  }\n\n  .uk-input, .uk-select:not([multiple]):not([size]) {\n      height: 35px;\n      vertical-align: middle;\n      display: inline-block;\n      background: #fbfbfb;\n      border-radius: 3px;\n  }\n\n  .uk-grid-small > div{\n    margin-bottom:0px;\n  }\n\n  .uk-form-label {\n    font-size: .66rem;\n    text-transform: capitalize;\n    letter-spacing: 1px;\n    color: black;\n  }\n\n    .subtask-back-button{\n      background-color: hsl(0deg 1% 72% / 18%);\n      border-radius: 50%;\n      place-self: center start;\n      place-items: center;\n      font-size: .65rem;\n      line-height: 32px;\n      font-weight: 400!important;\n      padding: 0 7px;\n      fill: #0de60d;\n      color: rgb(255 255 255);\n      transition: .25s linear;\n    }\n\n    .subtask-back-button:hover {\n        background-color: hsl(0deg 2% 8% / 10%);\n    }\n\n    .subtask-back-button > svg > path {\n      background-color: rgb(232 232 232);\n      fill: rgb(101 101 101);\n    }\n\n    .subtask-back-button:hover > svg > path {\n      fill: rgb(60 60 60);\n    }\n\n    .updateTaskInfoTrigger{\n      background: rgb(243 243 243);\n      border-radius: 50%;\n      padding: 3px;\n      cursor: pointer;\n      line-height:0px;\n    }\n\n    .updateTaskInfoTrigger:hover{\n      background: #e4e4e4;\n    }\n\n      .opened{\n        opacity:1;\n      }\n\n      .chat-context-menu-trigger{\n        color:#6b6b6b;\n        position: absolute;top: 10px;right: 5px;font-size: 1.5rem;\n        transition: .15s linear;\n        padding:5px;\n        border-radius: 50%;\n      }\n\n      .chat-context-menu-trigger:hover{\n        cursor:pointer;\n        /*color:rgb(240, 80, 110);*/\n        transform: scale(1.05);\n      }\n\n      .chat-context-menu{\n        display:none;\n        position: absolute;\n        top: 10px;\n        right: 5px;\n        font-size: 1.5rem;\n        width:100px;\n        height:150px;\n        background-color:#fff;\n      }\n\n      .chat-context-menu-visible{\n        display:grid;\n      }\n\n      .context-menu{\n        display:none;\n        position:absolute;\n        right: 0px;\n        top: 30px;\n        background-color: #ffffff;\n        border: 1px solid #cecece;\n        border: 1px solid #cecece;\n        border-radius:3px;\n        padding: 10px;\n        z-index:2;\n        /*filter: drop-shadow(1px 2px 5px #cecece);*/\n        color: #6b6b6b;\n\n        display: grid;right:0px;\n        transform-origin: right top;opacity: 1;\n        transform: scale(0);transition: 0.125s linear;\n        min-width: 200px;\n        font-size: 0.75rem;\n        box-shadow: rgb(0 0 0 / 12%) 0px 2px 12px 0px;\n      }\n\n      .context-menu>div>div{\n        padding:5px;\n        border-radius:1px;\n      }\n\n      .context-menu>div>div:hover{\n        /*background-color:#f0f0f0;\n        cursor:pointer;*/\n      }\n\n      .sent-ctx-menu-trigger, .recd-ctx-menu-trigger{\n        padding:5px;\n        border-radius:50%;\n      }\n\n      .recd-ctx-menu-trigger:hover{\n        cursor: pointer;\n        xbackground-color:#3269a9fa;\n      }\n\n      .sent-ctx-menu-trigger:hover{\n        cursor: pointer;\n        background-color:#f0f0f0;\n      }\n\n      .ctx-menu-trigger:active{\n        transform:scale(0.85) !important;\n      }\n\n      /* Context sliding menu */\n\n      .menu_container{\n\t\t\t\tposition: relative;\n\t\t\t\twidth:300px;\n\t\t\t\theight:300px;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\toverflow-x: hidden;\n\t\t\t}\n\n\t\t\t.menu_slider{\n\t\t\t\tposition: absolute;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: row;\n\t\t\t\tleft : 0px;\n\t\t\t\ttransition: 0.25s linear;\n\t\t\t\twidth: 100%;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}\n\n\t\t\t.menu{\n\t\t\t\txbackground: yellow;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tmin-width: 100%;\n\t\t\t\tborder:0px solid red;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}\n\n\t\t\t.submenu{\n\t\t\t\txbackground: greenyellow;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tmin-width: 100%;\n\t\t\t\tborder:0px solid black;\n\t\t\t\tbox-sizing: border-box;\n        padding-top: 10px;\n\t\t\t}\n\n\t\t\t.menu_fixed_height{\n\t\t\t\theight:250px;\n\t\t\t\toverflow-y: auto;\n\t\t\t}\n\n      .submenu_container{\n        display: flex;\n        flex-direction: column;\n        min-width: 100%;\n      }\n\n      .submenu_category{\n        display: flex;\n        flex-direction: column;\n      }\n\n      .menu > div, .submenu > div > div{\n        padding: 5px;\n        display: flex;\n        align-items: center;\n        justify-content: left;\n      }\n\n      .menu > div:hover, .submenu > div > div:hover{\n        background-color:#f0f0f0;\n        cursor:pointer;\n      }\n\n      .menu_container ul{\n        list-style:none;\n      }\n\n      .menu_container li{\n        line-height:25px;\n        list-style:none;\n      }\n\n      .list-item-menu{\n        transition:0.25s linear;\n        background-color: rgb(243 243 243);\n        border-radius: 50%;\n        padding: 5px;\n        transform-origin:50% 50%;\n      }\n\n      .list-item-menu:hover{\n        cursor:pointer;\n        transform: rotate(90deg);\n      }\n\n</style>\n","import { render } from \"./taskview.vue?vue&type=template&id=ff0a7814&scoped=true\"\nimport script from \"./taskview.vue?vue&type=script&lang=js\"\nexport * from \"./taskview.vue?vue&type=script&lang=js\"\n\nimport \"./taskview.vue?vue&type=style&index=0&id=ff0a7814&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-ff0a7814\"\n\nexport default script","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./taskview.vue?vue&type=style&index=0&id=ff0a7814&scoped=true&lang=css\""],"sourceRoot":""}